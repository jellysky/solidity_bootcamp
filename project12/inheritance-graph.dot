digraph "" {
c29_Context -> c766_Initializable;
c29_Context[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Context</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _msgSender()</TD></TR><TR><TD align="left">    _msgData()</TD></TR></TABLE> >];

c216_SafeMath[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>SafeMath</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    add(uint256,uint256)</TD></TR><TR><TD align="left">    sub(uint256,uint256)</TD></TR><TR><TD align="left">    sub(uint256,uint256,string)</TD></TR><TR><TD align="left">    mul(uint256,uint256)</TD></TR><TR><TD align="left">    div(uint256,uint256)</TD></TR><TR><TD align="left">    div(uint256,uint256,string)</TD></TR><TR><TD align="left">    mod(uint256,uint256)</TD></TR><TR><TD align="left">    mod(uint256,uint256,string)</TD></TR></TABLE> >];

c628_ERC20 -> c766_Initializable [ label="1" ];
c628_ERC20 -> c29_Context [ label="2" ];
c628_ERC20 -> c697_IERC20 [ label="3" ];
c628_ERC20[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>ERC20</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left"><font color="#FFA500">    totalSupply()</font></TD></TR><TR><TD align="left"><font color="#FFA500">    balanceOf(address)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    transfer(address,uint256)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    allowance(address,address)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    approve(address,uint256)</font></TD></TR><TR><TD align="left"><font color="#FFA500">    transferFrom(address,address,uint256)</font></TD></TR><TR><TD align="left">    increaseAllowance(address,uint256)</TD></TR><TR><TD align="left">    decreaseAllowance(address,uint256)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    _transfer(address,address,uint256)</TD></TR><TR><TD align="left">    _mint(address,uint256)</TD></TR><TR><TD align="left">    _burn(address,uint256)</TD></TR><TR><TD align="left">    _approve(address,address,uint256)</TD></TR><TR><TD align="left">    _burnFrom(address,uint256)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    _balances</TD></TR><TR><TD align="left">    _allowances</TD></TR><TR><TD align="left">    _totalSupply</TD></TR><TR><TD align="left"><font color="red">    ______gap</font></TD></TR></TABLE> >];

c697_IERC20[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IERC20</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    totalSupply()</TD></TR><TR><TD align="left">    balanceOf(address)</TD></TR><TR><TD align="left">    transfer(address,uint256)</TD></TR><TR><TD align="left">    allowance(address,address)</TD></TR><TR><TD align="left">    approve(address,uint256)</TD></TR><TR><TD align="left">    transferFrom(address,address,uint256)</TD></TR></TABLE> >];

c766_Initializable[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Initializable</B></TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    isConstructor()</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    initializer()</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    initialized</TD></TR><TR><TD align="left">    initializing</TD></TR><TR><TD align="left">    ______gap</TD></TR></TABLE> >];

c1477_Faker[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Faker</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    deposit(uint256)</TD></TR><TR><TD align="left">    withdrawMaker()</TD></TR><TR><TD align="left">    submitBid(uint256)</TD></TR><TR><TD align="left">    voteByAddresses(address[])</TD></TR><TR><TD align="left">    voteBySlate(bytes32)</TD></TR><TR><TD align="left">    withdrawEarnings(uint256[])</TD></TR><TR><TD align="left">    getCurrentPeriod()</TD></TR><TR><TD align="left">    getCurrentPhase()</TD></TR><TR><TD align="left">    isShift()</TD></TR><TR><TD align="left">    isAuction()</TD></TR><TR><TD align="left">    hasWithdrawnEarnings(address,uint256)</TD></TR><TR><TD align="left"><I>Private Functions:</I></TD></TR><TR><TD align="left">    withdrawPhaseEarnings(uint256)</TD></TR><TR><TD align="left">    recordEarningsWithdrawal(address,uint256)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    onlyShift()</TD></TR><TR><TD align="left">    onlyAuction()</TD></TR><TR><TD align="left">    onlyWinner()</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    mkrContract<font color="blue" POINT-SIZE="10"> (IERC20)</font></TD></TR><TR><TD align="left">    bidToken<font color="blue" POINT-SIZE="10"> (IERC20)</font></TD></TR><TR><TD align="left">    chiefContract<font color="blue" POINT-SIZE="10"> (IChief)</font></TD></TR><TR><TD align="left">    deploymentTime</TD></TR><TR><TD align="left">    periodLength</TD></TR><TR><TD align="left">    makerDeposits</TD></TR><TR><TD align="left">    totalMaker</TD></TR><TR><TD align="left">    bids</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left">    phaseLength</TD></TR><TR><TD align="left">    phaseEarningWithdrawals</TD></TR></TABLE> >];

c1531_IChief[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>IChief</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    lock(uint256)</TD></TR><TR><TD align="left">    free(uint256)</TD></TR><TR><TD align="left">    etch(address[])</TD></TR><TR><TD align="left">    vote(address[])</TD></TR><TR><TD align="left">    vote(bytes32)</TD></TR><TR><TD align="left">    lift(address)</TD></TR><TR><TD align="left">    approvals(address)</TD></TR><TR><TD align="left">    GOV()</TD></TR><TR><TD align="left">    IOU()</TD></TR></TABLE> >];

c1568_Migrations[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>Migrations</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    setCompleted(uint256)</TD></TR><TR><TD align="left"><I>Modifiers:</I></TD></TR><TR><TD align="left">    restricted()</TD></TR><TR><TD align="left"><I>Public Variables:</I></TD></TR><TR><TD align="left">    owner</TD></TR><TR><TD align="left">    last_completed_migration</TD></TR></TABLE> >];

c1599_TestToken -> c628_ERC20;
c1599_TestToken[shape="box"label=< <TABLE border="0"><TR><TD align="center"><B>TestToken</B></TD></TR><TR><TD align="left"><I>Public Functions:</I></TD></TR><TR><TD align="left">    mint(address,uint256)</TD></TR><TR><TD align="left"><I>Private Variables:</I></TD></TR><TR><TD align="left"><font color="red">    ______gap</font></TD></TR></TABLE> >];

}