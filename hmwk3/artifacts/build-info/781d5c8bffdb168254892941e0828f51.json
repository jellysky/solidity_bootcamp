{"id":"781d5c8bffdb168254892941e0828f51","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n */\ninterface IVotes {\n    /**\n     * @dev The signature used has expired.\n     */\n    error VotesExpiredSignature(uint256 expiry);\n\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousVotes, uint256 newVotes);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/governance/utils/Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (governance/utils/Votes.sol)\npragma solidity ^0.8.20;\n\nimport {IERC5805} from \"../../interfaces/IERC5805.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Nonces} from \"../../utils/Nonces.sol\";\nimport {EIP712} from \"../../utils/cryptography/EIP712.sol\";\nimport {Checkpoints} from \"../../utils/structs/Checkpoints.sol\";\nimport {SafeCast} from \"../../utils/math/SafeCast.sol\";\nimport {ECDSA} from \"../../utils/cryptography/ECDSA.sol\";\nimport {Time} from \"../../utils/types/Time.sol\";\n\n/**\n * @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n * transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n * \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n * decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n * delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n *\n * This contract is often combined with a token contract such that voting units correspond to token units. For an\n * example, see {ERC721Votes}.\n *\n * The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n * at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n * cost of this history tracking optional.\n *\n * When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n * {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n * previous example, it would be included in {ERC721-_update}).\n */\nabstract contract Votes is Context, EIP712, Nonces, IERC5805 {\n    using Checkpoints for Checkpoints.Trace208;\n\n    bytes32 private constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address account => address) private _delegatee;\n\n    mapping(address delegatee => Checkpoints.Trace208) private _delegateCheckpoints;\n\n    Checkpoints.Trace208 private _totalCheckpoints;\n\n    /**\n     * @dev The clock was incorrectly modified.\n     */\n    error ERC6372InconsistentClock();\n\n    /**\n     * @dev Lookup to future votes is not available.\n     */\n    error ERC5805FutureLookup(uint256 timepoint, uint48 clock);\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n     * checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\n     */\n    function clock() public view virtual returns (uint48) {\n        return Time.blockNumber();\n    }\n\n    /**\n     * @dev Machine-readable description of the clock as specified in EIP-6372.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual returns (string memory) {\n        // Check that the clock was not modified\n        if (clock() != Time.blockNumber()) {\n            revert ERC6372InconsistentClock();\n        }\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) public view virtual returns (uint256) {\n        return _delegateCheckpoints[account].latest();\n    }\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _delegateCheckpoints[account].upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual returns (uint256) {\n        uint48 currentTimepoint = clock();\n        if (timepoint >= currentTimepoint) {\n            revert ERC5805FutureLookup(timepoint, currentTimepoint);\n        }\n        return _totalCheckpoints.upperLookupRecent(SafeCast.toUint48(timepoint));\n    }\n\n    /**\n     * @dev Returns the current total supply of votes.\n     */\n    function _getTotalSupply() internal view virtual returns (uint256) {\n        return _totalCheckpoints.latest();\n    }\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) public view virtual returns (address) {\n        return _delegatee[account];\n    }\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual {\n        address account = _msgSender();\n        _delegate(account, delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > expiry) {\n            revert VotesExpiredSignature(expiry);\n        }\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        _useCheckedNonce(signer, nonce);\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Delegate all of `account`'s voting units to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address account, address delegatee) internal virtual {\n        address oldDelegate = delegates(account);\n        _delegatee[account] = delegatee;\n\n        emit DelegateChanged(account, oldDelegate, delegatee);\n        _moveDelegateVotes(oldDelegate, delegatee, _getVotingUnits(account));\n    }\n\n    /**\n     * @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n     * should be zero. Total supply of voting units will be adjusted with mints and burns.\n     */\n    function _transferVotingUnits(address from, address to, uint256 amount) internal virtual {\n        if (from == address(0)) {\n            _push(_totalCheckpoints, _add, SafeCast.toUint208(amount));\n        }\n        if (to == address(0)) {\n            _push(_totalCheckpoints, _subtract, SafeCast.toUint208(amount));\n        }\n        _moveDelegateVotes(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Moves delegated votes from one delegate to another.\n     */\n    function _moveDelegateVotes(address from, address to, uint256 amount) private {\n        if (from != to && amount > 0) {\n            if (from != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[from],\n                    _subtract,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(from, oldValue, newValue);\n            }\n            if (to != address(0)) {\n                (uint256 oldValue, uint256 newValue) = _push(\n                    _delegateCheckpoints[to],\n                    _add,\n                    SafeCast.toUint208(amount)\n                );\n                emit DelegateVotesChanged(to, oldValue, newValue);\n            }\n        }\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function _numCheckpoints(address account) internal view virtual returns (uint32) {\n        return SafeCast.toUint32(_delegateCheckpoints[account].length());\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function _checkpoints(\n        address account,\n        uint32 pos\n    ) internal view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _delegateCheckpoints[account].at(pos);\n    }\n\n    function _push(\n        Checkpoints.Trace208 storage store,\n        function(uint208, uint208) view returns (uint208) op,\n        uint208 delta\n    ) private returns (uint208, uint208) {\n        return store.push(clock(), op(store.latest(), delta));\n    }\n\n    function _add(uint208 a, uint208 b) private pure returns (uint208) {\n        return a + b;\n    }\n\n    function _subtract(uint208 a, uint208 b) private pure returns (uint208) {\n        return a - b;\n    }\n\n    /**\n     * @dev Must return the voting units held by an account.\n     */\n    function _getVotingUnits(address) internal view virtual returns (uint256);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.20;\n\nimport {IVotes} from \"../governance/utils/IVotes.sol\";\nimport {IERC6372} from \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Votes} from \"../../../governance/utils/Votes.sol\";\nimport {Checkpoints} from \"../../../utils/structs/Checkpoints.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n */\nabstract contract ERC20Votes is ERC20, Votes {\n    /**\n     * @dev Total supply cap has been exceeded, introducing a risk of votes overflowing.\n     */\n    error ERC20ExceededSafeSupply(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n     *\n     * This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n     * so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n     * remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n     * {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n     * additional logic requires it. When resolving override conflicts on this function, the minimum should be\n     * returned.\n     */\n    function _maxSupply() internal view virtual returns (uint256) {\n        return type(uint208).max;\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n        if (from == address(0)) {\n            uint256 supply = totalSupply();\n            uint256 cap = _maxSupply();\n            if (supply > cap) {\n                revert ERC20ExceededSafeSupply(supply, cap);\n            }\n        }\n        _transferVotingUnits(from, to, value);\n    }\n\n    /**\n     * @dev Returns the voting units of an `account`.\n     *\n     * WARNING: Overriding this function may compromise the internal vote accounting.\n     * `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change.\n     */\n    function _getVotingUnits(address account) internal view virtual override returns (uint256) {\n        return balanceOf(account);\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return _numCheckpoints(account);\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoints.Checkpoint208 memory) {\n        return _checkpoints(account, pos);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/Checkpoints.sol)\n// This file was procedurally generated from scripts/generate/templates/Checkpoints.js.\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\n\n/**\n * @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n * time, and later looking up past values by block number. See {Votes} as an example.\n *\n * To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n * checkpoint for the current transaction block using the {push} function.\n */\nlibrary Checkpoints {\n    /**\n     * @dev A value was attempted to be inserted on a past checkpoint.\n     */\n    error CheckpointUnorderedInsertion();\n\n    struct Trace224 {\n        Checkpoint224[] _checkpoints;\n    }\n\n    struct Checkpoint224 {\n        uint32 _key;\n        uint224 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n     * library.\n     */\n    function push(Trace224 storage self, uint32 key, uint224 value) internal returns (uint224, uint224) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace224 storage self, uint32 key) internal view returns (uint224) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace224 storage self) internal view returns (uint224) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace224 storage self) internal view returns (bool exists, uint32 _key, uint224 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint224 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace224 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace224 storage self, uint32 pos) internal view returns (Checkpoint224 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint224[] storage self, uint32 key, uint224 value) private returns (uint224, uint224) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint224 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint224({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint224({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint224[] storage self,\n        uint32 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint224[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint224 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace208 {\n        Checkpoint208[] _checkpoints;\n    }\n\n    struct Checkpoint208 {\n        uint48 _key;\n        uint208 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n     * library.\n     */\n    function push(Trace208 storage self, uint48 key, uint208 value) internal returns (uint208, uint208) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace208 storage self, uint48 key) internal view returns (uint208) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace208 storage self) internal view returns (uint208) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace208 storage self) internal view returns (bool exists, uint48 _key, uint208 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint208 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace208 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace208 storage self, uint32 pos) internal view returns (Checkpoint208 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint208[] storage self, uint48 key, uint208 value) private returns (uint208, uint208) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint208 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint208({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint208({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint208[] storage self,\n        uint48 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint208[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint208 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n\n    struct Trace160 {\n        Checkpoint160[] _checkpoints;\n    }\n\n    struct Checkpoint160 {\n        uint96 _key;\n        uint160 _value;\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n     *\n     * Returns previous value and new value.\n     *\n     * IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n     * library.\n     */\n    function push(Trace160 storage self, uint96 key, uint160 value) internal returns (uint160, uint160) {\n        return _insert(self._checkpoints, key, value);\n    }\n\n    /**\n     * @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n     * there is none.\n     */\n    function lowerLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _lowerBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == len ? 0 : _unsafeAccess(self._checkpoints, pos)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     */\n    function upperLookup(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, 0, len);\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n     * if there is none.\n     *\n     * NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n     * keys).\n     */\n    function upperLookupRecent(Trace160 storage self, uint96 key) internal view returns (uint160) {\n        uint256 len = self._checkpoints.length;\n\n        uint256 low = 0;\n        uint256 high = len;\n\n        if (len > 5) {\n            uint256 mid = len - Math.sqrt(len);\n            if (key < _unsafeAccess(self._checkpoints, mid)._key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        uint256 pos = _upperBinaryLookup(self._checkpoints, key, low, high);\n\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints.\n     */\n    function latest(Trace160 storage self) internal view returns (uint160) {\n        uint256 pos = self._checkpoints.length;\n        return pos == 0 ? 0 : _unsafeAccess(self._checkpoints, pos - 1)._value;\n    }\n\n    /**\n     * @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n     * in the most recent checkpoint.\n     */\n    function latestCheckpoint(Trace160 storage self) internal view returns (bool exists, uint96 _key, uint160 _value) {\n        uint256 pos = self._checkpoints.length;\n        if (pos == 0) {\n            return (false, 0, 0);\n        } else {\n            Checkpoint160 memory ckpt = _unsafeAccess(self._checkpoints, pos - 1);\n            return (true, ckpt._key, ckpt._value);\n        }\n    }\n\n    /**\n     * @dev Returns the number of checkpoint.\n     */\n    function length(Trace160 storage self) internal view returns (uint256) {\n        return self._checkpoints.length;\n    }\n\n    /**\n     * @dev Returns checkpoint at given position.\n     */\n    function at(Trace160 storage self, uint32 pos) internal view returns (Checkpoint160 memory) {\n        return self._checkpoints[pos];\n    }\n\n    /**\n     * @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n     * or by updating the last one.\n     */\n    function _insert(Checkpoint160[] storage self, uint96 key, uint160 value) private returns (uint160, uint160) {\n        uint256 pos = self.length;\n\n        if (pos > 0) {\n            // Copying to memory is important here.\n            Checkpoint160 memory last = _unsafeAccess(self, pos - 1);\n\n            // Checkpoint keys must be non-decreasing.\n            if (last._key > key) {\n                revert CheckpointUnorderedInsertion();\n            }\n\n            // Update or push new checkpoint\n            if (last._key == key) {\n                _unsafeAccess(self, pos - 1)._value = value;\n            } else {\n                self.push(Checkpoint160({_key: key, _value: value}));\n            }\n            return (last._value, value);\n        } else {\n            self.push(Checkpoint160({_key: key, _value: value}));\n            return (0, value);\n        }\n    }\n\n    /**\n     * @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n     * if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n     * `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _upperBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key > key) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n     * `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n     * exclusive `high`.\n     *\n     * WARNING: `high` should not be greater than the array's length.\n     */\n    function _lowerBinaryLookup(\n        Checkpoint160[] storage self,\n        uint96 key,\n        uint256 low,\n        uint256 high\n    ) private view returns (uint256) {\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(self, mid)._key < key) {\n                low = mid + 1;\n            } else {\n                high = mid;\n            }\n        }\n        return high;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(\n        Checkpoint160[] storage self,\n        uint256 pos\n    ) private pure returns (Checkpoint160 storage result) {\n        assembly {\n            mstore(0, self.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/types/Time.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/types/Time.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"../math/Math.sol\";\nimport {SafeCast} from \"../math/SafeCast.sol\";\n\n/**\n * @dev This library provides helpers for manipulating time-related objects.\n *\n * It uses the following types:\n * - `uint48` for timepoints\n * - `uint32` for durations\n *\n * While the library doesn't provide specific types for timepoints and duration, it does provide:\n * - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n * - additional helper functions\n */\nlibrary Time {\n    using Time for *;\n\n    /**\n     * @dev Get the block timestamp as a Timepoint.\n     */\n    function timestamp() internal view returns (uint48) {\n        return SafeCast.toUint48(block.timestamp);\n    }\n\n    /**\n     * @dev Get the block number as a Timepoint.\n     */\n    function blockNumber() internal view returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    // ==================================================== Delay =====================================================\n    /**\n     * @dev A `Delay` is a uint32 duration that can be programmed to change value automatically at a given point in the\n     * future. The \"effect\" timepoint describes when the transitions happens from the \"old\" value to the \"new\" value.\n     * This allows updating the delay applied to some operation while keeping some guarantees.\n     *\n     * In particular, the {update} function guarantees that if the delay is reduced, the old delay still applies for\n     * some time. For example if the delay is currently 7 days to do an upgrade, the admin should not be able to set\n     * the delay to 0 and upgrade immediately. If the admin wants to reduce the delay, the old delay (7 days) should\n     * still apply for some time.\n     *\n     *\n     * The `Delay` type is 112 bits long, and packs the following:\n     *\n     * ```\n     *   | [uint48]: effect date (timepoint)\n     *   |           | [uint32]: value before (duration)\n     *   ↓           ↓       ↓ [uint32]: value after (duration)\n     * 0xAAAAAAAAAAAABBBBBBBBCCCCCCCC\n     * ```\n     *\n     * NOTE: The {get} and {withUpdate} functions operate using timestamps. Block number based delays are not currently\n     * supported.\n     */\n    type Delay is uint112;\n\n    /**\n     * @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature\n     */\n    function toDelay(uint32 duration) internal pure returns (Delay) {\n        return Delay.wrap(duration);\n    }\n\n    /**\n     * @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n     * change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered.\n     */\n    function _getFullAt(Delay self, uint48 timepoint) private pure returns (uint32, uint32, uint48) {\n        (uint32 valueBefore, uint32 valueAfter, uint48 effect) = self.unpack();\n        return effect <= timepoint ? (valueAfter, 0, 0) : (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n     * effect timepoint is 0, then the pending value should not be considered.\n     */\n    function getFull(Delay self) internal view returns (uint32, uint32, uint48) {\n        return _getFullAt(self, timestamp());\n    }\n\n    /**\n     * @dev Get the current value.\n     */\n    function get(Delay self) internal view returns (uint32) {\n        (uint32 delay, , ) = self.getFull();\n        return delay;\n    }\n\n    /**\n     * @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n     * enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n     * new delay becomes effective.\n     */\n    function withUpdate(\n        Delay self,\n        uint32 newValue,\n        uint32 minSetback\n    ) internal view returns (Delay updatedDelay, uint48 effect) {\n        uint32 value = self.get();\n        uint32 setback = uint32(Math.max(minSetback, value > newValue ? value - newValue : 0));\n        effect = timestamp() + setback;\n        return (pack(value, newValue, effect), effect);\n    }\n\n    /**\n     * @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint).\n     */\n    function unpack(Delay self) internal pure returns (uint32 valueBefore, uint32 valueAfter, uint48 effect) {\n        uint112 raw = Delay.unwrap(self);\n\n        valueAfter = uint32(raw);\n        valueBefore = uint32(raw >> 32);\n        effect = uint48(raw >> 64);\n\n        return (valueBefore, valueAfter, effect);\n    }\n\n    /**\n     * @dev pack the components into a Delay object.\n     */\n    function pack(uint32 valueBefore, uint32 valueAfter, uint48 effect) internal pure returns (Delay) {\n        return Delay.wrap((uint112(effect) << 64) | (uint112(valueBefore) << 32) | uint112(valueAfter));\n    }\n}\n"},"contracts/MyToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract MyToken is ERC20, ERC20Permit, ERC20Votes, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor() ERC20(\"MyToken\", \"MTK\") ERC20Permit(\"MyToken\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Votes)\n    {\n        super._update(from, to, value);\n    }\n\n    function nonces(address owner)\n        public\n        view\n        override(ERC20Permit, Nonces)\n        returns (uint256)\n    {\n        return super.nonces(owner);\n    }\n}"},"contracts/TokenizedBallot.sol":{"content":"\n// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IMyToken {\n    function getPastVotes(address, uint256) external view returns (uint256); // can access contract from another address's viewpoint\n}\n\ncontract TokenizedBallot {\n    struct Proposal {\n        bytes32 name;\n        uint voteCount;\n    }\n\n    IMyToken public tokenContract;\n    Proposal[] public proposals;\n    uint256 public targetBlockNumber;\n    mapping (address => uint) public votePowerSpent;\n\n    constructor(bytes32[] memory _proposalNames,address _tokenContract,uint256 _targetBlockNumber) {\n        tokenContract = IMyToken(_tokenContract);\n        targetBlockNumber = _targetBlockNumber;\n        // TODO: Validate if targetBlockNumber is in the past\n        for (uint i = 0; i < _proposalNames.length; i++) {\n            proposals.push(Proposal({name: _proposalNames[i], voteCount: 0}));\n        }\n    }\n\n    function vote(uint256 proposal, uint256 amount) external {\n        // TODO: Implement vote function\n        // get amount of voting power, depending of voting power of that token\n        // use external calls to do it (help IMyToken tokenContract)\n        // cliff period: targetBlockNumber (it accounts for votes in X time in the past, example: airdrop snapshot)\n\n        require(tokenContract.getPastVotes(msg.sender, targetBlockNumber) - votePowerSpent[msg.sender] >= amount, \"Not enough voting power\");\n        votePowerSpent[msg.sender] += amount;\n        proposals[proposal].voteCount += amount;\n    }\n\n    function winningProposal() public view returns (uint winningProposal_) {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    function winnerName() external view returns (bytes32 winnerName_) {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[2167],"ERC165":[3490],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":2168,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3491,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2167,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3490,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,3490,3502,378,2167],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3489],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"235:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"256:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"323:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"364:7:1","nodeType":"VariableDeclaration","scope":305,"src":"356:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"381:10:1","nodeType":"VariableDeclaration","scope":305,"src":"373:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"373:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"355:37:1"},"src":"317:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"399:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"558:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"586:2:1"},"src":"552:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"595:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"860:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"893:4:1","nodeType":"VariableDeclaration","scope":317,"src":"877:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"915:17:1","nodeType":"VariableDeclaration","scope":317,"src":"899:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"899:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"950:12:1","nodeType":"VariableDeclaration","scope":317,"src":"934:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"934:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"876:87:1"},"src":"854:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"970:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1193:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1221:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1205:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1243:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1227:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1268:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1252:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1204:71:1"},"src":"1187:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1282:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1568:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1596:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1580:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1580:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1618:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1602:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1643:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1627:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1627:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1579:71:1"},"src":"1562:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1657:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1747:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1763:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1755:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1755:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1777:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1769:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1769:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1754:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1809:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1808:6:1"},"scope":378,"src":"1738:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1821:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2019:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2040:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2032:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2031:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2068:9:1"},"scope":378,"src":"2010:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2084:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2337:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2355:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2347:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2369:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2361:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2361:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2346:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2386:0:1"},"scope":378,"src":"2328:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2393:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2630:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2649:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2641:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2663:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2655:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2655:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2640:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2680:0:1"},"scope":378,"src":"2621:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2687:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3192:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3213:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3205:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3227:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3219:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3204:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3255:0:1"},"scope":378,"src":"3183:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"225:3033:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3150:1"},"id":1},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[461]},"id":462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"136:102:2","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts."},"fullyImplemented":false,"id":461,"linearizedBaseContracts":[461],"name":"IVotes","nameLocation":"249:6:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"262:55:2","text":" @dev The signature used has expired."},"errorSelector":"4683af0e","id":386,"name":"VotesExpiredSignature","nameLocation":"328:21:2","nodeType":"ErrorDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"expiry","nameLocation":"358:6:2","nodeType":"VariableDeclaration","scope":386,"src":"350:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"350:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"349:16:2"},"src":"322:44:2"},{"anonymous":false,"documentation":{"id":387,"nodeType":"StructuredDocumentation","src":"372:71:2","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":395,"name":"DelegateChanged","nameLocation":"454:15:2","nodeType":"EventDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"486:9:2","nodeType":"VariableDeclaration","scope":395,"src":"470:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":391,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"513:12:2","nodeType":"VariableDeclaration","scope":395,"src":"497:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"497:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"543:10:2","nodeType":"VariableDeclaration","scope":395,"src":"527:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"527:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"469:85:2"},"src":"448:107:2"},{"anonymous":false,"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"561:131:2","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":404,"name":"DelegateVotesChanged","nameLocation":"703:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"740:8:2","nodeType":"VariableDeclaration","scope":404,"src":"724:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":false,"mutability":"mutable","name":"previousVotes","nameLocation":"758:13:2","nodeType":"VariableDeclaration","scope":404,"src":"750:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":false,"mutability":"mutable","name":"newVotes","nameLocation":"781:8:2","nodeType":"VariableDeclaration","scope":404,"src":"773:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"723:67:2"},"src":"697:94:2"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"797:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":412,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"890:8:2","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"account","nameLocation":"907:7:2","nodeType":"VariableDeclaration","scope":412,"src":"899:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"899:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"898:17:2"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"939:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:2"},"scope":461,"src":"881:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"954:230:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":422,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1198:12:2","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"account","nameLocation":"1219:7:2","nodeType":"VariableDeclaration","scope":422,"src":"1211:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"timepoint","nameLocation":"1236:9:2","nodeType":"VariableDeclaration","scope":422,"src":"1228:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:36:2"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"1270:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1269:9:2"},"scope":461,"src":"1189:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"1285:481:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":430,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1780:18:2","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"timepoint","nameLocation":"1807:9:2","nodeType":"VariableDeclaration","scope":430,"src":"1799:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1799:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1798:19:2"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"1841:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1841:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1840:9:2"},"scope":461,"src":"1771:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1856:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":438,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1941:9:2","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"account","nameLocation":"1959:7:2","nodeType":"VariableDeclaration","scope":438,"src":"1951:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:17:2"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"1991:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"1991:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1990:9:2"},"scope":461,"src":"1932:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"2006:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":444,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2091:8:2","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"delegatee","nameLocation":"2108:9:2","nodeType":"VariableDeclaration","scope":444,"src":"2100:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"2100:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2099:19:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[],"src":"2127:0:2"},"scope":461,"src":"2082:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2134:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":460,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2215:13:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"delegatee","nameLocation":"2237:9:2","nodeType":"VariableDeclaration","scope":460,"src":"2229:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"2229:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"nonce","nameLocation":"2256:5:2","nodeType":"VariableDeclaration","scope":460,"src":"2248:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"expiry","nameLocation":"2271:6:2","nodeType":"VariableDeclaration","scope":460,"src":"2263:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"v","nameLocation":"2285:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2279:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":452,"name":"uint8","nodeType":"ElementaryTypeName","src":"2279:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"r","nameLocation":"2296:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2288:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2288:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"s","nameLocation":"2307:1:2","nodeType":"VariableDeclaration","scope":460,"src":"2299:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2228:81:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"2318:0:2"},"scope":461,"src":"2206:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":462,"src":"239:2082:2","usedErrors":[386],"usedEvents":[395,404]}],"src":"110:2212:2"},"id":2},"@openzeppelin/contracts/governance/utils/Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","exportedSymbols":{"Checkpoints":[7988],"Context":[2167],"ECDSA":[3165],"EIP712":[3392],"IERC5805":[1044],"Nonces":[2235],"SafeCast":[6311],"Time":[8263],"Votes":[1008]},"id":1009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":463,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../interfaces/IERC5805.sol","id":465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":1045,"src":"135:55:3","symbolAliases":[{"foreign":{"id":464,"name":"IERC5805","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"143:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":2168,"src":"191:48:3","symbolAliases":[{"foreign":{"id":466,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"199:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../utils/Nonces.sol","id":469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":2236,"src":"240:46:3","symbolAliases":[{"foreign":{"id":468,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"248:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../utils/cryptography/EIP712.sol","id":471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":3393,"src":"287:59:3","symbolAliases":[{"foreign":{"id":470,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"295:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../utils/structs/Checkpoints.sol","id":473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":7989,"src":"347:64:3","symbolAliases":[{"foreign":{"id":472,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"355:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../utils/math/SafeCast.sol","id":475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":6312,"src":"412:55:3","symbolAliases":[{"foreign":{"id":474,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"420:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../utils/cryptography/ECDSA.sol","id":477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":3166,"src":"468:57:3","symbolAliases":[{"foreign":{"id":476,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"476:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","file":"../../utils/types/Time.sol","id":479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1009,"sourceUnit":8264,"src":"526:48:3","symbolAliases":[{"foreign":{"id":478,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"534:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":481,"name":"Context","nameLocations":["1919:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2167,"src":"1919:7:3"},"id":482,"nodeType":"InheritanceSpecifier","src":"1919:7:3"},{"baseName":{"id":483,"name":"EIP712","nameLocations":["1928:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"1928:6:3"},"id":484,"nodeType":"InheritanceSpecifier","src":"1928:6:3"},{"baseName":{"id":485,"name":"Nonces","nameLocations":["1936:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"1936:6:3"},"id":486,"nodeType":"InheritanceSpecifier","src":"1936:6:3"},{"baseName":{"id":487,"name":"IERC5805","nameLocations":["1944:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1044,"src":"1944:8:3"},"id":488,"nodeType":"InheritanceSpecifier","src":"1944:8:3"}],"canonicalName":"Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"576:1315:3","text":" @dev This is a base abstract contract that tracks voting units, which are a measure of voting power that can be\n transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of\n \"representative\" that will pool delegated voting units from different accounts and can then use it to vote in\n decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to\n delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative.\n This contract is often combined with a token contract such that voting units correspond to token units. For an\n example, see {ERC721Votes}.\n The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed\n at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the\n cost of this history tracking optional.\n When using this module the derived contract must implement {_getVotingUnits} (for example, make it return\n {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the\n previous example, it would be included in {ERC721-_update})."},"fullyImplemented":false,"id":1008,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[1008,1044,461,1059,2235,3392,1033,2167],"name":"Votes","nameLocation":"1910:5:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":492,"libraryName":{"id":489,"name":"Checkpoints","nameLocations":["1965:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":7988,"src":"1965:11:3"},"nodeType":"UsingForDirective","src":"1959:43:3","typeName":{"id":491,"nodeType":"UserDefinedTypeName","pathNode":{"id":490,"name":"Checkpoints.Trace208","nameLocations":["1981:11:3","1993:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"1981:20:3"},"referencedDeclaration":6950,"src":"1981:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},{"constant":true,"id":497,"mutability":"constant","name":"DELEGATION_TYPEHASH","nameLocation":"2033:19:3","nodeType":"VariableDeclaration","scope":1008,"src":"2008:126:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2073:60:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":494,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2063:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2063:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":501,"mutability":"mutable","name":"_delegatee","nameLocation":"2185:10:3","nodeType":"VariableDeclaration","scope":1008,"src":"2141:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":500,"keyName":"account","keyNameLocation":"2157:7:3","keyType":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2141:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":506,"mutability":"mutable","name":"_delegateCheckpoints","nameLocation":"2261:20:3","nodeType":"VariableDeclaration","scope":1008,"src":"2202:79:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"typeName":{"id":505,"keyName":"delegatee","keyNameLocation":"2218:9:3","keyType":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2202:50:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"Checkpoints.Trace208","nameLocations":["2231:11:3","2243:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"2231:20:3"},"referencedDeclaration":6950,"src":"2231:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}}},"visibility":"private"},{"constant":false,"id":509,"mutability":"mutable","name":"_totalCheckpoints","nameLocation":"2317:17:3","nodeType":"VariableDeclaration","scope":1008,"src":"2288:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"Checkpoints.Trace208","nameLocations":["2288:11:3","2300:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"2288:20:3"},"referencedDeclaration":6950,"src":"2288:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"private"},{"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"2341:59:3","text":" @dev The clock was incorrectly modified."},"errorSelector":"6ff07140","id":512,"name":"ERC6372InconsistentClock","nameLocation":"2411:24:3","nodeType":"ErrorDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2435:2:3"},"src":"2405:33:3"},{"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"2444:64:3","text":" @dev Lookup to future votes is not available."},"errorSelector":"ecd3f81e","id":519,"name":"ERC5805FutureLookup","nameLocation":"2519:19:3","nodeType":"ErrorDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"timepoint","nameLocation":"2547:9:3","nodeType":"VariableDeclaration","scope":519,"src":"2539:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":517,"mutability":"mutable","name":"clock","nameLocation":"2565:5:3","nodeType":"VariableDeclaration","scope":519,"src":"2558:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":516,"name":"uint48","nodeType":"ElementaryTypeName","src":"2558:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2538:33:3"},"src":"2513:59:3"},{"baseFunctions":[1052],"body":{"id":529,"nodeType":"Block","src":"2843:42:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":525,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"2860:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8263_$","typeString":"type(library Time)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2865:11:3","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8023,"src":"2860:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":524,"id":528,"nodeType":"Return","src":"2853:25:3"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"2578:206:3","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based\n checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match."},"functionSelector":"91ddadf4","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"2798:5:3","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"2803:2:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"2835:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":522,"name":"uint48","nodeType":"ElementaryTypeName","src":"2835:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2834:8:3"},"scope":1008,"src":"2789:96:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1058],"body":{"id":549,"nodeType":"Block","src":"3106:206:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":536,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3169:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":538,"name":"Time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"3180:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Time_$8263_$","typeString":"type(library Time)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3185:11:3","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":8023,"src":"3180:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3180:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3169:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"3165:93:3","trueBody":{"id":545,"nodeType":"Block","src":"3200:58:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":542,"name":"ERC6372InconsistentClock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3221:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3221:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"RevertStatement","src":"3214:33:3"}]}},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3274:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":535,"id":548,"nodeType":"Return","src":"3267:38:3"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2891:91:3","text":" @dev Machine-readable description of the clock as specified in EIP-6372."},"functionSelector":"4bf5d7e9","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"3049:10:3","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"3059:2:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"3091:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3090:15:3"},"scope":1008,"src":"3040:272:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[412],"body":{"id":564,"nodeType":"Block","src":"3475:62:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":558,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"3492:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":560,"indexExpression":{"id":559,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"3513:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3492:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3522:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7175,"src":"3492:36:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":557,"id":563,"nodeType":"Return","src":"3485:45:3"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"3318:79:3","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":565,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3411:8:3","nodeType":"FunctionDefinition","parameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"account","nameLocation":"3428:7:3","nodeType":"VariableDeclaration","scope":565,"src":"3420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3419:17:3"},"returnParameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":565,"src":"3466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3465:9:3"},"scope":1008,"src":"3402:135:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[422],"body":{"id":600,"nodeType":"Block","src":"4018:268:3","statements":[{"assignments":[576],"declarations":[{"constant":false,"id":576,"mutability":"mutable","name":"currentTimepoint","nameLocation":"4035:16:3","nodeType":"VariableDeclaration","scope":600,"src":"4028:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":575,"name":"uint48","nodeType":"ElementaryTypeName","src":"4028:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":579,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":577,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4054:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"4028:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":580,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4075:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":581,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4088:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4075:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":589,"nodeType":"IfStatement","src":"4071:115:3","trueBody":{"id":588,"nodeType":"Block","src":"4106:80:3","statements":[{"errorCall":{"arguments":[{"id":584,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4147:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":585,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"4158:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":583,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4127:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"RevertStatement","src":"4120:55:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":596,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4268:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":594,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"4250:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4259:8:3","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"4250:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"baseExpression":{"id":590,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"4202:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":592,"indexExpression":{"id":591,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4223:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4202:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4232:17:3","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7145,"src":"4202:47:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":574,"id":599,"nodeType":"Return","src":"4195:84:3"}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"3543:374:3","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"3a46b1a8","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3931:12:3","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"account","nameLocation":"3952:7:3","nodeType":"VariableDeclaration","scope":601,"src":"3944:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"timepoint","nameLocation":"3969:9:3","nodeType":"VariableDeclaration","scope":601,"src":"3961:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3961:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3943:36:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"4009:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4008:9:3"},"scope":1008,"src":"3922:364:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[430],"body":{"id":632,"nodeType":"Block","src":"5007:256:3","statements":[{"assignments":[610],"declarations":[{"constant":false,"id":610,"mutability":"mutable","name":"currentTimepoint","nameLocation":"5024:16:3","nodeType":"VariableDeclaration","scope":632,"src":"5017:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":609,"name":"uint48","nodeType":"ElementaryTypeName","src":"5017:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":613,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":611,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"5043:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5043:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"5017:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5064:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":615,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5077:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"5064:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":623,"nodeType":"IfStatement","src":"5060:115:3","trueBody":{"id":622,"nodeType":"Block","src":"5095:80:3","statements":[{"errorCall":{"arguments":[{"id":618,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5136:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":619,"name":"currentTimepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5147:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":617,"name":"ERC5805FutureLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"5116:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint48_$returns$__$","typeString":"function (uint256,uint48) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5116:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"RevertStatement","src":"5109:55:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":628,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5245:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":626,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"5227:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5236:8:3","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"5227:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5227:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":624,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"5191:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5209:17:3","memberName":"upperLookupRecent","nodeType":"MemberAccess","referencedDeclaration":7145,"src":"5191:35:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$_t_uint48_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48) view returns (uint208)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":608,"id":631,"nodeType":"Return","src":"5184:72:3"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4292:625:3","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote.\n Requirements:\n - `timepoint` must be in the past. If operating using block numbers, the block must be already mined."},"functionSelector":"8e539e8c","id":633,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"4931:18:3","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"timepoint","nameLocation":"4958:9:3","nodeType":"VariableDeclaration","scope":633,"src":"4950:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"4950:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4949:19:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":633,"src":"4998:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"4998:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4997:9:3"},"scope":1008,"src":"4922:341:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":643,"nodeType":"Block","src":"5407:50:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":639,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"5424:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5442:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7175,"src":"5424:24:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5424:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":638,"id":642,"nodeType":"Return","src":"5417:33:3"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"5269:66:3","text":" @dev Returns the current total supply of votes."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"_getTotalSupply","nameLocation":"5349:15:3","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"5364:2:3"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5398:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"5398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5397:9:3"},"scope":1008,"src":"5340:117:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[438],"body":{"id":656,"nodeType":"Block","src":"5613:43:3","statements":[{"expression":{"baseExpression":{"id":652,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5630:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":654,"indexExpression":{"id":653,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5641:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5630:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":651,"id":655,"nodeType":"Return","src":"5623:26:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5463:71:3","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"5548:9:3","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"account","nameLocation":"5566:7:3","nodeType":"VariableDeclaration","scope":657,"src":"5558:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5557:17:3"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"5604:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"5604:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5603:9:3"},"scope":1008,"src":"5539:117:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[444],"body":{"id":673,"nodeType":"Block","src":"5790:86:3","statements":[{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"account","nameLocation":"5808:7:3","nodeType":"VariableDeclaration","scope":673,"src":"5800:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5800:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5800:30:3"},{"expression":{"arguments":[{"id":669,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"5850:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"5859:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":668,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"5840:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":672,"nodeType":"ExpressionStatement","src":"5840:29:3"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"5662:71:3","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":674,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5747:8:3","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"delegatee","nameLocation":"5764:9:3","nodeType":"VariableDeclaration","scope":674,"src":"5756:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"5756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5755:19:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"5790:0:3"},"scope":1008,"src":"5738:138:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[460],"body":{"id":730,"nodeType":"Block","src":"6127:381:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6141:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6141:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":692,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6159:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6141:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":699,"nodeType":"IfStatement","src":"6137:91:3","trueBody":{"id":698,"nodeType":"Block","src":"6167:61:3","statements":[{"errorCall":{"arguments":[{"id":695,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6210:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":694,"name":"VotesExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6188:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"RevertStatement","src":"6181:36:3"}]}},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"signer","nameLocation":"6245:6:3","nodeType":"VariableDeclaration","scope":730,"src":"6237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"6237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":719,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":708,"name":"DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"6319:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":709,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6340:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6351:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":711,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"6358:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:6:3","memberName":"encode","nodeType":"MemberAccess","src":"6308:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":705,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":704,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"6281:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":715,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"6381:1:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":716,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"6396:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":717,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"6411:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":702,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"6254:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3165_$","typeString":"type(library ECDSA)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:7:3","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"6254:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6254:168:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6237:185:3"},{"expression":{"arguments":[{"id":721,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6449:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"6457:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_useCheckedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6432:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6432:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"6432:31:3"},{"expression":{"arguments":[{"id":726,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6483:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"6491:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":725,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"6473:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6473:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"ExpressionStatement","src":"6473:28:3"}]},"documentation":{"id":675,"nodeType":"StructuredDocumentation","src":"5882:67:3","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":731,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5963:13:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"delegatee","nameLocation":"5994:9:3","nodeType":"VariableDeclaration","scope":731,"src":"5986:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"5986:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"nonce","nameLocation":"6021:5:3","nodeType":"VariableDeclaration","scope":731,"src":"6013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"expiry","nameLocation":"6044:6:3","nodeType":"VariableDeclaration","scope":731,"src":"6036:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6036:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"v","nameLocation":"6066:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6060:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":682,"name":"uint8","nodeType":"ElementaryTypeName","src":"6060:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"r","nameLocation":"6085:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6077:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6077:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"s","nameLocation":"6104:1:3","nodeType":"VariableDeclaration","scope":731,"src":"6096:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6096:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5976:135:3"},"returnParameters":{"id":689,"nodeType":"ParameterList","parameters":[],"src":"6127:0:3"},"scope":1008,"src":"5954:554:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":765,"nodeType":"Block","src":"6758:240:3","statements":[{"assignments":[740],"declarations":[{"constant":false,"id":740,"mutability":"mutable","name":"oldDelegate","nameLocation":"6776:11:3","nodeType":"VariableDeclaration","scope":765,"src":"6768:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[{"id":742,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6800:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":741,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6790:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6768:40:3"},{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":745,"name":"_delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6818:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":747,"indexExpression":{"id":746,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6829:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6818:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":748,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6840:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6818:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":750,"nodeType":"ExpressionStatement","src":"6818:31:3"},{"eventCall":{"arguments":[{"id":752,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6890:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6903:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":751,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"6865:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6865:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":756,"nodeType":"EmitStatement","src":"6860:53:3"},{"expression":{"arguments":[{"id":758,"name":"oldDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"6942:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":759,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"6955:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":761,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"6982:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"_getVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6966:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6966:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":757,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6923:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6923:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"6923:68:3"}]},"documentation":{"id":732,"nodeType":"StructuredDocumentation","src":"6514:167:3","text":" @dev Delegate all of `account`'s voting units to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"6695:9:3","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"account","nameLocation":"6713:7:3","nodeType":"VariableDeclaration","scope":766,"src":"6705:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"delegatee","nameLocation":"6730:9:3","nodeType":"VariableDeclaration","scope":766,"src":"6722:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:36:3"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"6758:0:3"},"scope":1008,"src":"6686:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":820,"nodeType":"Block","src":"7321:310:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7335:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7351:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7343:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"7343:7:3","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7335:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"7331:107:3","trueBody":{"id":791,"nodeType":"Block","src":"7355:83:3","statements":[{"expression":{"arguments":[{"id":783,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7375:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":784,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"7394:4:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":787,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7419:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"7400:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7409:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4751,"src":"7400:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":782,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7369:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6950_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7369:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":790,"nodeType":"ExpressionStatement","src":"7369:58:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7451:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7465:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7457:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"7457:7:3","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7457:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7451:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"7447:110:3","trueBody":{"id":808,"nodeType":"Block","src":"7469:88:3","statements":[{"expression":{"arguments":[{"id":800,"name":"_totalCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"7489:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":801,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"7508:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7538:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"7519:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7528:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4751,"src":"7519:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":799,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7483:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6950_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"id":807,"nodeType":"ExpressionStatement","src":"7483:63:3"}]}},{"expression":{"arguments":[{"arguments":[{"id":812,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7595:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":811,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7585:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7585:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"7612:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":814,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7602:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7602:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"7617:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":810,"name":"_moveDelegateVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7566:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7566:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"7566:58:3"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"7004:223:3","text":" @dev Transfers, mints, or burns voting units. To register a mint, `from` should be zero. To register a burn, `to`\n should be zero. Total supply of voting units will be adjusted with mints and burns."},"id":821,"implemented":true,"kind":"function","modifiers":[],"name":"_transferVotingUnits","nameLocation":"7241:20:3","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"from","nameLocation":"7270:4:3","nodeType":"VariableDeclaration","scope":821,"src":"7262:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"7262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"to","nameLocation":"7284:2:3","nodeType":"VariableDeclaration","scope":821,"src":"7276:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"7276:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"amount","nameLocation":"7296:6:3","nodeType":"VariableDeclaration","scope":821,"src":"7288:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"7288:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7261:42:3"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"7321:0:3"},"scope":1008,"src":"7232:399:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":898,"nodeType":"Block","src":"7795:702:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7809:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":832,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"7817:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7809:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"7823:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7832:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7823:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7809:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":897,"nodeType":"IfStatement","src":"7805:686:3","trueBody":{"id":896,"nodeType":"Block","src":"7835:656:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7853:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7869:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7861:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"7861:7:3","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7861:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7853:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":866,"nodeType":"IfStatement","src":"7849:315:3","trueBody":{"id":865,"nodeType":"Block","src":"7873:291:3","statements":[{"assignments":[845,847],"declarations":[{"constant":false,"id":845,"mutability":"mutable","name":"oldValue","nameLocation":"7900:8:3","nodeType":"VariableDeclaration","scope":865,"src":"7892:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"7892:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"newValue","nameLocation":"7918:8:3","nodeType":"VariableDeclaration","scope":865,"src":"7910:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"7910:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":858,"initialValue":{"arguments":[{"baseExpression":{"id":849,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"7957:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":851,"indexExpression":{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"7978:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7957:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":852,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"8005:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":855,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8055:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8036:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8045:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4751,"src":"8036:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8036:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":848,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"7930:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6950_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:150:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"7891:189:3"},{"eventCall":{"arguments":[{"id":860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"8124:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":861,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8130:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":862,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"8140:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8103:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8103:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"EmitStatement","src":"8098:51:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":895,"nodeType":"IfStatement","src":"8177:304:3","trueBody":{"id":894,"nodeType":"Block","src":"8199:282:3","statements":[{"assignments":[874,876],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"oldValue","nameLocation":"8226:8:3","nodeType":"VariableDeclaration","scope":894,"src":"8218:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"8218:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"newValue","nameLocation":"8244:8:3","nodeType":"VariableDeclaration","scope":894,"src":"8236:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"baseExpression":{"id":878,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8283:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":880,"indexExpression":{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8304:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8283:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},{"id":881,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"8329:4:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"}},{"arguments":[{"id":884,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"8374:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":882,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8355:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8364:9:3","memberName":"toUint208","nodeType":"MemberAccess","referencedDeclaration":4751,"src":"8355:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint208_$","typeString":"function (uint256) pure returns (uint208)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8355:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) pure returns (uint208)"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":877,"name":"_push","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"8256:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6950_storage_ptr_$_t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,function (uint208,uint208) view returns (uint208),uint208) returns (uint208,uint208)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8256:143:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"nodeType":"VariableDeclarationStatement","src":"8217:182:3"},{"eventCall":{"arguments":[{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8443:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"oldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"8447:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":891,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"8457:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":888,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8422:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8422:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"EmitStatement","src":"8417:49:3"}]}}]}}]},"documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"7637:75:3","text":" @dev Moves delegated votes from one delegate to another."},"id":899,"implemented":true,"kind":"function","modifiers":[],"name":"_moveDelegateVotes","nameLocation":"7726:18:3","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"from","nameLocation":"7753:4:3","nodeType":"VariableDeclaration","scope":899,"src":"7745:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"7745:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"to","nameLocation":"7767:2:3","nodeType":"VariableDeclaration","scope":899,"src":"7759:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"7759:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"amount","nameLocation":"7779:6:3","nodeType":"VariableDeclaration","scope":899,"src":"7771:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7771:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7744:42:3"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"7795:0:3"},"scope":1008,"src":"7717:780:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":916,"nodeType":"Block","src":"8653:81:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":909,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8688:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":911,"indexExpression":{"id":910,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"8709:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8688:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8718:6:3","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7238,"src":"8688:36:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8688:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":907,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"8670:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:8:3","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5367,"src":"8670:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8670:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":906,"id":915,"nodeType":"Return","src":"8663:64:3"}]},"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"8503:64:3","text":" @dev Get number of checkpoints for `account`."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"_numCheckpoints","nameLocation":"8581:15:3","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"account","nameLocation":"8605:7:3","nodeType":"VariableDeclaration","scope":917,"src":"8597:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"8597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8596:17:3"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"8645:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":904,"name":"uint32","nodeType":"ElementaryTypeName","src":"8645:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8644:8:3"},"scope":1008,"src":"8572:162:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"8949:61:3","statements":[{"expression":{"arguments":[{"id":932,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"8999:3:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"baseExpression":{"id":928,"name":"_delegateCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"8966:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Trace208_$6950_storage_$","typeString":"mapping(address => struct Checkpoints.Trace208 storage ref)"}},"id":930,"indexExpression":{"id":929,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"8987:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8966:29:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage","typeString":"struct Checkpoints.Trace208 storage ref"}},"id":931,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8996:2:3","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7256,"src":"8966:32:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$_t_uint32_$returns$_t_struct$_Checkpoint208_$6955_memory_ptr_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8966:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":927,"id":934,"nodeType":"Return","src":"8959:44:3"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"8740:66:3","text":" @dev Get the `pos`-th checkpoint for `account`."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpoints","nameLocation":"8820:12:3","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"account","nameLocation":"8850:7:3","nodeType":"VariableDeclaration","scope":936,"src":"8842:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"8842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"pos","nameLocation":"8874:3:3","nodeType":"VariableDeclaration","scope":936,"src":"8867:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":921,"name":"uint32","nodeType":"ElementaryTypeName","src":"8867:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8832:51:3"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"8915:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":925,"nodeType":"UserDefinedTypeName","pathNode":{"id":924,"name":"Checkpoints.Checkpoint208","nameLocations":["8915:11:3","8927:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"8915:25:3"},"referencedDeclaration":6955,"src":"8915:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"8914:34:3"},"scope":1008,"src":"8811:199:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":970,"nodeType":"Block","src":"9201:70:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"9229:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9229:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":963,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9241:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9247:6:3","memberName":"latest","nodeType":"MemberAccess","referencedDeclaration":7175,"src":"9241:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Trace208_$6950_storage_ptr_$returns$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer) view returns (uint208)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9241:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":966,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"9257:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint208","typeString":"uint208"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":962,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"9238:2:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9238:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"expression":{"id":958,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"9218:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9224:4:3","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":6978,"src":"9218:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Trace208_$6950_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$attached_to$_t_struct$_Trace208_$6950_storage_ptr_$","typeString":"function (struct Checkpoints.Trace208 storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9218:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":957,"id":969,"nodeType":"Return","src":"9211:53:3"}]},"id":971,"implemented":true,"kind":"function","modifiers":[],"name":"_push","nameLocation":"9025:5:3","nodeType":"FunctionDefinition","parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"store","nameLocation":"9069:5:3","nodeType":"VariableDeclaration","scope":971,"src":"9040:34:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":938,"nodeType":"UserDefinedTypeName","pathNode":{"id":937,"name":"Checkpoints.Trace208","nameLocations":["9040:11:3","9052:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"9040:20:3"},"referencedDeclaration":6950,"src":"9040:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"op","nameLocation":"9134:2:3","nodeType":"VariableDeclaration","scope":971,"src":"9084:52:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"typeName":{"id":948,"nodeType":"FunctionTypeName","parameterTypes":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9093:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":940,"name":"uint208","nodeType":"ElementaryTypeName","src":"9093:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9102:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":942,"name":"uint208","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9092:18:3"},"returnParameterTypes":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"9125:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":945,"name":"uint208","nodeType":"ElementaryTypeName","src":"9125:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9124:9:3"},"src":"9084:52:3","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint208_$_t_uint208_$returns$_t_uint208_$","typeString":"function (uint208,uint208) view returns (uint208)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"delta","nameLocation":"9154:5:3","nodeType":"VariableDeclaration","scope":971,"src":"9146:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":950,"name":"uint208","nodeType":"ElementaryTypeName","src":"9146:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9030:135:3"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":971,"src":"9183:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":953,"name":"uint208","nodeType":"ElementaryTypeName","src":"9183:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":971,"src":"9192:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":955,"name":"uint208","nodeType":"ElementaryTypeName","src":"9192:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9182:18:3"},"scope":1008,"src":"9016:255:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":984,"nodeType":"Block","src":"9344:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"9361:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9365:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9361:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":979,"id":983,"nodeType":"Return","src":"9354:12:3"}]},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9286:4:3","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"a","nameLocation":"9299:1:3","nodeType":"VariableDeclaration","scope":985,"src":"9291:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":972,"name":"uint208","nodeType":"ElementaryTypeName","src":"9291:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"b","nameLocation":"9310:1:3","nodeType":"VariableDeclaration","scope":985,"src":"9302:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":974,"name":"uint208","nodeType":"ElementaryTypeName","src":"9302:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9290:22:3"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"9335:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":977,"name":"uint208","nodeType":"ElementaryTypeName","src":"9335:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9334:9:3"},"scope":1008,"src":"9277:96:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":998,"nodeType":"Block","src":"9451:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint208","typeString":"uint208"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"9468:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":995,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"9472:1:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"9468:5:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":993,"id":997,"nodeType":"Return","src":"9461:12:3"}]},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9388:9:3","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"a","nameLocation":"9406:1:3","nodeType":"VariableDeclaration","scope":999,"src":"9398:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":986,"name":"uint208","nodeType":"ElementaryTypeName","src":"9398:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"b","nameLocation":"9417:1:3","nodeType":"VariableDeclaration","scope":999,"src":"9409:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":988,"name":"uint208","nodeType":"ElementaryTypeName","src":"9409:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9397:22:3"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"9442:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":991,"name":"uint208","nodeType":"ElementaryTypeName","src":"9442:7:3","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9441:9:3"},"scope":1008,"src":"9379:101:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"9486:72:3","text":" @dev Must return the voting units held by an account."},"id":1007,"implemented":false,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"9572:15:3","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"9588:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"9588:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9587:9:3"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"9628:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:9:3"},"scope":1008,"src":"9563:74:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1009,"src":"1892:7747:3","usedErrors":[386,512,519,2177,2249,2251,2828,2833,2838,4566,6424],"usedEvents":[395,404,1013]}],"src":"109:9531:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1033]},"id":1034,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1033,"linearizedBaseContracts":[1033],"name":"IERC5267","nameLocation":"143:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"158:84:4","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1013,"name":"EIP712DomainChanged","nameLocation":"253:19:4","nodeType":"EventDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"272:2:4"},"src":"247:28:4"},{"documentation":{"id":1014,"nodeType":"StructuredDocumentation","src":"281:140:4","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:4","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"fields","nameLocation":"517:6:4","nodeType":"VariableDeclaration","scope":1032,"src":"510:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1016,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"name","nameLocation":"551:4:4","nodeType":"VariableDeclaration","scope":1032,"src":"537:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1018,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"version","nameLocation":"583:7:4","nodeType":"VariableDeclaration","scope":1032,"src":"569:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"chainId","nameLocation":"612:7:4","nodeType":"VariableDeclaration","scope":1032,"src":"604:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:4","nodeType":"VariableDeclaration","scope":1032,"src":"633:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"salt","nameLocation":"680:4:4","nodeType":"VariableDeclaration","scope":1032,"src":"672:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"extensions","nameLocation":"715:10:4","nodeType":"VariableDeclaration","scope":1032,"src":"698:27:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ArrayTypeName","src":"698:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:4"},"scope":1033,"src":"426:310:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1034,"src":"133:605:4","usedErrors":[],"usedEvents":[1013]}],"src":"107:632:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[1044],"IERC6372":[1059],"IVotes":[461]},"id":1045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1035,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:5"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":1037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1045,"sourceUnit":462,"src":"133:54:5","symbolAliases":[{"foreign":{"id":1036,"name":"IVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"141:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":1039,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1045,"sourceUnit":1060,"src":"188:40:5","symbolAliases":[{"foreign":{"id":1038,"name":"IERC6372","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"196:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1040,"name":"IERC6372","nameLocations":["252:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"252:8:5"},"id":1041,"nodeType":"InheritanceSpecifier","src":"252:8:5"},{"baseName":{"id":1042,"name":"IVotes","nameLocations":["262:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":461,"src":"262:6:5"},"id":1043,"nodeType":"InheritanceSpecifier","src":"262:6:5"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1044,"linearizedBaseContracts":[1044,461,1059],"name":"IERC5805","nameLocation":"240:8:5","nodeType":"ContractDefinition","nodes":[],"scope":1045,"src":"230:41:5","usedErrors":[386],"usedEvents":[395,404]}],"src":"107:165:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[1059]},"id":1060,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1046,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1059,"linearizedBaseContracts":[1059],"name":"IERC6372","nameLocation":"143:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"158:133:6","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"305:5:6","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"310:2:6"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"336:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1049,"name":"uint48","nodeType":"ElementaryTypeName","src":"336:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"335:8:6"},"scope":1059,"src":"296:48:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"350:48:6","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1058,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"465:10:6","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"475:2:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"501:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1055,"name":"string","nodeType":"ElementaryTypeName","src":"501:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"500:15:6"},"scope":1059,"src":"456:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1060,"src":"133:385:6","usedErrors":[],"usedEvents":[]}],"src":"107:412:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1196],"IERC20Errors":[1101],"IERC721Errors":[1149]},"id":1197,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1061,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"138:139:7","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1101,"linearizedBaseContracts":[1101],"name":"IERC20Errors","nameLocation":"288:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"307:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1071,"name":"ERC20InsufficientBalance","nameLocation":"627:24:7","nodeType":"ErrorDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"sender","nameLocation":"660:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"652:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"balance","nameLocation":"676:7:7","nodeType":"VariableDeclaration","scope":1071,"src":"668:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"needed","nameLocation":"693:6:7","nodeType":"VariableDeclaration","scope":1071,"src":"685:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:7"},"src":"621:80:7"},{"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"707:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1076,"name":"ERC20InvalidSender","nameLocation":"870:18:7","nodeType":"ErrorDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"sender","nameLocation":"897:6:7","nodeType":"VariableDeclaration","scope":1076,"src":"889:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:7"},"src":"864:41:7"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"911:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1081,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:7","nodeType":"ErrorDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:7","nodeType":"VariableDeclaration","scope":1081,"src":"1102:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:7"},"src":"1075:45:7"},{"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1126:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1090,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:7","nodeType":"ErrorDefinition","parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"spender","nameLocation":"1517:7:7","nodeType":"VariableDeclaration","scope":1090,"src":"1509:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:7","nodeType":"VariableDeclaration","scope":1090,"src":"1526:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1088,"mutability":"mutable","name":"needed","nameLocation":"1553:6:7","nodeType":"VariableDeclaration","scope":1090,"src":"1545:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:7"},"src":"1476:85:7"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"1567:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1095,"name":"ERC20InvalidApprover","nameLocation":"1752:20:7","nodeType":"ErrorDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"approver","nameLocation":"1781:8:7","nodeType":"VariableDeclaration","scope":1095,"src":"1773:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:7"},"src":"1746:45:7"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"1797:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1100,"name":"ERC20InvalidSpender","nameLocation":"2003:19:7","nodeType":"ErrorDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"spender","nameLocation":"2031:7:7","nodeType":"VariableDeclaration","scope":1100,"src":"2023:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:7"},"src":"1997:43:7"}],"scope":1197,"src":"278:1764:7","usedErrors":[1071,1076,1081,1090,1095,1100],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"2044:141:7","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1149,"linearizedBaseContracts":[1149],"name":"IERC721Errors","nameLocation":"2196:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"2216:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1107,"name":"ERC721InvalidOwner","nameLocation":"2446:18:7","nodeType":"ErrorDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"owner","nameLocation":"2473:5:7","nodeType":"VariableDeclaration","scope":1107,"src":"2465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:7"},"src":"2440:40:7"},{"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"2486:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1112,"name":"ERC721NonexistentToken","nameLocation":"2629:22:7","nodeType":"ErrorDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:7","nodeType":"VariableDeclaration","scope":1112,"src":"2652:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:7"},"src":"2623:46:7"},{"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"2675:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1121,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:7","nodeType":"ErrorDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"sender","nameLocation":"3004:6:7","nodeType":"VariableDeclaration","scope":1121,"src":"2996:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:7","nodeType":"VariableDeclaration","scope":1121,"src":"3012:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"owner","nameLocation":"3037:5:7","nodeType":"VariableDeclaration","scope":1121,"src":"3029:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:7"},"src":"2969:75:7"},{"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"3050:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1126,"name":"ERC721InvalidSender","nameLocation":"3213:19:7","nodeType":"ErrorDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"sender","nameLocation":"3241:6:7","nodeType":"VariableDeclaration","scope":1126,"src":"3233:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:7"},"src":"3207:42:7"},{"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"3255:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1131,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:7","nodeType":"ErrorDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:7","nodeType":"VariableDeclaration","scope":1131,"src":"3447:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:7"},"src":"3419:46:7"},{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"3471:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1138,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:7","nodeType":"ErrorDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"operator","nameLocation":"3764:8:7","nodeType":"VariableDeclaration","scope":1138,"src":"3756:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:7","nodeType":"VariableDeclaration","scope":1138,"src":"3774:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:7"},"src":"3723:68:7"},{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"3797:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1143,"name":"ERC721InvalidApprover","nameLocation":"3982:21:7","nodeType":"ErrorDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"approver","nameLocation":"4012:8:7","nodeType":"VariableDeclaration","scope":1143,"src":"4004:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:7"},"src":"3976:46:7"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"4028:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1148,"name":"ERC721InvalidOperator","nameLocation":"4236:21:7","nodeType":"ErrorDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"operator","nameLocation":"4266:8:7","nodeType":"VariableDeclaration","scope":1148,"src":"4258:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:7"},"src":"4230:46:7"}],"scope":1197,"src":"2186:2092:7","usedErrors":[1107,1112,1121,1126,1131,1138,1143,1148],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"4280:143:7","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1196,"linearizedBaseContracts":[1196],"name":"IERC1155Errors","nameLocation":"4434:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"4455:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1161,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:7","nodeType":"ErrorDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"sender","nameLocation":"4862:6:7","nodeType":"VariableDeclaration","scope":1161,"src":"4854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"balance","nameLocation":"4878:7:7","nodeType":"VariableDeclaration","scope":1161,"src":"4870:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"needed","nameLocation":"4895:6:7","nodeType":"VariableDeclaration","scope":1161,"src":"4887:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:7","nodeType":"VariableDeclaration","scope":1161,"src":"4903:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:7"},"src":"4821:99:7"},{"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"4926:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1166,"name":"ERC1155InvalidSender","nameLocation":"5089:20:7","nodeType":"ErrorDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"sender","nameLocation":"5118:6:7","nodeType":"VariableDeclaration","scope":1166,"src":"5110:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:7"},"src":"5083:43:7"},{"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"5132:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1171,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:7","nodeType":"ErrorDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:7","nodeType":"VariableDeclaration","scope":1171,"src":"5325:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:7"},"src":"5296:47:7"},{"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"5349:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1178,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:7","nodeType":"ErrorDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"operator","nameLocation":"5653:8:7","nodeType":"VariableDeclaration","scope":1178,"src":"5645:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"owner","nameLocation":"5671:5:7","nodeType":"VariableDeclaration","scope":1178,"src":"5663:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:7"},"src":"5610:68:7"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"5684:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1183,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:7","nodeType":"ErrorDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"approver","nameLocation":"5900:8:7","nodeType":"VariableDeclaration","scope":1183,"src":"5892:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:7"},"src":"5863:47:7"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"5916:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1188,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:7","nodeType":"ErrorDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"operator","nameLocation":"6155:8:7","nodeType":"VariableDeclaration","scope":1188,"src":"6147:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:7"},"src":"6118:47:7"},{"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"6171:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1195,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:7","nodeType":"ErrorDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:7","nodeType":"VariableDeclaration","scope":1195,"src":"6488:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:7","nodeType":"VariableDeclaration","scope":1195,"src":"6507:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:7"},"src":"6456:73:7"}],"scope":1197,"src":"4424:2107:7","usedErrors":[1161,1166,1171,1178,1183,1188,1195],"usedEvents":[]}],"src":"112:6420:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2167],"ERC20":[1711],"IERC20":[1789],"IERC20Errors":[1101],"IERC20Metadata":[2101]},"id":1712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1198,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1200,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":1790,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1199,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":2102,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1201,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":2168,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1203,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1712,"sourceUnit":1197,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1205,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1208,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2167,"src":"1428:7:8"},"id":1209,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1210,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1789,"src":"1437:6:8"},"id":1211,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1212,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":2101,"src":"1445:14:8"},"id":1213,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1214,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1101,"src":"1461:12:8"},"id":1215,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1711,"linearizedBaseContracts":[1711,1101,2101,1789,2167],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1219,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1711,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1218,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1225,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1711,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1224,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1223,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1227,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1711,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1229,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1711,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1231,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1711,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1230,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1247,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1239,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1240,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1242,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1243,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1244,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1246,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1248,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1248,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1233,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1248,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1711,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2088],"body":{"id":1256,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1254,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1253,"id":1255,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1251,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1711,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2094],"body":{"id":1265,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1263,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1262,"id":1264,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1266,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1711,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2100],"body":{"id":1274,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1271,"id":1273,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1269,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1711,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1738],"body":{"id":1283,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1281,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1280,"id":1282,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1711,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1746],"body":{"id":1296,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1292,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1294,"indexExpression":{"id":1293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1291,"id":1295,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1297,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1711,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1756],"body":{"id":1320,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1308],"declarations":[{"constant":false,"id":1308,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1320,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1309,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1313,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1314,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1312,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1306,"id":1319,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1321,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1321,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1321,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1711,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1766],"body":{"id":1337,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1331,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1333,"indexExpression":{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1335,"indexExpression":{"id":1334,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1330,"id":1336,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1338,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1338,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1338,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1711,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1776],"body":{"id":1361,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1361,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1352,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1355,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1602,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1358,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1347,"id":1360,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1362,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1345,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1711,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1788],"body":{"id":1393,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1375],"declarations":[{"constant":false,"id":1375,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1393,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1378,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1376,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1380,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1381,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1384,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1386,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1373,"id":1392,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1394,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1394,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1394,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1394,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1371,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1711,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1440,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1404,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1417,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1420,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1433,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1432,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1426,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1441,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1441,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1441,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1711,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1517,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1488,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1463],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1488,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"baseExpression":{"id":1464,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1466,"indexExpression":{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1477,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1472,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1473,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1487,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1479,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1481,"indexExpression":{"id":1480,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1489,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1461,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1457,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1460,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1509,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1508,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1502,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1504,"indexExpression":{"id":1503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1510,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1501,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1500,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1496,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1513,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1511,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1518,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1518,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1518,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1711,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1550,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1526,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1539,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1532,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1551,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1551,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1525,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1711,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1560,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1573,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1572,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1565,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1575,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1574,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1582,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1584,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1553,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1584,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1711,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1594,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1662,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1588,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1711,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1661,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1627,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1620,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1626,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1642,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1635,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1644,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1647,"indexExpression":{"id":1645,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1648,"indexExpression":{"id":1646,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1652,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1659,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1653,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1662,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1662,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1662,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1662,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1662,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1711,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1673],"declarations":[{"constant":false,"id":1673,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1709,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1678,"initialValue":{"arguments":[{"id":1675,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1674,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1708,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1707,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1695,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1690,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1706,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1698,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1699,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1700,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1697,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1662,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1710,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1710,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1711,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1712,"src":"1401:9741:8","usedErrors":[1071,1076,1081,1090,1095,1100],"usedEvents":[1723,1732]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1789]},"id":1790,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1713,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1789,"linearizedBaseContracts":[1789],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1723,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1723,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1723,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1723,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1732,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1732,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1732,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1732,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1738,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1738,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1789,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1746,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1746,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1740,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1789,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1756,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1756,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1756,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1789,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1766,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1766,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1766,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1766,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1789,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1776,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1776,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1776,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1789,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1788,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1778,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1788,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1788,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1789,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1790,"src":"203:2575:9","usedErrors":[],"usedEvents":[1723,1732]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3165],"EIP712":[3392],"ERC20":[1711],"ERC20Permit":[1943],"IERC20Permit":[2137],"Nonces":[2235]},"id":1944,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1791,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1944,"sourceUnit":2138,"src":"148:48:10","symbolAliases":[{"foreign":{"id":1792,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"156:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1944,"sourceUnit":1712,"src":"197:35:10","symbolAliases":[{"foreign":{"id":1794,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"205:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1797,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1944,"sourceUnit":3166,"src":"233:60:10","symbolAliases":[{"foreign":{"id":1796,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"241:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1944,"sourceUnit":3393,"src":"294:62:10","symbolAliases":[{"foreign":{"id":1798,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"302:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1944,"sourceUnit":2236,"src":"357:49:10","symbolAliases":[{"foreign":{"id":1800,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"365:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1803,"name":"ERC20","nameLocations":["929:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"929:5:10"},"id":1804,"nodeType":"InheritanceSpecifier","src":"929:5:10"},{"baseName":{"id":1805,"name":"IERC20Permit","nameLocations":["936:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2137,"src":"936:12:10"},"id":1806,"nodeType":"InheritanceSpecifier","src":"936:12:10"},{"baseName":{"id":1807,"name":"EIP712","nameLocations":["950:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"950:6:10"},"id":1808,"nodeType":"InheritanceSpecifier","src":"950:6:10"},{"baseName":{"id":1809,"name":"Nonces","nameLocations":["958:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"958:6:10"},"id":1810,"nodeType":"InheritanceSpecifier","src":"958:6:10"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"408:487:10","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1943,"linearizedBaseContracts":[1943,2235,3392,1033,2137,1711,1101,2101,1789,2167],"name":"ERC20Permit","nameLocation":"914:11:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1815,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:10","nodeType":"VariableDeclaration","scope":1943,"src":"971:146:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1812,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1816,"nodeType":"StructuredDocumentation","src":"1124:52:10","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1820,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:10","nodeType":"ErrorDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:10","nodeType":"VariableDeclaration","scope":1820,"src":"1211:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:10"},"src":"1181:48:10"},{"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"1235:45:10","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1827,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:10","nodeType":"ErrorDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"signer","nameLocation":"1320:6:10","nodeType":"VariableDeclaration","scope":1827,"src":"1312:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"owner","nameLocation":"1336:5:10","nodeType":"VariableDeclaration","scope":1827,"src":"1328:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:10"},"src":"1285:58:10"},{"body":{"id":1837,"nodeType":"Block","src":"1624:2:10","statements":[]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"1349:220:10","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1838,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1833,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1830,"src":"1613:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1835,"kind":"baseConstructorSpecifier","modifierName":{"id":1832,"name":"EIP712","nameLocations":["1606:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":3392,"src":"1606:6:10"},"nodeType":"ModifierInvocation","src":"1606:17:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"name","nameLocation":"1600:4:10","nodeType":"VariableDeclaration","scope":1838,"src":"1586:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:10"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"1624:0:10"},"scope":1943,"src":"1574:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2122],"body":{"id":1914,"nodeType":"Block","src":"1869:483:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1856,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1858,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1901:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1865,"nodeType":"IfStatement","src":"1879:97:10","trueBody":{"id":1864,"nodeType":"Block","src":"1911:65:10","statements":[{"errorCall":{"arguments":[{"id":1861,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1956:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1860,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1932:23:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"RevertStatement","src":"1925:40:10"}]}},{"assignments":[1867],"declarations":[{"constant":false,"id":1867,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:10","nodeType":"VariableDeclaration","scope":1914,"src":"1986:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1881,"initialValue":{"arguments":[{"arguments":[{"id":1871,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2028:15:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1872,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2045:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1873,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2052:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2061:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2078:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1875,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2068:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1878,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2086:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1869,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:10","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:10"},{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"hash","nameLocation":"2115:4:10","nodeType":"VariableDeclaration","scope":1914,"src":"2107:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1887,"initialValue":{"arguments":[{"id":1885,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"2139:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1884,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"2122:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:10"},{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"signer","nameLocation":"2169:6:10","nodeType":"VariableDeclaration","scope":1914,"src":"2161:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1897,"initialValue":{"arguments":[{"id":1892,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2192:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1893,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"2198:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1894,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2201:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1895,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2204:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1890,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"2178:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3165_$","typeString":"type(library ECDSA)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3115,"src":"2178:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2220:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1899,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2230:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1907,"nodeType":"IfStatement","src":"2216:88:10","trueBody":{"id":1906,"nodeType":"Block","src":"2237:67:10","statements":[{"errorCall":{"arguments":[{"id":1902,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2279:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2287:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1901,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"2258:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1905,"nodeType":"RevertStatement","src":"2251:42:10"}]}},{"expression":{"arguments":[{"id":1909,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2323:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1910,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2330:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2339:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1908,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1602,1662],"referencedDeclaration":1602,"src":"2314:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"2314:31:10"}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"1632:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:10","nodeType":"FunctionDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"owner","nameLocation":"1713:5:10","nodeType":"VariableDeclaration","scope":1915,"src":"1705:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1843,"mutability":"mutable","name":"spender","nameLocation":"1736:7:10","nodeType":"VariableDeclaration","scope":1915,"src":"1728:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"value","nameLocation":"1761:5:10","nodeType":"VariableDeclaration","scope":1915,"src":"1753:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:10","nodeType":"VariableDeclaration","scope":1915,"src":"1776:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"v","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":1915,"src":"1802:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1848,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"r","nameLocation":"1827:1:10","nodeType":"VariableDeclaration","scope":1915,"src":"1819:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"s","nameLocation":"1846:1:10","nodeType":"VariableDeclaration","scope":1915,"src":"1838:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:10"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[],"src":"1869:0:10"},"scope":1943,"src":"1680:672:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2130,2194],"body":{"id":1931,"nodeType":"Block","src":"2506:43:10","statements":[{"expression":{"arguments":[{"id":1928,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2536:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1926,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1943_$","typeString":"type(contract super ERC20Permit)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:10","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2194,"src":"2523:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1925,"id":1930,"nodeType":"Return","src":"2516:26:10"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"2358:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:10","nodeType":"FunctionDefinition","overrides":{"id":1922,"nodeType":"OverrideSpecifier","overrides":[{"id":1920,"name":"IERC20Permit","nameLocations":["2466:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":2137,"src":"2466:12:10"},{"id":1921,"name":"Nonces","nameLocations":["2480:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"2480:6:10"}],"src":"2457:30:10"},"parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"owner","nameLocation":"2430:5:10","nodeType":"VariableDeclaration","scope":1932,"src":"2422:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:10"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"2497:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:10"},"scope":1943,"src":"2406:143:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2136],"body":{"id":1941,"nodeType":"Block","src":"2724:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1938,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2741:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1937,"id":1940,"nodeType":"Return","src":"2734:27:10"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"2555:43:10","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:10","nodeType":"FunctionDefinition","parameters":{"id":1934,"nodeType":"ParameterList","parameters":[],"src":"2681:2:10"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1942,"src":"2715:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:10"},"scope":1943,"src":"2656:112:10","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1944,"src":"896:1874:10","usedErrors":[1071,1076,1081,1090,1095,1100,1820,1827,2177,2249,2251,2828,2833,2838],"usedEvents":[1013,1723,1732]}],"src":"122:2649:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Checkpoints":[7988],"ERC20":[1711],"ERC20Votes":[2075],"Votes":[1008]},"id":2076,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1945,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2076,"sourceUnit":1712,"src":"147:35:11","symbolAliases":[{"foreign":{"id":1946,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"155:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/Votes.sol","file":"../../../governance/utils/Votes.sol","id":1949,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2076,"sourceUnit":1009,"src":"183:58:11","symbolAliases":[{"foreign":{"id":1948,"name":"Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"191:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","file":"../../../utils/structs/Checkpoints.sol","id":1951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2076,"sourceUnit":7989,"src":"242:67:11","symbolAliases":[{"foreign":{"id":1950,"name":"Checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"250:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1953,"name":"ERC20","nameLocations":["1201:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1201:5:11"},"id":1954,"nodeType":"InheritanceSpecifier","src":"1201:5:11"},{"baseName":{"id":1955,"name":"Votes","nameLocations":["1208:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":1008,"src":"1208:5:11"},"id":1956,"nodeType":"InheritanceSpecifier","src":"1208:5:11"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1952,"nodeType":"StructuredDocumentation","src":"311:857:11","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: This contract does not provide interface compatibility with Compound's COMP token.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked."},"fullyImplemented":true,"id":2075,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[2075,1008,1044,461,1059,2235,3392,1033,1711,1101,2101,1789,2167],"name":"ERC20Votes","nameLocation":"1187:10:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"1220:100:11","text":" @dev Total supply cap has been exceeded, introducing a risk of votes overflowing."},"errorSelector":"1cb15d26","id":1963,"name":"ERC20ExceededSafeSupply","nameLocation":"1331:23:11","nodeType":"ErrorDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"increasedSupply","nameLocation":"1363:15:11","nodeType":"VariableDeclaration","scope":1963,"src":"1355:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1961,"mutability":"mutable","name":"cap","nameLocation":"1388:3:11","nodeType":"VariableDeclaration","scope":1963,"src":"1380:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1380:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:38:11"},"src":"1325:68:11"},{"body":{"id":1975,"nodeType":"Block","src":"2146:41:11","statements":[{"expression":{"expression":{"arguments":[{"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":1970,"name":"uint208","nodeType":"ElementaryTypeName","src":"2168:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":1969,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2163:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2177:3:11","memberName":"max","nodeType":"MemberAccess","src":"2163:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":1968,"id":1974,"nodeType":"Return","src":"2156:24:11"}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"1399:680:11","text":" @dev Maximum token supply. Defaults to `type(uint208).max` (2^208^ - 1).\n This maximum is enforced in {_update}. It limits the total supply of the token, which is otherwise a uint256,\n so that checkpoints can be stored in the Trace208 structure used by {{Votes}}. Increasing this value will not\n remove the underlying limitation, and will cause {_update} to fail because of a math overflow in\n {_transferVotingUnits}. An override could be used to further restrict the total supply (to a lower value) if\n additional logic requires it. When resolving override conflicts on this function, the minimum should be\n returned."},"id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"2093:10:11","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[],"src":"2103:2:11"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"2137:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2136:9:11"},"scope":2075,"src":"2084:103:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1518],"body":{"id":2029,"nodeType":"Block","src":"2411:329:11","statements":[{"expression":{"arguments":[{"id":1990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2435:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2441:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2445:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1987,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2421:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2075_$","typeString":"type(contract super ERC20Votes)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2427:7:11","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"2421:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"2421:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2465:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2481:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2473:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1996,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:11","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2465:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2022,"nodeType":"IfStatement","src":"2461:226:11","trueBody":{"id":2021,"nodeType":"Block","src":"2485:202:11","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"supply","nameLocation":"2507:6:11","nodeType":"VariableDeclaration","scope":2021,"src":"2499:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2001,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2003,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"2516:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2499:30:11"},{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"cap","nameLocation":"2551:3:11","nodeType":"VariableDeclaration","scope":2021,"src":"2543:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2010,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2008,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"2557:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2557:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2543:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2587:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2012,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2596:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2020,"nodeType":"IfStatement","src":"2583:94:11","trueBody":{"id":2019,"nodeType":"Block","src":"2601:76:11","statements":[{"errorCall":{"arguments":[{"id":2015,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"2650:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2016,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2658:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2014,"name":"ERC20ExceededSafeSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2626:23:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"RevertStatement","src":"2619:43:11"}]}}]}},{"expression":{"arguments":[{"id":2024,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"2717:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"2723:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2023,"name":"_transferVotingUnits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"2696:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2028,"nodeType":"ExpressionStatement","src":"2696:37:11"}]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"2193:129:11","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2336:7:11","nodeType":"FunctionDefinition","overrides":{"id":1985,"nodeType":"OverrideSpecifier","overrides":[],"src":"2402:8:11"},"parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"from","nameLocation":"2352:4:11","nodeType":"VariableDeclaration","scope":2030,"src":"2344:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1981,"mutability":"mutable","name":"to","nameLocation":"2366:2:11","nodeType":"VariableDeclaration","scope":2030,"src":"2358:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"2358:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1983,"mutability":"mutable","name":"value","nameLocation":"2378:5:11","nodeType":"VariableDeclaration","scope":2030,"src":"2370:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:41:11"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"2411:0:11"},"scope":2075,"src":"2327:413:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1007],"body":{"id":2043,"nodeType":"Block","src":"3091:42:11","statements":[{"expression":{"arguments":[{"id":2040,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"3118:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2039,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3108:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2038,"id":2042,"nodeType":"Return","src":"3101:25:11"}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"2746:249:11","text":" @dev Returns the voting units of an `account`.\n WARNING: Overriding this function may compromise the internal vote accounting.\n `ERC20Votes` assumes tokens map to voting units 1:1 and this is not easy to change."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"_getVotingUnits","nameLocation":"3009:15:11","nodeType":"FunctionDefinition","overrides":{"id":2035,"nodeType":"OverrideSpecifier","overrides":[],"src":"3064:8:11"},"parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"account","nameLocation":"3033:7:11","nodeType":"VariableDeclaration","scope":2044,"src":"3025:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2032,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3024:17:11"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"3082:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3081:9:11"},"scope":2075,"src":"3000:133:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2056,"nodeType":"Block","src":"3286:48:11","statements":[{"expression":{"arguments":[{"id":2053,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3319:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2052,"name":"_numCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3303:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint32_$","typeString":"function (address) view returns (uint32)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3303:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":2051,"id":2055,"nodeType":"Return","src":"3296:31:11"}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"3139:64:11","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":2057,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"3217:14:11","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"account","nameLocation":"3240:7:11","nodeType":"VariableDeclaration","scope":2057,"src":"3232:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"3232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3231:17:11"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2057,"src":"3278:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2049,"name":"uint32","nodeType":"ElementaryTypeName","src":"3278:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3277:8:11"},"scope":2075,"src":"3208:126:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2073,"nodeType":"Block","src":"3524:50:11","statements":[{"expression":{"arguments":[{"id":2069,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3554:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2070,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3563:3:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2068,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3541:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint32_$returns$_t_struct$_Checkpoint208_$6955_memory_ptr_$","typeString":"function (address,uint32) view returns (struct Checkpoints.Checkpoint208 memory)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"functionReturnParameters":2067,"id":2072,"nodeType":"Return","src":"3534:33:11"}]},"documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"3340:66:11","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":2074,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"3420:11:11","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"account","nameLocation":"3440:7:11","nodeType":"VariableDeclaration","scope":2074,"src":"3432:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"pos","nameLocation":"3456:3:11","nodeType":"VariableDeclaration","scope":2074,"src":"3449:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2061,"name":"uint32","nodeType":"ElementaryTypeName","src":"3449:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3431:29:11"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2074,"src":"3490:32:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"Checkpoints.Checkpoint208","nameLocations":["3490:11:11","3502:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"3490:25:11"},"referencedDeclaration":6955,"src":"3490:25:11","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"3489:34:11"},"scope":2075,"src":"3411:163:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2076,"src":"1169:2407:11","usedErrors":[386,512,519,1071,1076,1081,1090,1095,1100,1963,2177,2249,2251,2828,2833,2838,4566,6424],"usedEvents":[395,404,1013,1723,1732]}],"src":"121:3456:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1789],"IERC20Metadata":[2101]},"id":2102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2077,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2102,"sourceUnit":1790,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2078,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2081,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1789,"src":"305:6:12"},"id":2082,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2101,"linearizedBaseContracts":[2101,1789],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2088,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2085,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2101,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2094,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2094,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2091,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2101,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2095,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2100,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2097,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2101,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2102,"src":"277:405:12","usedErrors":[],"usedEvents":[1723,1732]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2137]},"id":2138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2103,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"149:1963:13","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":2137,"linearizedBaseContracts":[2137],"name":"IERC20Permit","nameLocation":"2123:12:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"2142:850:13","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":2122,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:13","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"owner","nameLocation":"3030:5:13","nodeType":"VariableDeclaration","scope":2122,"src":"3022:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2109,"mutability":"mutable","name":"spender","nameLocation":"3053:7:13","nodeType":"VariableDeclaration","scope":2122,"src":"3045:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"3078:5:13","nodeType":"VariableDeclaration","scope":2122,"src":"3070:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:13","nodeType":"VariableDeclaration","scope":2122,"src":"3093:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"v","nameLocation":"3125:1:13","nodeType":"VariableDeclaration","scope":2122,"src":"3119:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2114,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"r","nameLocation":"3144:1:13","nodeType":"VariableDeclaration","scope":2122,"src":"3136:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"s","nameLocation":"3163:1:13","nodeType":"VariableDeclaration","scope":2122,"src":"3155:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:13"},"returnParameters":{"id":2121,"nodeType":"ParameterList","parameters":[],"src":"3179:0:13"},"scope":2137,"src":"2997:183:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"3186:294:13","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2130,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:13","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"owner","nameLocation":"3509:5:13","nodeType":"VariableDeclaration","scope":2130,"src":"3501:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:13"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2130,"src":"3539:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:13"},"scope":2137,"src":"3485:63:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2131,"nodeType":"StructuredDocumentation","src":"3554:128:13","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2136,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:13","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[],"src":"3765:2:13"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2136,"src":"3791:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:13"},"scope":2137,"src":"3740:60:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2138,"src":"2113:1689:13","usedErrors":[],"usedEvents":[]}],"src":"123:3680:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2167]},"id":2168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2139,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2167,"linearizedBaseContracts":[2167],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2148,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":2145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2144,"id":2147,"nodeType":"Return","src":"728:17:14"}]},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":2141,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2142,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":2167,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":2154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2153,"id":2156,"nodeType":"Return","src":"835:15:14"}]},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":2153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2158,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2151,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":2167,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2162,"id":2164,"nodeType":"Return","src":"945:8:14"}]},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":2167,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2168,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2235]},"id":2236,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2169,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2170,"nodeType":"StructuredDocumentation","src":"125:83:15","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2235,"linearizedBaseContracts":[2235],"name":"Nonces","nameLocation":"227:6:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"240:90:15","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2177,"name":"InvalidAccountNonce","nameLocation":"341:19:15","nodeType":"ErrorDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"account","nameLocation":"369:7:15","nodeType":"VariableDeclaration","scope":2177,"src":"361:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:15","nodeType":"VariableDeclaration","scope":2177,"src":"378:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:15"},"src":"335:65:15"},{"constant":false,"id":2181,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:15","nodeType":"VariableDeclaration","scope":2235,"src":"406:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2180,"keyName":"account","keyNameLocation":"422:7:15","keyType":{"id":2178,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2193,"nodeType":"Block","src":"607:38:15","statements":[{"expression":{"baseExpression":{"id":2189,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"624:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2191,"indexExpression":{"id":2190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"632:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2188,"id":2192,"nodeType":"Return","src":"617:21:15"}]},"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"464:69:15","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:15","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"owner","nameLocation":"562:5:15","nodeType":"VariableDeclaration","scope":2194,"src":"554:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:15"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"598:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:15"},"scope":2235,"src":"538:107:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2208,"nodeType":"Block","src":"828:326:15","statements":[{"id":2207,"nodeType":"UncheckedBlock","src":"1031:117:15","statements":[{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:15","subExpression":{"baseExpression":{"id":2202,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1121:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2204,"indexExpression":{"id":2203,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"1129:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2201,"id":2206,"nodeType":"Return","src":"1114:23:15"}]}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"651:103:15","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:15","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"owner","nameLocation":"786:5:15","nodeType":"VariableDeclaration","scope":2209,"src":"778:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:15"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2209,"src":"819:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:15"},"scope":2235,"src":"759:395:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"1338:149:15","statements":[{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"current","nameLocation":"1356:7:15","nodeType":"VariableDeclaration","scope":2233,"src":"1348:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2222,"initialValue":{"arguments":[{"id":2220,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1376:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2219,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"1366:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2223,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1396:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2224,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"1392:89:15","trueBody":{"id":2231,"nodeType":"Block","src":"1414:67:15","statements":[{"errorCall":{"arguments":[{"id":2227,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"1455:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2228,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2226,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"1435:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"RevertStatement","src":"1428:42:15"}]}}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"1160:100:15","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2234,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:15","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"owner","nameLocation":"1299:5:15","nodeType":"VariableDeclaration","scope":2234,"src":"1291:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:15","nodeType":"VariableDeclaration","scope":2234,"src":"1306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:15"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"1338:0:15"},"scope":2235,"src":"1265:222:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2236,"src":"209:1280:15","usedErrors":[2177],"usedEvents":[]}],"src":"99:1391:15"},"id":15},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2241],"ShortStrings":[2452],"StorageSlot":[2562]},"id":2453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2237,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2453,"sourceUnit":2563,"src":"132:46:16","symbolAliases":[{"foreign":{"id":2238,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"140:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2241,"name":"ShortString","nameLocation":"353:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:16","underlyingType":{"id":2240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"378:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2452,"linearizedBaseContracts":[2452],"name":"ShortStrings","nameLocation":"1263:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2245,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:16","nodeType":"VariableDeclaration","scope":2452,"src":"1345:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2249,"name":"StringTooLong","nameLocation":"1469:13:16","nodeType":"ErrorDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"str","nameLocation":"1490:3:16","nodeType":"VariableDeclaration","scope":2249,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2246,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:16"},"src":"1463:32:16"},{"errorSelector":"b3512b0c","id":2251,"name":"InvalidShortString","nameLocation":"1506:18:16","nodeType":"ErrorDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[],"src":"1524:2:16"},"src":"1500:27:16"},{"body":{"id":2294,"nodeType":"Block","src":"1786:208:16","statements":[{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:16","nodeType":"VariableDeclaration","scope":2294,"src":"1796:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2260,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2266,"initialValue":{"arguments":[{"id":2264,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1822:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:16","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2267,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"1840:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:16","memberName":"length","nodeType":"MemberAccess","src":"1840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2276,"nodeType":"IfStatement","src":"1836:72:16","trueBody":{"id":2275,"nodeType":"Block","src":"1858:50:16","statements":[{"errorCall":{"arguments":[{"id":2272,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"1893:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2271,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1879:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2274,"nodeType":"RevertStatement","src":"1872:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2285,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:16","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2288,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"1974:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:16","memberName":"length","nodeType":"MemberAccess","src":"1974:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:16","typeDescriptions":{}}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2277,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"1924:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"type(ShortString)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"functionReturnParameters":2259,"id":2293,"nodeType":"Return","src":"1917:70:16"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"1533:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2295,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:16","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"str","nameLocation":"1745:3:16","nodeType":"VariableDeclaration","scope":2295,"src":"1731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:16"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2295,"src":"1773:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2257,"nodeType":"UserDefinedTypeName","pathNode":{"id":2256,"name":"ShortString","nameLocations":["1773:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"1773:11:16"},"referencedDeclaration":2241,"src":"1773:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:16"},"scope":2452,"src":"1708:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"2152:331:16","statements":[{"assignments":[2305],"declarations":[{"constant":false,"id":2305,"mutability":"mutable","name":"len","nameLocation":"2170:3:16","nodeType":"VariableDeclaration","scope":2320,"src":"2162:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"arguments":[{"id":2307,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"id":2306,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:16"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"str","nameLocation":"2294:3:16","nodeType":"VariableDeclaration","scope":2320,"src":"2280:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2310,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2316,"initialValue":{"arguments":[{"hexValue":"3332","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2312,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:16"},{"AST":{"nativeSrc":"2376:81:16","nodeType":"YulBlock","src":"2376:81:16","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:16","nodeType":"YulIdentifier","src":"2397:3:16"},{"name":"len","nativeSrc":"2402:3:16","nodeType":"YulIdentifier","src":"2402:3:16"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:16","nodeType":"YulIdentifier","src":"2390:6:16"},"nativeSrc":"2390:16:16","nodeType":"YulFunctionCall","src":"2390:16:16"},"nativeSrc":"2390:16:16","nodeType":"YulExpressionStatement","src":"2390:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:16","nodeType":"YulIdentifier","src":"2430:3:16"},{"kind":"number","nativeSrc":"2435:4:16","nodeType":"YulLiteral","src":"2435:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:16","nodeType":"YulIdentifier","src":"2426:3:16"},"nativeSrc":"2426:14:16","nodeType":"YulFunctionCall","src":"2426:14:16"},{"name":"sstr","nativeSrc":"2442:4:16","nodeType":"YulIdentifier","src":"2442:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:16","nodeType":"YulIdentifier","src":"2419:6:16"},"nativeSrc":"2419:28:16","nodeType":"YulFunctionCall","src":"2419:28:16"},"nativeSrc":"2419:28:16","nodeType":"YulExpressionStatement","src":"2419:28:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2305,"isOffset":false,"isSlot":false,"src":"2402:3:16","valueSize":1},{"declaration":2299,"isOffset":false,"isSlot":false,"src":"2442:4:16","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"2397:3:16","valueSize":1},{"declaration":2311,"isOffset":false,"isSlot":false,"src":"2430:3:16","valueSize":1}],"id":2317,"nodeType":"InlineAssembly","src":"2367:90:16"},{"expression":{"id":2318,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"2473:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2303,"id":2319,"nodeType":"Return","src":"2466:10:16"}]},"documentation":{"id":2296,"nodeType":"StructuredDocumentation","src":"2000:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:16","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":2321,"src":"2096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2298,"nodeType":"UserDefinedTypeName","pathNode":{"id":2297,"name":"ShortString","nameLocations":["2096:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"2096:11:16"},"referencedDeclaration":2241,"src":"2096:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:16"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"2137:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2301,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:16"},"scope":2452,"src":"2078:405:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"2625:175:16","statements":[{"assignments":[2331],"declarations":[{"constant":false,"id":2331,"mutability":"mutable","name":"result","nameLocation":"2643:6:16","nodeType":"VariableDeclaration","scope":2352,"src":"2635:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2341,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2336,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2679:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"expression":{"id":2334,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"2660:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"type(ShortString)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:16","typeDescriptions":{}}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"2706:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2349,"nodeType":"IfStatement","src":"2702:69:16","trueBody":{"id":2348,"nodeType":"Block","src":"2719:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2345,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2740:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"RevertStatement","src":"2733:27:16"}]}},{"expression":{"id":2350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"2787:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2329,"id":2351,"nodeType":"Return","src":"2780:13:16"}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"2489:61:16","text":" @dev Return the length of a `ShortString`."},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:16","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:16","nodeType":"VariableDeclaration","scope":2353,"src":"2575:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2324,"nodeType":"UserDefinedTypeName","pathNode":{"id":2323,"name":"ShortString","nameLocations":["2575:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"2575:11:16"},"referencedDeclaration":2241,"src":"2575:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:16"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"2616:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:16"},"scope":2452,"src":"2555:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2392,"nodeType":"Block","src":"3023:231:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3043:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2364,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:16","typeDescriptions":{}}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:16","memberName":"length","nodeType":"MemberAccess","src":"3037:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2390,"nodeType":"Block","src":"3121:127:16","statements":[{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2379,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"3161:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2376,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"3135:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2562_$","typeString":"type(library StorageSlot)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2539,"src":"3135:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2470_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2470_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2469,"src":"3135:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3176:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2384,"nodeType":"ExpressionStatement","src":"3135:46:16"},{"expression":{"arguments":[{"id":2387,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3219:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2385,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3202:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"type(ShortString)"}},"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"functionReturnParameters":2363,"id":2389,"nodeType":"Return","src":"3195:42:16"}]},"id":2391,"nodeType":"IfStatement","src":"3033:215:16","trueBody":{"id":2375,"nodeType":"Block","src":"3063:52:16","statements":[{"expression":{"arguments":[{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3098:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2371,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3084:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"functionReturnParameters":2363,"id":2374,"nodeType":"Return","src":"3077:27:16"}]}}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"2806:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2393,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:16","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"value","nameLocation":"2963:5:16","nodeType":"VariableDeclaration","scope":2393,"src":"2949:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2355,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"store","nameLocation":"2985:5:16","nodeType":"VariableDeclaration","scope":2393,"src":"2970:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2357,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:16"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2393,"src":"3010:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2361,"nodeType":"UserDefinedTypeName","pathNode":{"id":2360,"name":"ShortString","nameLocations":["3010:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"3010:11:16"},"referencedDeclaration":2241,"src":"3010:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:16"},"scope":2452,"src":"2914:340:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2419,"nodeType":"Block","src":"3494:158:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3527:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"expression":{"id":2404,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3508:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"type(ShortString)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2408,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3537:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2417,"nodeType":"Block","src":"3609:37:16","statements":[{"expression":{"id":2415,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"3630:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2403,"id":2416,"nodeType":"Return","src":"3623:12:16"}]},"id":2418,"nodeType":"IfStatement","src":"3504:142:16","trueBody":{"id":2414,"nodeType":"Block","src":"3556:47:16","statements":[{"expression":{"arguments":[{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3586:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"id":2410,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"3577:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2403,"id":2413,"nodeType":"Return","src":"3570:22:16"}]}}]},"documentation":{"id":2394,"nodeType":"StructuredDocumentation","src":"3260:120:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2420,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:16","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"value","nameLocation":"3427:5:16","nodeType":"VariableDeclaration","scope":2420,"src":"3415:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2396,"nodeType":"UserDefinedTypeName","pathNode":{"id":2395,"name":"ShortString","nameLocations":["3415:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"3415:11:16"},"referencedDeclaration":2241,"src":"3415:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"store","nameLocation":"3449:5:16","nodeType":"VariableDeclaration","scope":2420,"src":"3434:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2398,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:16"},"returnParameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2420,"src":"3479:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2401,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:16"},"scope":2452,"src":"3385:267:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"4132:174:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"4165:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"expression":{"id":2431,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4146:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"type(ShortString)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2435,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"4175:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2448,"nodeType":"Block","src":"4249:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2444,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4276:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2442,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:16","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:16","memberName":"length","nodeType":"MemberAccess","src":"4270:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2430,"id":2447,"nodeType":"Return","src":"4263:26:16"}]},"id":2449,"nodeType":"IfStatement","src":"4142:158:16","trueBody":{"id":2441,"nodeType":"Block","src":"4194:49:16","statements":[{"expression":{"arguments":[{"id":2438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"4226:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}],"id":2437,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"4215:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2241_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2430,"id":2440,"nodeType":"Return","src":"4208:24:16"}]}}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"3658:364:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:16","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"value","nameLocation":"4071:5:16","nodeType":"VariableDeclaration","scope":2451,"src":"4059:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":2423,"nodeType":"UserDefinedTypeName","pathNode":{"id":2422,"name":"ShortString","nameLocations":["4059:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"4059:11:16"},"referencedDeclaration":2241,"src":"4059:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"store","nameLocation":"4093:5:16","nodeType":"VariableDeclaration","scope":2451,"src":"4078:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2425,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:16"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"4123:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:16"},"scope":2452,"src":"4027:279:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2453,"src":"1255:3053:16","usedErrors":[2249,2251],"usedEvents":[]}],"src":"106:4203:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2562]},"id":2563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2454,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"219:1025:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2562,"linearizedBaseContracts":[2562],"name":"StorageSlot","nameLocation":"1253:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2458,"members":[{"constant":false,"id":2457,"mutability":"mutable","name":"value","nameLocation":"1308:5:17","nodeType":"VariableDeclaration","scope":2458,"src":"1300:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2456,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:17","nodeType":"StructDefinition","scope":2562,"src":"1271:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2461,"members":[{"constant":false,"id":2460,"mutability":"mutable","name":"value","nameLocation":"1360:5:17","nodeType":"VariableDeclaration","scope":2461,"src":"1355:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2459,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:17","nodeType":"StructDefinition","scope":2562,"src":"1326:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2464,"members":[{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"1415:5:17","nodeType":"VariableDeclaration","scope":2464,"src":"1407:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:17","nodeType":"StructDefinition","scope":2562,"src":"1378:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2467,"members":[{"constant":false,"id":2466,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":2467,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":2562,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2470,"members":[{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"1523:5:17","nodeType":"VariableDeclaration","scope":2470,"src":"1516:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2468,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:17","nodeType":"StructDefinition","scope":2562,"src":"1488:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2473,"members":[{"constant":false,"id":2472,"mutability":"mutable","name":"value","nameLocation":"1574:5:17","nodeType":"VariableDeclaration","scope":2473,"src":"1568:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:17","nodeType":"StructDefinition","scope":2562,"src":"1541:45:17","visibility":"public"},{"body":{"id":2483,"nodeType":"Block","src":"1768:106:17","statements":[{"AST":{"nativeSrc":"1830:38:17","nodeType":"YulBlock","src":"1830:38:17","statements":[{"nativeSrc":"1844:14:17","nodeType":"YulAssignment","src":"1844:14:17","value":{"name":"slot","nativeSrc":"1854:4:17","nodeType":"YulIdentifier","src":"1854:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:17","nodeType":"YulIdentifier","src":"1844:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2480,"isOffset":false,"isSlot":true,"src":"1844:6:17","suffix":"slot","valueSize":1},{"declaration":2476,"isOffset":false,"isSlot":false,"src":"1854:4:17","valueSize":1}],"id":2482,"nodeType":"InlineAssembly","src":"1821:47:17"}]},"documentation":{"id":2474,"nodeType":"StructuredDocumentation","src":"1592:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:17","nodeType":"FunctionDefinition","parameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"slot","nameLocation":"1716:4:17","nodeType":"VariableDeclaration","scope":2484,"src":"1708:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:17"},"returnParameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"r","nameLocation":"1765:1:17","nodeType":"VariableDeclaration","scope":2484,"src":"1745:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2458_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"AddressSlot","nameLocations":["1745:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2458,"src":"1745:11:17"},"referencedDeclaration":2458,"src":"1745:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2458_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:17"},"scope":2562,"src":"1684:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"2056:106:17","statements":[{"AST":{"nativeSrc":"2118:38:17","nodeType":"YulBlock","src":"2118:38:17","statements":[{"nativeSrc":"2132:14:17","nodeType":"YulAssignment","src":"2132:14:17","value":{"name":"slot","nativeSrc":"2142:4:17","nodeType":"YulIdentifier","src":"2142:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:17","nodeType":"YulIdentifier","src":"2132:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2491,"isOffset":false,"isSlot":true,"src":"2132:6:17","suffix":"slot","valueSize":1},{"declaration":2487,"isOffset":false,"isSlot":false,"src":"2142:4:17","valueSize":1}],"id":2493,"nodeType":"InlineAssembly","src":"2109:47:17"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"1880:87:17","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:17","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"slot","nameLocation":"2004:4:17","nodeType":"VariableDeclaration","scope":2495,"src":"1996:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:17"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"r","nameLocation":"2053:1:17","nodeType":"VariableDeclaration","scope":2495,"src":"2033:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2461_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2490,"nodeType":"UserDefinedTypeName","pathNode":{"id":2489,"name":"BooleanSlot","nameLocations":["2033:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2461,"src":"2033:11:17"},"referencedDeclaration":2461,"src":"2033:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2461_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:17"},"scope":2562,"src":"1972:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"2344:106:17","statements":[{"AST":{"nativeSrc":"2406:38:17","nodeType":"YulBlock","src":"2406:38:17","statements":[{"nativeSrc":"2420:14:17","nodeType":"YulAssignment","src":"2420:14:17","value":{"name":"slot","nativeSrc":"2430:4:17","nodeType":"YulIdentifier","src":"2430:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:17","nodeType":"YulIdentifier","src":"2420:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2502,"isOffset":false,"isSlot":true,"src":"2420:6:17","suffix":"slot","valueSize":1},{"declaration":2498,"isOffset":false,"isSlot":false,"src":"2430:4:17","valueSize":1}],"id":2504,"nodeType":"InlineAssembly","src":"2397:47:17"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"2168:87:17","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:17","nodeType":"FunctionDefinition","parameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"slot","nameLocation":"2292:4:17","nodeType":"VariableDeclaration","scope":2506,"src":"2284:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:17"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2502,"mutability":"mutable","name":"r","nameLocation":"2341:1:17","nodeType":"VariableDeclaration","scope":2506,"src":"2321:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2464_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2501,"nodeType":"UserDefinedTypeName","pathNode":{"id":2500,"name":"Bytes32Slot","nameLocations":["2321:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2464,"src":"2321:11:17"},"referencedDeclaration":2464,"src":"2321:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2464_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:17"},"scope":2562,"src":"2260:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"2632:106:17","statements":[{"AST":{"nativeSrc":"2694:38:17","nodeType":"YulBlock","src":"2694:38:17","statements":[{"nativeSrc":"2708:14:17","nodeType":"YulAssignment","src":"2708:14:17","value":{"name":"slot","nativeSrc":"2718:4:17","nodeType":"YulIdentifier","src":"2718:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:17","nodeType":"YulIdentifier","src":"2708:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2513,"isOffset":false,"isSlot":true,"src":"2708:6:17","suffix":"slot","valueSize":1},{"declaration":2509,"isOffset":false,"isSlot":false,"src":"2718:4:17","valueSize":1}],"id":2515,"nodeType":"InlineAssembly","src":"2685:47:17"}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"2456:87:17","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:17","nodeType":"FunctionDefinition","parameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"slot","nameLocation":"2580:4:17","nodeType":"VariableDeclaration","scope":2517,"src":"2572:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:17"},"returnParameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"r","nameLocation":"2629:1:17","nodeType":"VariableDeclaration","scope":2517,"src":"2609:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2467_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2512,"nodeType":"UserDefinedTypeName","pathNode":{"id":2511,"name":"Uint256Slot","nameLocations":["2609:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2467,"src":"2609:11:17"},"referencedDeclaration":2467,"src":"2609:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2467_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:17"},"scope":2562,"src":"2548:190:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2527,"nodeType":"Block","src":"2917:106:17","statements":[{"AST":{"nativeSrc":"2979:38:17","nodeType":"YulBlock","src":"2979:38:17","statements":[{"nativeSrc":"2993:14:17","nodeType":"YulAssignment","src":"2993:14:17","value":{"name":"slot","nativeSrc":"3003:4:17","nodeType":"YulIdentifier","src":"3003:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:17","nodeType":"YulIdentifier","src":"2993:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2524,"isOffset":false,"isSlot":true,"src":"2993:6:17","suffix":"slot","valueSize":1},{"declaration":2520,"isOffset":false,"isSlot":false,"src":"3003:4:17","valueSize":1}],"id":2526,"nodeType":"InlineAssembly","src":"2970:47:17"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"2744:86:17","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:17","nodeType":"FunctionDefinition","parameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"slot","nameLocation":"2866:4:17","nodeType":"VariableDeclaration","scope":2528,"src":"2858:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:17"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"r","nameLocation":"2914:1:17","nodeType":"VariableDeclaration","scope":2528,"src":"2895:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2470_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2523,"nodeType":"UserDefinedTypeName","pathNode":{"id":2522,"name":"StringSlot","nameLocations":["2895:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"2895:10:17"},"referencedDeclaration":2470,"src":"2895:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2470_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:17"},"scope":2562,"src":"2835:188:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2538,"nodeType":"Block","src":"3225:112:17","statements":[{"AST":{"nativeSrc":"3287:44:17","nodeType":"YulBlock","src":"3287:44:17","statements":[{"nativeSrc":"3301:20:17","nodeType":"YulAssignment","src":"3301:20:17","value":{"name":"store.slot","nativeSrc":"3311:10:17","nodeType":"YulIdentifier","src":"3311:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:17","nodeType":"YulIdentifier","src":"3301:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2535,"isOffset":false,"isSlot":true,"src":"3301:6:17","suffix":"slot","valueSize":1},{"declaration":2531,"isOffset":false,"isSlot":true,"src":"3311:10:17","suffix":"slot","valueSize":1}],"id":2537,"nodeType":"InlineAssembly","src":"3278:53:17"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"3029:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2539,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:17","nodeType":"FunctionDefinition","parameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"store","nameLocation":"3173:5:17","nodeType":"VariableDeclaration","scope":2539,"src":"3158:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2530,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:17"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"r","nameLocation":"3222:1:17","nodeType":"VariableDeclaration","scope":2539,"src":"3203:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2470_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2534,"nodeType":"UserDefinedTypeName","pathNode":{"id":2533,"name":"StringSlot","nameLocations":["3203:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2470,"src":"3203:10:17"},"referencedDeclaration":2470,"src":"3203:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2470_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:17"},"scope":2562,"src":"3135:202:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2549,"nodeType":"Block","src":"3513:106:17","statements":[{"AST":{"nativeSrc":"3575:38:17","nodeType":"YulBlock","src":"3575:38:17","statements":[{"nativeSrc":"3589:14:17","nodeType":"YulAssignment","src":"3589:14:17","value":{"name":"slot","nativeSrc":"3599:4:17","nodeType":"YulIdentifier","src":"3599:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:17","nodeType":"YulIdentifier","src":"3589:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2546,"isOffset":false,"isSlot":true,"src":"3589:6:17","suffix":"slot","valueSize":1},{"declaration":2542,"isOffset":false,"isSlot":false,"src":"3599:4:17","valueSize":1}],"id":2548,"nodeType":"InlineAssembly","src":"3566:47:17"}]},"documentation":{"id":2540,"nodeType":"StructuredDocumentation","src":"3343:85:17","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:17","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"slot","nameLocation":"3463:4:17","nodeType":"VariableDeclaration","scope":2550,"src":"3455:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:17"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"r","nameLocation":"3510:1:17","nodeType":"VariableDeclaration","scope":2550,"src":"3492:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2473_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2545,"nodeType":"UserDefinedTypeName","pathNode":{"id":2544,"name":"BytesSlot","nameLocations":["3492:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2473,"src":"3492:9:17"},"referencedDeclaration":2473,"src":"3492:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2473_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:17"},"scope":2562,"src":"3433:186:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"3816:112:17","statements":[{"AST":{"nativeSrc":"3878:44:17","nodeType":"YulBlock","src":"3878:44:17","statements":[{"nativeSrc":"3892:20:17","nodeType":"YulAssignment","src":"3892:20:17","value":{"name":"store.slot","nativeSrc":"3902:10:17","nodeType":"YulIdentifier","src":"3902:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:17","nodeType":"YulIdentifier","src":"3892:6:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2557,"isOffset":false,"isSlot":true,"src":"3892:6:17","suffix":"slot","valueSize":1},{"declaration":2553,"isOffset":false,"isSlot":true,"src":"3902:10:17","suffix":"slot","valueSize":1}],"id":2559,"nodeType":"InlineAssembly","src":"3869:53:17"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"3625:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:17","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"store","nameLocation":"3765:5:17","nodeType":"VariableDeclaration","scope":2561,"src":"3751:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2552,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:17"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"r","nameLocation":"3813:1:17","nodeType":"VariableDeclaration","scope":2561,"src":"3795:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2473_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2556,"nodeType":"UserDefinedTypeName","pathNode":{"id":2555,"name":"BytesSlot","nameLocations":["3795:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2473,"src":"3795:9:17"},"referencedDeclaration":2473,"src":"3795:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2473_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:17"},"scope":2562,"src":"3729:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2563,"src":"1245:2685:17","usedErrors":[],"usedEvents":[]}],"src":"193:3738:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4556],"SignedMath":[6416],"Strings":[2817]},"id":2818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2566,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2818,"sourceUnit":4557,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2565,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2568,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2818,"sourceUnit":6417,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2567,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2569,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2817,"linearizedBaseContracts":[2817],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2572,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2817,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2570,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2575,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2817,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2573,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2582,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2582,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2582,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2629,"nodeType":"Block","src":"708:627:18","statements":[{"id":2628,"nodeType":"UncheckedBlock","src":"718:611:18","statements":[{"assignments":[2591],"declarations":[{"constant":false,"id":2591,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2628,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2598,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2592,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2600],"declarations":[{"constant":false,"id":2600,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2628,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2599,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"id":2603,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2607],"declarations":[{"constant":false,"id":2607,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2628,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2608,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nativeSrc":"930:67:18","nodeType":"YulBlock","src":"930:67:18","statements":[{"nativeSrc":"948:35:18","nodeType":"YulAssignment","src":"948:35:18","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:18","nodeType":"YulIdentifier","src":"959:6:18"},{"arguments":[{"kind":"number","nativeSrc":"971:2:18","nodeType":"YulLiteral","src":"971:2:18","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:18","nodeType":"YulIdentifier","src":"975:6:18"}],"functionName":{"name":"add","nativeSrc":"967:3:18","nodeType":"YulIdentifier","src":"967:3:18"},"nativeSrc":"967:15:18","nodeType":"YulFunctionCall","src":"967:15:18"}],"functionName":{"name":"add","nativeSrc":"955:3:18","nodeType":"YulIdentifier","src":"955:3:18"},"nativeSrc":"955:28:18","nodeType":"YulFunctionCall","src":"955:28:18"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:18","nodeType":"YulIdentifier","src":"948:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2600,"isOffset":false,"isSlot":false,"src":"959:6:18","valueSize":1},{"declaration":2591,"isOffset":false,"isSlot":false,"src":"975:6:18","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"948:3:18","valueSize":1}],"id":2609,"nodeType":"InlineAssembly","src":"921:76:18"},{"body":{"id":2624,"nodeType":"Block","src":"1023:269:18","statements":[{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:18","subExpression":{"id":2611,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1041:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"1041:5:18"},{"AST":{"nativeSrc":"1124:86:18","nodeType":"YulBlock","src":"1124:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:18","nodeType":"YulIdentifier","src":"1154:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:18","nodeType":"YulIdentifier","src":"1168:5:18"},{"kind":"number","nativeSrc":"1175:2:18","nodeType":"YulLiteral","src":"1175:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:18","nodeType":"YulIdentifier","src":"1164:3:18"},"nativeSrc":"1164:14:18","nodeType":"YulFunctionCall","src":"1164:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:18","nodeType":"YulIdentifier","src":"1180:10:18"}],"functionName":{"name":"byte","nativeSrc":"1159:4:18","nodeType":"YulIdentifier","src":"1159:4:18"},"nativeSrc":"1159:32:18","nodeType":"YulFunctionCall","src":"1159:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:18","nodeType":"YulIdentifier","src":"1146:7:18"},"nativeSrc":"1146:46:18","nodeType":"YulFunctionCall","src":"1146:46:18"},"nativeSrc":"1146:46:18","nodeType":"YulExpressionStatement","src":"1146:46:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2572,"isOffset":false,"isSlot":false,"src":"1180:10:18","valueSize":1},{"declaration":2607,"isOffset":false,"isSlot":false,"src":"1154:3:18","valueSize":1},{"declaration":2585,"isOffset":false,"isSlot":false,"src":"1168:5:18","valueSize":1}],"id":2614,"nodeType":"InlineAssembly","src":"1115:95:18"},{"expression":{"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1227:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2618,"nodeType":"ExpressionStatement","src":"1227:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1260:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"nodeType":"IfStatement","src":"1256:21:18","trueBody":{"id":2622,"nodeType":"Break","src":"1272:5:18"}}]},"condition":{"hexValue":"74727565","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2625,"nodeType":"WhileStatement","src":"1010:282:18"},{"expression":{"id":2626,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1312:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2589,"id":2627,"nodeType":"Return","src":"1305:13:18"}]}]},"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2630,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2630,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2630,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2587,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2817,"src":"637:698:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2655,"nodeType":"Block","src":"1511:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1542:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:18","trueExpression":{"hexValue":"2d","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"1588:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2648,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1573:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6416_$","typeString":"type(library SignedMath)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6415,"src":"1573:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2647,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"1564:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2638,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:18","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2637,"id":2654,"nodeType":"Return","src":"1521:75:18"}]},"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"1341:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:18","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"value","nameLocation":"1466:5:18","nodeType":"VariableDeclaration","scope":2656,"src":"1459:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2632,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:18"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"1496:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2635,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:18"},"scope":2817,"src":"1435:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2675,"nodeType":"Block","src":"1782:100:18","statements":[{"id":2674,"nodeType":"UncheckedBlock","src":"1792:84:18","statements":[{"expression":{"arguments":[{"id":2665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"1835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"1854:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2666,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"1842:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4498,"src":"1842:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2664,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2676,2759,2779],"referencedDeclaration":2759,"src":"1823:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2663,"id":2673,"nodeType":"Return","src":"1816:49:18"}]}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"1609:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:18","nodeType":"FunctionDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"value","nameLocation":"1737:5:18","nodeType":"VariableDeclaration","scope":2676,"src":"1729:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:18"},"returnParameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"1767:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2661,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:18"},"scope":2817,"src":"1708:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"2095:435:18","statements":[{"assignments":[2687],"declarations":[{"constant":false,"id":2687,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:18","nodeType":"VariableDeclaration","scope":2758,"src":"2105:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2689,"initialValue":{"id":2688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"2126:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:18"},{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:18","nodeType":"VariableDeclaration","scope":2758,"src":"2141:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2700,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2695,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"2177:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2692,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:18"},{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2701,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2198:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2703,"indexExpression":{"hexValue":"30","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2706,"nodeType":"ExpressionStatement","src":"2198:15:18"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2707,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2223:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2709,"indexExpression":{"hexValue":"31","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2712,"nodeType":"ExpressionStatement","src":"2223:15:18"},{"body":{"id":2741,"nodeType":"Block","src":"2293:95:18","statements":[{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2727,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2307:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2729,"indexExpression":{"id":2728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"2314:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2730,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"2319:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2734,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2731,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"2330:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2736,"nodeType":"ExpressionStatement","src":"2307:40:18"},{"expression":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2737,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"2361:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2740,"nodeType":"ExpressionStatement","src":"2361:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2721,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"2281:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2742,"initializationExpression":{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"i","nameLocation":"2261:1:18","nodeType":"VariableDeclaration","scope":2742,"src":"2253:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2720,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2716,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"2269:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:18","subExpression":{"id":2724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"2290:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"nodeType":"ExpressionStatement","src":"2288:3:18"},"nodeType":"ForStatement","src":"2248:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"2401:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"2397:96:18","trueBody":{"id":2751,"nodeType":"Block","src":"2418:75:18","statements":[{"errorCall":{"arguments":[{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"2468:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2748,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"2475:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2746,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"2439:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2750,"nodeType":"RevertStatement","src":"2432:50:18"}]}},{"expression":{"arguments":[{"id":2755,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"2516:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2753,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:18","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2685,"id":2757,"nodeType":"Return","src":"2502:21:18"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"1888:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:18","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"value","nameLocation":"2034:5:18","nodeType":"VariableDeclaration","scope":2759,"src":"2026:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"length","nameLocation":"2049:6:18","nodeType":"VariableDeclaration","scope":2759,"src":"2041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:18"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"2080:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:18"},"scope":2817,"src":"2005:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2778,"nodeType":"Block","src":"2762:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2772,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"2807:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2770,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:18","typeDescriptions":{}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:18","typeDescriptions":{}}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2775,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"2815:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2767,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2676,2759,2779],"referencedDeclaration":2759,"src":"2779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2766,"id":2777,"nodeType":"Return","src":"2772:58:18"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"2536:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2779,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:18","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"addr","nameLocation":"2718:4:18","nodeType":"VariableDeclaration","scope":2779,"src":"2710:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:18"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2779,"src":"2747:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2764,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:18"},"scope":2817,"src":"2689:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"2992:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3015:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2789,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:18","typeDescriptions":{}}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:18","memberName":"length","nodeType":"MemberAccess","src":"3009:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"3034:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:18","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:18","memberName":"length","nodeType":"MemberAccess","src":"3028:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2782,"src":"3063:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:18","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2800,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"3086:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2807,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:18","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2788,"id":2814,"nodeType":"Return","src":"3002:87:18"}]},"documentation":{"id":2780,"nodeType":"StructuredDocumentation","src":"2843:66:18","text":" @dev Returns true if the two strings are equal."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:18","nodeType":"FunctionDefinition","parameters":{"id":2785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"a","nameLocation":"2943:1:18","nodeType":"VariableDeclaration","scope":2816,"src":"2929:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2781,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"b","nameLocation":"2960:1:18","nodeType":"VariableDeclaration","scope":2816,"src":"2946:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2783,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:18"},"returnParameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2816,"src":"2986:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2786,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:18"},"scope":2817,"src":"2914:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2818,"src":"251:2847:18","usedErrors":[2582],"usedEvents":[]}],"src":"101:2998:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3165]},"id":3166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3165,"linearizedBaseContracts":[3165],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2825,"members":[{"id":2821,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2822,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2823,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2824,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2828,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2833,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2833,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2838,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2838,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2890,"nodeType":"Block","src":"2242:653:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2853,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"2256:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:19","memberName":"length","nodeType":"MemberAccess","src":"2256:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2888,"nodeType":"Block","src":"2781:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:19","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2879,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"2815:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"2815:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2883,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"2860:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:19","memberName":"length","nodeType":"MemberAccess","src":"2860:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:19","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2852,"id":2887,"nodeType":"Return","src":"2795:83:19"}]},"id":2889,"nodeType":"IfStatement","src":"2252:637:19","trueBody":{"id":2874,"nodeType":"Block","src":"2280:495:19","statements":[{"assignments":[2858],"declarations":[{"constant":false,"id":2858,"mutability":"mutable","name":"r","nameLocation":"2302:1:19","nodeType":"VariableDeclaration","scope":2874,"src":"2294:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2859,"nodeType":"VariableDeclarationStatement","src":"2294:9:19"},{"assignments":[2861],"declarations":[{"constant":false,"id":2861,"mutability":"mutable","name":"s","nameLocation":"2325:1:19","nodeType":"VariableDeclaration","scope":2874,"src":"2317:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2862,"nodeType":"VariableDeclarationStatement","src":"2317:9:19"},{"assignments":[2864],"declarations":[{"constant":false,"id":2864,"mutability":"mutable","name":"v","nameLocation":"2346:1:19","nodeType":"VariableDeclaration","scope":2874,"src":"2340:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2863,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2865,"nodeType":"VariableDeclarationStatement","src":"2340:7:19"},{"AST":{"nativeSrc":"2548:171:19","nodeType":"YulBlock","src":"2548:171:19","statements":[{"nativeSrc":"2566:32:19","nodeType":"YulAssignment","src":"2566:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:19","nodeType":"YulIdentifier","src":"2581:9:19"},{"kind":"number","nativeSrc":"2592:4:19","nodeType":"YulLiteral","src":"2592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:19","nodeType":"YulIdentifier","src":"2577:3:19"},"nativeSrc":"2577:20:19","nodeType":"YulFunctionCall","src":"2577:20:19"}],"functionName":{"name":"mload","nativeSrc":"2571:5:19","nodeType":"YulIdentifier","src":"2571:5:19"},"nativeSrc":"2571:27:19","nodeType":"YulFunctionCall","src":"2571:27:19"},"variableNames":[{"name":"r","nativeSrc":"2566:1:19","nodeType":"YulIdentifier","src":"2566:1:19"}]},{"nativeSrc":"2615:32:19","nodeType":"YulAssignment","src":"2615:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:19","nodeType":"YulIdentifier","src":"2630:9:19"},{"kind":"number","nativeSrc":"2641:4:19","nodeType":"YulLiteral","src":"2641:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:19","nodeType":"YulIdentifier","src":"2626:3:19"},"nativeSrc":"2626:20:19","nodeType":"YulFunctionCall","src":"2626:20:19"}],"functionName":{"name":"mload","nativeSrc":"2620:5:19","nodeType":"YulIdentifier","src":"2620:5:19"},"nativeSrc":"2620:27:19","nodeType":"YulFunctionCall","src":"2620:27:19"},"variableNames":[{"name":"s","nativeSrc":"2615:1:19","nodeType":"YulIdentifier","src":"2615:1:19"}]},{"nativeSrc":"2664:41:19","nodeType":"YulAssignment","src":"2664:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:19","nodeType":"YulLiteral","src":"2674:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:19","nodeType":"YulIdentifier","src":"2687:9:19"},{"kind":"number","nativeSrc":"2698:4:19","nodeType":"YulLiteral","src":"2698:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:19","nodeType":"YulIdentifier","src":"2683:3:19"},"nativeSrc":"2683:20:19","nodeType":"YulFunctionCall","src":"2683:20:19"}],"functionName":{"name":"mload","nativeSrc":"2677:5:19","nodeType":"YulIdentifier","src":"2677:5:19"},"nativeSrc":"2677:27:19","nodeType":"YulFunctionCall","src":"2677:27:19"}],"functionName":{"name":"byte","nativeSrc":"2669:4:19","nodeType":"YulIdentifier","src":"2669:4:19"},"nativeSrc":"2669:36:19","nodeType":"YulFunctionCall","src":"2669:36:19"},"variableNames":[{"name":"v","nativeSrc":"2664:1:19","nodeType":"YulIdentifier","src":"2664:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2858,"isOffset":false,"isSlot":false,"src":"2566:1:19","valueSize":1},{"declaration":2861,"isOffset":false,"isSlot":false,"src":"2615:1:19","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"2581:9:19","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"2630:9:19","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"2687:9:19","valueSize":1},{"declaration":2864,"isOffset":false,"isSlot":false,"src":"2664:1:19","valueSize":1}],"id":2866,"nodeType":"InlineAssembly","src":"2539:180:19"},{"expression":{"arguments":[{"id":2868,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2750:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2869,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"2756:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2870,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2759:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2871,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"2762:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2867,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2891,2971,3079],"referencedDeclaration":3079,"src":"2739:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2852,"id":2873,"nodeType":"Return","src":"2732:32:19"}]}}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2891,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"hash","nameLocation":"2157:4:19","nodeType":"VariableDeclaration","scope":2891,"src":"2149:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"signature","nameLocation":"2176:9:19","nodeType":"VariableDeclaration","scope":2891,"src":"2163:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:19"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"2210:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"2219:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2848,"nodeType":"UserDefinedTypeName","pathNode":{"id":2847,"name":"RecoverError","nameLocations":["2219:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"2219:12:19"},"referencedDeclaration":2825,"src":"2219:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"2233:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:19"},"scope":3165,"src":"2129:766:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"3789:168:19","statements":[{"assignments":[2902,2905,2907],"declarations":[{"constant":false,"id":2902,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:19","nodeType":"VariableDeclaration","scope":2920,"src":"3800:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2905,"mutability":"mutable","name":"error","nameLocation":"3832:5:19","nodeType":"VariableDeclaration","scope":2920,"src":"3819:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2904,"nodeType":"UserDefinedTypeName","pathNode":{"id":2903,"name":"RecoverError","nameLocations":["3819:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"3819:12:19"},"referencedDeclaration":2825,"src":"3819:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:19","nodeType":"VariableDeclaration","scope":2920,"src":"3839:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2906,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2912,"initialValue":{"arguments":[{"id":2909,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"3870:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2910,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"3876:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2908,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2891,2971,3079],"referencedDeclaration":2891,"src":"3859:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:19"},{"expression":{"arguments":[{"id":2914,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3908:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"id":2915,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3915:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2913,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"3896:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2825_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"ExpressionStatement","src":"3896:28:19"},{"expression":{"id":2918,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"3941:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2900,"id":2919,"nodeType":"Return","src":"3934:16:19"}]},"documentation":{"id":2892,"nodeType":"StructuredDocumentation","src":"2901:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:19","nodeType":"FunctionDefinition","parameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"hash","nameLocation":"3727:4:19","nodeType":"VariableDeclaration","scope":2921,"src":"3719:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2896,"mutability":"mutable","name":"signature","nameLocation":"3746:9:19","nodeType":"VariableDeclaration","scope":2921,"src":"3733:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2895,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:19"},"returnParameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"3780:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:19"},"scope":3165,"src":"3702:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2970,"nodeType":"Block","src":"4285:342:19","statements":[{"id":2969,"nodeType":"UncheckedBlock","src":"4295:326:19","statements":[{"assignments":[2939],"declarations":[{"constant":false,"id":2939,"mutability":"mutable","name":"s","nameLocation":"4327:1:19","nodeType":"VariableDeclaration","scope":2969,"src":"4319:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2946,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"4331:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:19","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:19"},{"assignments":[2948],"declarations":[{"constant":false,"id":2948,"mutability":"mutable","name":"v","nameLocation":"4528:1:19","nodeType":"VariableDeclaration","scope":2969,"src":"4522:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2947,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2961,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2953,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"4547:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:19","typeDescriptions":{}}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2949,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:19","typeDescriptions":{}}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:19"},{"expression":{"arguments":[{"id":2963,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"4596:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2964,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"4602:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2965,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"4605:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2966,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"4608:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2962,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2891,2971,3079],"referencedDeclaration":3079,"src":"4585:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2937,"id":2968,"nodeType":"Return","src":"4578:32:19"}]}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"3963:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":2971,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:19","nodeType":"FunctionDefinition","parameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"hash","nameLocation":"4201:4:19","nodeType":"VariableDeclaration","scope":2971,"src":"4193:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2926,"mutability":"mutable","name":"r","nameLocation":"4215:1:19","nodeType":"VariableDeclaration","scope":2971,"src":"4207:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"vs","nameLocation":"4226:2:19","nodeType":"VariableDeclaration","scope":2971,"src":"4218:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:19"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"4253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"4262:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"RecoverError","nameLocations":["4262:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"4262:12:19"},"referencedDeclaration":2825,"src":"4262:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2971,"src":"4276:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:19"},"scope":3165,"src":"4173:454:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3003,"nodeType":"Block","src":"4840:164:19","statements":[{"assignments":[2984,2987,2989],"declarations":[{"constant":false,"id":2984,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:19","nodeType":"VariableDeclaration","scope":3003,"src":"4851:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2987,"mutability":"mutable","name":"error","nameLocation":"4883:5:19","nodeType":"VariableDeclaration","scope":3003,"src":"4870:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2986,"nodeType":"UserDefinedTypeName","pathNode":{"id":2985,"name":"RecoverError","nameLocations":["4870:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"4870:12:19"},"referencedDeclaration":2825,"src":"4870:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:19","nodeType":"VariableDeclaration","scope":3003,"src":"4890:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2995,"initialValue":{"arguments":[{"id":2991,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"4921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2992,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"4927:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2993,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"4930:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2990,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2891,2971,3079],"referencedDeclaration":2971,"src":"4910:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:19"},{"expression":{"arguments":[{"id":2997,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"4955:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"id":2998,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"4962:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2996,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"4943:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2825_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3000,"nodeType":"ExpressionStatement","src":"4943:28:19"},{"expression":{"id":3001,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4988:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2982,"id":3002,"nodeType":"Return","src":"4981:16:19"}]},"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"4633:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3004,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:19","nodeType":"FunctionDefinition","parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"hash","nameLocation":"4779:4:19","nodeType":"VariableDeclaration","scope":3004,"src":"4771:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"r","nameLocation":"4793:1:19","nodeType":"VariableDeclaration","scope":3004,"src":"4785:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"vs","nameLocation":"4804:2:19","nodeType":"VariableDeclaration","scope":3004,"src":"4796:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:19"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3004,"src":"4831:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2980,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:19"},"scope":3165,"src":"4754:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3078,"nodeType":"Block","src":"5298:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3025,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"6194:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:19","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3039,"nodeType":"IfStatement","src":"6182:164:19","trueBody":{"id":3038,"nodeType":"Block","src":"6267:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:19","typeDescriptions":{}}},"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3033,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"6301:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2824,"src":"6301:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"id":3035,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"6333:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3022,"id":3037,"nodeType":"Return","src":"6281:54:19"}]}},{"assignments":[3041],"declarations":[{"constant":false,"id":3041,"mutability":"mutable","name":"signer","nameLocation":"6448:6:19","nodeType":"VariableDeclaration","scope":3078,"src":"6440:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3048,"initialValue":{"arguments":[{"id":3043,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6467:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3044,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"6473:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3045,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"6476:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3046,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"6479:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3042,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"6495:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:19","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"nodeType":"IfStatement","src":"6491:113:19","trueBody":{"id":3067,"nodeType":"Block","src":"6517:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:19","typeDescriptions":{}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3059,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"6551:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2822,"src":"6551:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:19","typeDescriptions":{}}},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3022,"id":3066,"nodeType":"Return","src":"6531:62:19"}]}},{"expression":{"components":[{"id":3069,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"6622:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3070,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"6630:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"6630:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:19","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3022,"id":3077,"nodeType":"Return","src":"6614:49:19"}]},"documentation":{"id":3005,"nodeType":"StructuredDocumentation","src":"5010:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:19","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"hash","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":3079,"src":"5169:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"v","nameLocation":"5197:1:19","nodeType":"VariableDeclaration","scope":3079,"src":"5191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3008,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"r","nameLocation":"5216:1:19","nodeType":"VariableDeclaration","scope":3079,"src":"5208:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"s","nameLocation":"5235:1:19","nodeType":"VariableDeclaration","scope":3079,"src":"5227:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:19"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"5266:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"5275:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"RecoverError","nameLocations":["5275:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"5275:12:19"},"referencedDeclaration":2825,"src":"5275:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"5289:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:19"},"scope":3165,"src":"5140:1530:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"6897:166:19","statements":[{"assignments":[3094,3097,3099],"declarations":[{"constant":false,"id":3094,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:19","nodeType":"VariableDeclaration","scope":3114,"src":"6908:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"error","nameLocation":"6940:5:19","nodeType":"VariableDeclaration","scope":3114,"src":"6927:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"RecoverError","nameLocations":["6927:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"6927:12:19"},"referencedDeclaration":2825,"src":"6927:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:19","nodeType":"VariableDeclaration","scope":3114,"src":"6947:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3098,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3106,"initialValue":{"arguments":[{"id":3101,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"6978:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3102,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"6984:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3103,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"6987:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3104,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"6990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3100,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2891,2971,3079],"referencedDeclaration":3079,"src":"6967:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2825_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:19"},{"expression":{"arguments":[{"id":3108,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"7014:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},{"id":3109,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7021:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3107,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"7002:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2825_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3111,"nodeType":"ExpressionStatement","src":"7002:28:19"},{"expression":{"id":3112,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"7047:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3092,"id":3113,"nodeType":"Return","src":"7040:16:19"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"6676:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:19","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"hash","nameLocation":"6828:4:19","nodeType":"VariableDeclaration","scope":3115,"src":"6820:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"v","nameLocation":"6840:1:19","nodeType":"VariableDeclaration","scope":3115,"src":"6834:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3083,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"r","nameLocation":"6851:1:19","nodeType":"VariableDeclaration","scope":3115,"src":"6843:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"s","nameLocation":"6862:1:19","nodeType":"VariableDeclaration","scope":3115,"src":"6854:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:19"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"6888:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:19"},"scope":3165,"src":"6803:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3163,"nodeType":"Block","src":"7268:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"7282:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3125,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7291:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2821,"src":"7291:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"7378:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3131,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7387:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2822,"src":"7387:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"7483:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3139,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7492:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2823,"src":"7492:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"7617:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3151,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"7626:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2825_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2824,"src":"7626:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3159,"nodeType":"IfStatement","src":"7613:109:19","trueBody":{"id":3158,"nodeType":"Block","src":"7658:64:19","statements":[{"errorCall":{"arguments":[{"id":3155,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"7702:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3154,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"7679:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"RevertStatement","src":"7672:39:19"}]}},"id":3160,"nodeType":"IfStatement","src":"7479:243:19","trueBody":{"id":3149,"nodeType":"Block","src":"7529:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3145,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"7586:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:19","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3142,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"7550:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3148,"nodeType":"RevertStatement","src":"7543:53:19"}]}},"id":3161,"nodeType":"IfStatement","src":"7374:348:19","trueBody":{"id":3137,"nodeType":"Block","src":"7418:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3134,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"7439:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3136,"nodeType":"RevertStatement","src":"7432:30:19"}]}},"id":3162,"nodeType":"IfStatement","src":"7278:444:19","trueBody":{"id":3129,"nodeType":"Block","src":"7313:55:19","statements":[{"functionReturnParameters":3123,"id":3128,"nodeType":"Return","src":"7327:7:19"}]}}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"7069:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3164,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:19","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"error","nameLocation":"7230:5:19","nodeType":"VariableDeclaration","scope":3164,"src":"7217:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3118,"nodeType":"UserDefinedTypeName","pathNode":{"id":3117,"name":"RecoverError","nameLocations":["7217:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2825,"src":"7217:12:19"},"referencedDeclaration":2825,"src":"7217:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2825","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:19","nodeType":"VariableDeclaration","scope":3164,"src":"7237:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:19"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"7268:0:19"},"scope":3165,"src":"7196:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3166,"src":"344:7386:19","usedErrors":[2828,2833,2838],"usedEvents":[]}],"src":"112:7619:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3392],"IERC5267":[1033],"MessageHashUtils":[3466],"ShortString":[2241],"ShortStrings":[2452]},"id":3393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3393,"sourceUnit":3467,"src":"139:56:20","symbolAliases":[{"foreign":{"id":3168,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3393,"sourceUnit":2453,"src":"196:62:20","symbolAliases":[{"foreign":{"id":3170,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3171,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3393,"sourceUnit":1034,"src":"259:55:20","symbolAliases":[{"foreign":{"id":3173,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3176,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1033,"src":"1988:8:20"},"id":3177,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3392,"linearizedBaseContracts":[3392,1033],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3179,"libraryName":{"id":3178,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2452,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":3184,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":3392,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3181,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3186,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":3392,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3188,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":3392,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3190,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":3392,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3189,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3192,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":3392,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3194,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":3392,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3197,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":3392,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":3196,"nodeType":"UserDefinedTypeName","pathNode":{"id":3195,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"2607:11:20"},"referencedDeclaration":2241,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3200,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":3392,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"},"typeName":{"id":3199,"nodeType":"UserDefinedTypeName","pathNode":{"id":3198,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2241,"src":"2648:11:20"},"referencedDeclaration":2241,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3202,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:20","nodeType":"VariableDeclaration","scope":3392,"src":"2692:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3201,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3204,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:20","nodeType":"VariableDeclaration","scope":3392,"src":"2726:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3203,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3261,"nodeType":"Block","src":"3383:376:20","statements":[{"expression":{"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3393:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3215,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3432:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3213,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3401:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3401:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2241_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"src":"3393:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"id":3218,"nodeType":"ExpressionStatement","src":"3393:53:20"},{"expression":{"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3219,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3456:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3222,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"3501:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3220,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3467:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2393,"src":"3467:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2241_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"src":"3456:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"id":3225,"nodeType":"ExpressionStatement","src":"3456:62:20"},{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3226,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3528:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3230,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3558:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3228,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:20","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3227,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3234,"nodeType":"ExpressionStatement","src":"3528:36:20"},{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3235,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3574:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3239,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"3607:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3237,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:20","typeDescriptions":{}}},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3236,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3243,"nodeType":"ExpressionStatement","src":"3574:42:20"},{"expression":{"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3244,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3627:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3245,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3248,"nodeType":"ExpressionStatement","src":"3627:30:20"},{"expression":{"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3249,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3667:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3250,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"3692:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3253,"nodeType":"ExpressionStatement","src":"3667:48:20"},{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3257,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:20","typeDescriptions":{}}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3260,"nodeType":"ExpressionStatement","src":"3725:27:20"}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"2764:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3262,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"name","nameLocation":"3354:4:20","nodeType":"VariableDeclaration","scope":3262,"src":"3340:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3206,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"version","nameLocation":"3374:7:20","nodeType":"VariableDeclaration","scope":3262,"src":"3360:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3208,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:20"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"3383:0:20"},"scope":3392,"src":"3328:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3287,"nodeType":"Block","src":"3907:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3270,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3268,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:20","typeDescriptions":{}}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3272,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3938:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3274,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3276,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3970:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3285,"nodeType":"Block","src":"4046:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3282,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"4067:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3267,"id":3284,"nodeType":"Return","src":"4060:30:20"}]},"id":3286,"nodeType":"IfStatement","src":"3917:184:20","trueBody":{"id":3281,"nodeType":"Block","src":"3986:54:20","statements":[{"expression":{"id":3279,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4007:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3267,"id":3280,"nodeType":"Return","src":"4000:29:20"}]}}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"3765:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:20","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[],"src":"3872:2:20"},"returnParameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3288,"src":"3898:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:20"},"scope":3392,"src":"3845:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"4177:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3296,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"4215:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3297,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4226:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3298,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4239:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3299,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3303,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:20","typeDescriptions":{}}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3294,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3293,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3292,"id":3307,"nodeType":"Return","src":"4187:98:20"}]},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:20","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"4143:2:20"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"4168:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:20"},"scope":3392,"src":"4113:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3324,"nodeType":"Block","src":"5003:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3319,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"5053:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3321,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"5075:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3317,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"5020:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3466_$","typeString":"type(library MessageHashUtils)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3465,"src":"5020:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3316,"id":3323,"nodeType":"Return","src":"5013:73:20"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"4298:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3325,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:20","nodeType":"FunctionDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:20","nodeType":"VariableDeclaration","scope":3325,"src":"4943:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:20"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"4994:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:20"},"scope":3392,"src":"4917:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1032],"body":{"id":3366,"nodeType":"Block","src":"5472:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3345,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"5533:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3347,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"5560:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3349,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3392","typeString":"contract EIP712"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:20","typeDescriptions":{}}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:20","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3360,"nodeType":"ArrayTypeName","src":"5672:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3343,"id":3365,"nodeType":"Return","src":"5482:212:20"}]},"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"5099:40:20","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3367,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:20","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"5165:2:20"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"fields","nameLocation":"5249:6:20","nodeType":"VariableDeclaration","scope":3367,"src":"5242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3328,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"name","nameLocation":"5283:4:20","nodeType":"VariableDeclaration","scope":3367,"src":"5269:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3330,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"version","nameLocation":"5315:7:20","nodeType":"VariableDeclaration","scope":3367,"src":"5301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3332,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:20","nodeType":"VariableDeclaration","scope":3367,"src":"5336:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:20","nodeType":"VariableDeclaration","scope":3367,"src":"5365:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3336,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"salt","nameLocation":"5412:4:20","nodeType":"VariableDeclaration","scope":3367,"src":"5404:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:20","nodeType":"VariableDeclaration","scope":3367,"src":"5430:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3341,"nodeType":"ArrayTypeName","src":"5430:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:20"},"scope":3392,"src":"5144:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3378,"nodeType":"Block","src":"6082:65:20","statements":[{"expression":{"arguments":[{"id":3375,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"6126:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3373,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"6099:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"6099:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2241_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3372,"id":3377,"nodeType":"Return","src":"6092:48:20"}]},"documentation":{"id":3368,"nodeType":"StructuredDocumentation","src":"5707:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3379,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:20","nodeType":"FunctionDefinition","parameters":{"id":3369,"nodeType":"ParameterList","parameters":[],"src":"6041:2:20"},"returnParameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3379,"src":"6067:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3370,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:20"},"scope":3392,"src":"6021:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"6537:71:20","statements":[{"expression":{"arguments":[{"id":3387,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"6584:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3385,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6554:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2241","typeString":"ShortString"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"6554:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2241_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2241_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3384,"id":3389,"nodeType":"Return","src":"6547:54:20"}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"6153:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:20","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[],"src":"6496:2:20"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"6522:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3382,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:20"},"scope":3392,"src":"6473:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3393,"src":"1960:4650:20","usedErrors":[2249,2251],"usedEvents":[1013]}],"src":"113:6498:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3466],"Strings":[2817]},"id":3467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3394,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3467,"sourceUnit":2818,"src":"149:39:21","symbolAliases":[{"foreign":{"id":3395,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3466,"linearizedBaseContracts":[3466],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3406,"nodeType":"Block","src":"1314:368:21","statements":[{"AST":{"nativeSrc":"1376:300:21","nodeType":"YulBlock","src":"1376:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:21","nodeType":"YulLiteral","src":"1397:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:21","nodeType":"YulLiteral","src":"1403:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:21","nodeType":"YulIdentifier","src":"1390:6:21"},"nativeSrc":"1390:48:21","nodeType":"YulFunctionCall","src":"1390:48:21"},"nativeSrc":"1390:48:21","nodeType":"YulExpressionStatement","src":"1390:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:21","nodeType":"YulLiteral","src":"1499:4:21","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:21","nodeType":"YulIdentifier","src":"1505:11:21"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:21","nodeType":"YulIdentifier","src":"1492:6:21"},"nativeSrc":"1492:25:21","nodeType":"YulFunctionCall","src":"1492:25:21"},"nativeSrc":"1492:25:21","nodeType":"YulExpressionStatement","src":"1492:25:21"},{"nativeSrc":"1571:31:21","nodeType":"YulAssignment","src":"1571:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:21","nodeType":"YulLiteral","src":"1591:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:21","nodeType":"YulLiteral","src":"1597:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:21","nodeType":"YulIdentifier","src":"1581:9:21"},"nativeSrc":"1581:21:21","nodeType":"YulFunctionCall","src":"1581:21:21"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:21","nodeType":"YulIdentifier","src":"1571:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3403,"isOffset":false,"isSlot":false,"src":"1571:6:21","valueSize":1},{"declaration":3400,"isOffset":false,"isSlot":false,"src":"1505:11:21","valueSize":1}],"id":3405,"nodeType":"InlineAssembly","src":"1367:309:21"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"552:665:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3407,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:21","nodeType":"FunctionDefinition","parameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:21","nodeType":"VariableDeclaration","scope":3407,"src":"1254:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:21"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"digest","nameLocation":"1306:6:21","nodeType":"VariableDeclaration","scope":3407,"src":"1298:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:21"},"scope":3466,"src":"1222:460:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3432,"nodeType":"Block","src":"2234:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3424,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2343:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:21","memberName":"length","nodeType":"MemberAccess","src":"2343:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3422,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"2326:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2817_$","typeString":"type(library Strings)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2630,"src":"2326:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3420,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:21","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3428,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"2361:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3416,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:21","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3415,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3414,"id":3431,"nodeType":"Return","src":"2244:126:21"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"1688:455:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3433,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:21","nodeType":"FunctionDefinition","parameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"message","nameLocation":"2193:7:21","nodeType":"VariableDeclaration","scope":3433,"src":"2180:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3409,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:21"},"returnParameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3433,"src":"2225:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:21"},"scope":3466,"src":"2148:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3452,"nodeType":"Block","src":"2831:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3447,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"2887:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3448,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"2898:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3444,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3443,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3442,"id":3451,"nodeType":"Return","src":"2841:63:21"}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"2383:332:21","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:21","nodeType":"FunctionDefinition","parameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"validator","nameLocation":"2769:9:21","nodeType":"VariableDeclaration","scope":3453,"src":"2761:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3435,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"data","nameLocation":"2793:4:21","nodeType":"VariableDeclaration","scope":3453,"src":"2780:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3437,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:21"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"2822:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:21"},"scope":3466,"src":"2720:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"3462:292:21","statements":[{"AST":{"nativeSrc":"3524:224:21","nodeType":"YulBlock","src":"3524:224:21","statements":[{"nativeSrc":"3538:22:21","nodeType":"YulVariableDeclaration","src":"3538:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:21","nodeType":"YulLiteral","src":"3555:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:21","nodeType":"YulIdentifier","src":"3549:5:21"},"nativeSrc":"3549:11:21","nodeType":"YulFunctionCall","src":"3549:11:21"},"variables":[{"name":"ptr","nativeSrc":"3542:3:21","nodeType":"YulTypedName","src":"3542:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:21","nodeType":"YulIdentifier","src":"3580:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:21","nodeType":"YulLiteral","src":"3585:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:21","nodeType":"YulIdentifier","src":"3573:6:21"},"nativeSrc":"3573:23:21","nodeType":"YulFunctionCall","src":"3573:23:21"},"nativeSrc":"3573:23:21","nodeType":"YulExpressionStatement","src":"3573:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:21","nodeType":"YulIdentifier","src":"3620:3:21"},{"kind":"number","nativeSrc":"3625:4:21","nodeType":"YulLiteral","src":"3625:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:21","nodeType":"YulIdentifier","src":"3616:3:21"},"nativeSrc":"3616:14:21","nodeType":"YulFunctionCall","src":"3616:14:21"},{"name":"domainSeparator","nativeSrc":"3632:15:21","nodeType":"YulIdentifier","src":"3632:15:21"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:21","nodeType":"YulIdentifier","src":"3609:6:21"},"nativeSrc":"3609:39:21","nodeType":"YulFunctionCall","src":"3609:39:21"},"nativeSrc":"3609:39:21","nodeType":"YulExpressionStatement","src":"3609:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:21","nodeType":"YulIdentifier","src":"3672:3:21"},{"kind":"number","nativeSrc":"3677:4:21","nodeType":"YulLiteral","src":"3677:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:21","nodeType":"YulIdentifier","src":"3668:3:21"},"nativeSrc":"3668:14:21","nodeType":"YulFunctionCall","src":"3668:14:21"},{"name":"structHash","nativeSrc":"3684:10:21","nodeType":"YulIdentifier","src":"3684:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:21","nodeType":"YulIdentifier","src":"3661:6:21"},"nativeSrc":"3661:34:21","nodeType":"YulFunctionCall","src":"3661:34:21"},"nativeSrc":"3661:34:21","nodeType":"YulExpressionStatement","src":"3661:34:21"},{"nativeSrc":"3708:30:21","nodeType":"YulAssignment","src":"3708:30:21","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:21","nodeType":"YulIdentifier","src":"3728:3:21"},{"kind":"number","nativeSrc":"3733:4:21","nodeType":"YulLiteral","src":"3733:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:21","nodeType":"YulIdentifier","src":"3718:9:21"},"nativeSrc":"3718:20:21","nodeType":"YulFunctionCall","src":"3718:20:21"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:21","nodeType":"YulIdentifier","src":"3708:6:21"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3461,"isOffset":false,"isSlot":false,"src":"3708:6:21","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"3632:15:21","valueSize":1},{"declaration":3458,"isOffset":false,"isSlot":false,"src":"3684:10:21","valueSize":1}],"id":3463,"nodeType":"InlineAssembly","src":"3515:233:21"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"2917:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:21","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:21","nodeType":"VariableDeclaration","scope":3465,"src":"3378:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:21","nodeType":"VariableDeclaration","scope":3465,"src":"3403:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:21"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"digest","nameLocation":"3454:6:21","nodeType":"VariableDeclaration","scope":3465,"src":"3446:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:21"},"scope":3466,"src":"3353:401:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3467,"src":"521:3235:21","usedErrors":[],"usedEvents":[]}],"src":"123:3634:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3490],"IERC165":[3502]},"id":3491,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3491,"sourceUnit":3503,"src":"140:38:22","symbolAliases":[{"foreign":{"id":3469,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3472,"name":"IERC165","nameLocations":["687:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":3502,"src":"687:7:22"},"id":3473,"nodeType":"InheritanceSpecifier","src":"687:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3471,"nodeType":"StructuredDocumentation","src":"180:478:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3490,"linearizedBaseContracts":[3490,3502],"name":"ERC165","nameLocation":"677:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3501],"body":{"id":3488,"nodeType":"Block","src":"844:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3481,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"861:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3483,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"881:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3502_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3502_$","typeString":"type(contract IERC165)"}],"id":3482,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3502","typeString":"type(contract IERC165)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3480,"id":3487,"nodeType":"Return","src":"854:47:22"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"701:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3489,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:22","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:22","nodeType":"VariableDeclaration","scope":3489,"src":"789:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3475,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:22"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"838:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3478,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:22"},"scope":3490,"src":"762:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3491,"src":"659:251:22","usedErrors":[],"usedEvents":[]}],"src":"114:797:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3502]},"id":3503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3492,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"141:279:23","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3502,"linearizedBaseContracts":[3502],"name":"IERC165","nameLocation":"431:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"445:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3501,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:23","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:23","nodeType":"VariableDeclaration","scope":3501,"src":"817:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3495,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:23"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"860:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3498,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:23"},"scope":3502,"src":"790:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3503,"src":"421:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:754:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4556]},"id":4557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3504,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"129:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4556,"linearizedBaseContracts":[4556],"name":"Math","nameLocation":"211:4:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"222:50:24","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3508,"name":"MathOverflowedMulDiv","nameLocation":"283:20:24","nodeType":"ErrorDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[],"src":"303:2:24"},"src":"277:29:24"},{"canonicalName":"Math.Rounding","id":3513,"members":[{"id":3509,"name":"Floor","nameLocation":"336:5:24","nodeType":"EnumValue","src":"336:5:24"},{"id":3510,"name":"Ceil","nameLocation":"379:4:24","nodeType":"EnumValue","src":"379:4:24"},{"id":3511,"name":"Trunc","nameLocation":"421:5:24","nodeType":"EnumValue","src":"421:5:24"},{"id":3512,"name":"Expand","nameLocation":"451:6:24","nodeType":"EnumValue","src":"451:6:24"}],"name":"Rounding","nameLocation":"317:8:24","nodeType":"EnumDefinition","src":"312:169:24"},{"body":{"id":3544,"nodeType":"Block","src":"661:140:24","statements":[{"id":3543,"nodeType":"UncheckedBlock","src":"671:124:24","statements":[{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"c","nameLocation":"703:1:24","nodeType":"VariableDeclaration","scope":3543,"src":"695:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"707:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3528,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"711:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3531,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"730:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"734:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3538,"nodeType":"IfStatement","src":"726:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3524,"id":3537,"nodeType":"Return","src":"737:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3540,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"782:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3524,"id":3542,"nodeType":"Return","src":"768:16:24"}]}]},"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"487:93:24","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:24","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"a","nameLocation":"609:1:24","nodeType":"VariableDeclaration","scope":3545,"src":"601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"b","nameLocation":"620:1:24","nodeType":"VariableDeclaration","scope":3545,"src":"612:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:24"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3545,"src":"646:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3520,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3545,"src":"652:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:24"},"scope":4556,"src":"585:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"984:113:24","statements":[{"id":3571,"nodeType":"UncheckedBlock","src":"994:97:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1022:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1026:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3564,"nodeType":"IfStatement","src":"1018:28:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3556,"id":3563,"nodeType":"Return","src":"1029:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1074:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"1078:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3556,"id":3570,"nodeType":"Return","src":"1060:20:24"}]}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"807:96:24","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:24","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"a","nameLocation":"932:1:24","nodeType":"VariableDeclaration","scope":3573,"src":"924:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"b","nameLocation":"943:1:24","nodeType":"VariableDeclaration","scope":3573,"src":"935:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:24"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"969:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"975:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:24"},"scope":4556,"src":"908:189:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3614,"nodeType":"Block","src":"1283:417:24","statements":[{"id":3613,"nodeType":"UncheckedBlock","src":"1293:401:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1551:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3592,"nodeType":"IfStatement","src":"1547:28:24","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3584,"id":3591,"nodeType":"Return","src":"1559:16:24"}},{"assignments":[3594],"declarations":[{"constant":false,"id":3594,"mutability":"mutable","name":"c","nameLocation":"1597:1:24","nodeType":"VariableDeclaration","scope":3613,"src":"1589:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3598,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1601:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"1605:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3599,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"1624:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"1628:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"1633:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"IfStatement","src":"1620:33:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3584,"id":3607,"nodeType":"Return","src":"1636:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3610,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"1681:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3584,"id":3612,"nodeType":"Return","src":"1667:16:24"}]}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"1103:99:24","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:24","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"a","nameLocation":"1231:1:24","nodeType":"VariableDeclaration","scope":3615,"src":"1223:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"b","nameLocation":"1242:1:24","nodeType":"VariableDeclaration","scope":3615,"src":"1234:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:24"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"1268:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3580,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"1274:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:24"},"scope":4556,"src":"1207:493:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3642,"nodeType":"Block","src":"1887:114:24","statements":[{"id":3641,"nodeType":"UncheckedBlock","src":"1897:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3627,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1925:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3634,"nodeType":"IfStatement","src":"1921:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3626,"id":3633,"nodeType":"Return","src":"1933:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"1978:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1982:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3626,"id":3640,"nodeType":"Return","src":"1964:20:24"}]}]},"documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"1706:100:24","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3643,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:24","nodeType":"FunctionDefinition","parameters":{"id":3621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"a","nameLocation":"1835:1:24","nodeType":"VariableDeclaration","scope":3643,"src":"1827:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"b","nameLocation":"1846:1:24","nodeType":"VariableDeclaration","scope":3643,"src":"1838:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:24"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3643,"src":"1872:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3622,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3643,"src":"1878:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:24"},"scope":4556,"src":"1811:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3670,"nodeType":"Block","src":"2198:114:24","statements":[{"id":3669,"nodeType":"UncheckedBlock","src":"2208:98:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2236:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3662,"nodeType":"IfStatement","src":"2232:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3654,"id":3661,"nodeType":"Return","src":"2244:17:24"}},{"expression":{"components":[{"hexValue":"74727565","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"2289:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"2293:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3654,"id":3668,"nodeType":"Return","src":"2275:20:24"}]}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"2007:110:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:24","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"a","nameLocation":"2146:1:24","nodeType":"VariableDeclaration","scope":3671,"src":"2138:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"b","nameLocation":"2157:1:24","nodeType":"VariableDeclaration","scope":3671,"src":"2149:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:24"},"returnParameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"2183:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3650,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"2189:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:24"},"scope":4556,"src":"2122:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"2449:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"2466:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3682,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"2470:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"2478:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:24","trueExpression":{"id":3684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"2474:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3680,"id":3687,"nodeType":"Return","src":"2459:20:24"}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"2318:59:24","text":" @dev Returns the largest of two numbers."},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:24","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"a","nameLocation":"2403:1:24","nodeType":"VariableDeclaration","scope":3689,"src":"2395:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"b","nameLocation":"2414:1:24","nodeType":"VariableDeclaration","scope":3689,"src":"2406:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:24"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3689,"src":"2440:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:24"},"scope":4556,"src":"2382:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"2624:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"2641:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3700,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"2645:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3703,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"2653:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:24","trueExpression":{"id":3702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"2649:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3698,"id":3705,"nodeType":"Return","src":"2634:20:24"}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"2492:60:24","text":" @dev Returns the smallest of two numbers."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:24","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"a","nameLocation":"2578:1:24","nodeType":"VariableDeclaration","scope":3707,"src":"2570:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"b","nameLocation":"2589:1:24","nodeType":"VariableDeclaration","scope":3707,"src":"2581:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:24"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3707,"src":"2615:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:24"},"scope":4556,"src":"2557:104:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3729,"nodeType":"Block","src":"2845:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"2900:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"2904:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"2910:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"2914:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3728,"nodeType":"Return","src":"2892:28:24"}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"2667:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3730,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:24","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"a","nameLocation":"2799:1:24","nodeType":"VariableDeclaration","scope":3730,"src":"2791:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"b","nameLocation":"2810:1:24","nodeType":"VariableDeclaration","scope":3730,"src":"2802:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:24"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3730,"src":"2836:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:24"},"scope":4556,"src":"2774:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3763,"nodeType":"Block","src":"3219:260:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"3233:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3748,"nodeType":"IfStatement","src":"3229:127:24","trueBody":{"id":3747,"nodeType":"Block","src":"3241:115:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3340:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"3344:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3739,"id":3746,"nodeType":"Return","src":"3333:12:24"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3444:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3458:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3757,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"3467:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:24","trueExpression":{"hexValue":"30","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3739,"id":3762,"nodeType":"Return","src":"3437:35:24"}]},"documentation":{"id":3731,"nodeType":"StructuredDocumentation","src":"2933:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3764,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:24","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"a","nameLocation":"3173:1:24","nodeType":"VariableDeclaration","scope":3764,"src":"3165:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"b","nameLocation":"3184:1:24","nodeType":"VariableDeclaration","scope":3764,"src":"3176:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:24"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3764,"src":"3210:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:24"},"scope":4556,"src":"3148:331:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3889,"nodeType":"Block","src":"3901:4018:24","statements":[{"id":3888,"nodeType":"UncheckedBlock","src":"3911:4002:24","statements":[{"assignments":[3777],"declarations":[{"constant":false,"id":3777,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:24","nodeType":"VariableDeclaration","scope":3888,"src":"4232:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3781,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"4248:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3779,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"4252:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:24"},{"assignments":[3783],"declarations":[{"constant":false,"id":3783,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:24","nodeType":"VariableDeclaration","scope":3888,"src":"4312:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3784,"nodeType":"VariableDeclarationStatement","src":"4312:13:24"},{"AST":{"nativeSrc":"4392:122:24","nodeType":"YulBlock","src":"4392:122:24","statements":[{"nativeSrc":"4410:30:24","nodeType":"YulVariableDeclaration","src":"4410:30:24","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:24","nodeType":"YulIdentifier","src":"4427:1:24"},{"name":"y","nativeSrc":"4430:1:24","nodeType":"YulIdentifier","src":"4430:1:24"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:24","nodeType":"YulLiteral","src":"4437:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:24","nodeType":"YulIdentifier","src":"4433:3:24"},"nativeSrc":"4433:6:24","nodeType":"YulFunctionCall","src":"4433:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:24","nodeType":"YulIdentifier","src":"4420:6:24"},"nativeSrc":"4420:20:24","nodeType":"YulFunctionCall","src":"4420:20:24"},"variables":[{"name":"mm","nativeSrc":"4414:2:24","nodeType":"YulTypedName","src":"4414:2:24","type":""}]},{"nativeSrc":"4457:43:24","nodeType":"YulAssignment","src":"4457:43:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:24","nodeType":"YulIdentifier","src":"4474:2:24"},{"name":"prod0","nativeSrc":"4478:5:24","nodeType":"YulIdentifier","src":"4478:5:24"}],"functionName":{"name":"sub","nativeSrc":"4470:3:24","nodeType":"YulIdentifier","src":"4470:3:24"},"nativeSrc":"4470:14:24","nodeType":"YulFunctionCall","src":"4470:14:24"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:24","nodeType":"YulIdentifier","src":"4489:2:24"},{"name":"prod0","nativeSrc":"4493:5:24","nodeType":"YulIdentifier","src":"4493:5:24"}],"functionName":{"name":"lt","nativeSrc":"4486:2:24","nodeType":"YulIdentifier","src":"4486:2:24"},"nativeSrc":"4486:13:24","nodeType":"YulFunctionCall","src":"4486:13:24"}],"functionName":{"name":"sub","nativeSrc":"4466:3:24","nodeType":"YulIdentifier","src":"4466:3:24"},"nativeSrc":"4466:34:24","nodeType":"YulFunctionCall","src":"4466:34:24"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:24","nodeType":"YulIdentifier","src":"4457:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3777,"isOffset":false,"isSlot":false,"src":"4478:5:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"4493:5:24","valueSize":1},{"declaration":3783,"isOffset":false,"isSlot":false,"src":"4457:5:24","valueSize":1},{"declaration":3767,"isOffset":false,"isSlot":false,"src":"4427:1:24","valueSize":1},{"declaration":3769,"isOffset":false,"isSlot":false,"src":"4430:1:24","valueSize":1}],"id":3785,"nodeType":"InlineAssembly","src":"4383:131:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4595:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3794,"nodeType":"IfStatement","src":"4591:368:24","trueBody":{"id":3793,"nodeType":"Block","src":"4607:352:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"4925:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3790,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"4933:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3775,"id":3792,"nodeType":"Return","src":"4918:26:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5065:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3796,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"5080:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3802,"nodeType":"IfStatement","src":"5061:88:24","trueBody":{"id":3801,"nodeType":"Block","src":"5087:62:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3798,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5112:20:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3800,"nodeType":"RevertStatement","src":"5105:29:24"}]}},{"assignments":[3804],"declarations":[{"constant":false,"id":3804,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:24","nodeType":"VariableDeclaration","scope":3888,"src":"5404:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3805,"nodeType":"VariableDeclarationStatement","src":"5404:17:24"},{"AST":{"nativeSrc":"5444:291:24","nodeType":"YulBlock","src":"5444:291:24","statements":[{"nativeSrc":"5513:38:24","nodeType":"YulAssignment","src":"5513:38:24","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:24","nodeType":"YulIdentifier","src":"5533:1:24"},{"name":"y","nativeSrc":"5536:1:24","nodeType":"YulIdentifier","src":"5536:1:24"},{"name":"denominator","nativeSrc":"5539:11:24","nodeType":"YulIdentifier","src":"5539:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:24","nodeType":"YulIdentifier","src":"5526:6:24"},"nativeSrc":"5526:25:24","nodeType":"YulFunctionCall","src":"5526:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:24","nodeType":"YulIdentifier","src":"5513:9:24"}]},{"nativeSrc":"5633:41:24","nodeType":"YulAssignment","src":"5633:41:24","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:24","nodeType":"YulIdentifier","src":"5646:5:24"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:24","nodeType":"YulIdentifier","src":"5656:9:24"},{"name":"prod0","nativeSrc":"5667:5:24","nodeType":"YulIdentifier","src":"5667:5:24"}],"functionName":{"name":"gt","nativeSrc":"5653:2:24","nodeType":"YulIdentifier","src":"5653:2:24"},"nativeSrc":"5653:20:24","nodeType":"YulFunctionCall","src":"5653:20:24"}],"functionName":{"name":"sub","nativeSrc":"5642:3:24","nodeType":"YulIdentifier","src":"5642:3:24"},"nativeSrc":"5642:32:24","nodeType":"YulFunctionCall","src":"5642:32:24"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:24","nodeType":"YulIdentifier","src":"5633:5:24"}]},{"nativeSrc":"5691:30:24","nodeType":"YulAssignment","src":"5691:30:24","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:24","nodeType":"YulIdentifier","src":"5704:5:24"},{"name":"remainder","nativeSrc":"5711:9:24","nodeType":"YulIdentifier","src":"5711:9:24"}],"functionName":{"name":"sub","nativeSrc":"5700:3:24","nodeType":"YulIdentifier","src":"5700:3:24"},"nativeSrc":"5700:21:24","nodeType":"YulFunctionCall","src":"5700:21:24"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:24","nodeType":"YulIdentifier","src":"5691:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3771,"isOffset":false,"isSlot":false,"src":"5539:11:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"5667:5:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"5691:5:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"5704:5:24","valueSize":1},{"declaration":3783,"isOffset":false,"isSlot":false,"src":"5633:5:24","valueSize":1},{"declaration":3783,"isOffset":false,"isSlot":false,"src":"5646:5:24","valueSize":1},{"declaration":3804,"isOffset":false,"isSlot":false,"src":"5513:9:24","valueSize":1},{"declaration":3804,"isOffset":false,"isSlot":false,"src":"5656:9:24","valueSize":1},{"declaration":3804,"isOffset":false,"isSlot":false,"src":"5711:9:24","valueSize":1},{"declaration":3767,"isOffset":false,"isSlot":false,"src":"5533:1:24","valueSize":1},{"declaration":3769,"isOffset":false,"isSlot":false,"src":"5536:1:24","valueSize":1}],"id":3806,"nodeType":"InlineAssembly","src":"5435:300:24"},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"twos","nameLocation":"5947:4:24","nodeType":"VariableDeclaration","scope":3888,"src":"5939:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3815,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5954:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3811,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5973:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:24"},{"AST":{"nativeSrc":"6008:362:24","nodeType":"YulBlock","src":"6008:362:24","statements":[{"nativeSrc":"6073:37:24","nodeType":"YulAssignment","src":"6073:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:24","nodeType":"YulIdentifier","src":"6092:11:24"},{"name":"twos","nativeSrc":"6105:4:24","nodeType":"YulIdentifier","src":"6105:4:24"}],"functionName":{"name":"div","nativeSrc":"6088:3:24","nodeType":"YulIdentifier","src":"6088:3:24"},"nativeSrc":"6088:22:24","nodeType":"YulFunctionCall","src":"6088:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:24","nodeType":"YulIdentifier","src":"6073:11:24"}]},{"nativeSrc":"6177:25:24","nodeType":"YulAssignment","src":"6177:25:24","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:24","nodeType":"YulIdentifier","src":"6190:5:24"},{"name":"twos","nativeSrc":"6197:4:24","nodeType":"YulIdentifier","src":"6197:4:24"}],"functionName":{"name":"div","nativeSrc":"6186:3:24","nodeType":"YulIdentifier","src":"6186:3:24"},"nativeSrc":"6186:16:24","nodeType":"YulFunctionCall","src":"6186:16:24"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:24","nodeType":"YulIdentifier","src":"6177:5:24"}]},{"nativeSrc":"6317:39:24","nodeType":"YulAssignment","src":"6317:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:24","nodeType":"YulLiteral","src":"6337:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:24","nodeType":"YulIdentifier","src":"6340:4:24"}],"functionName":{"name":"sub","nativeSrc":"6333:3:24","nodeType":"YulIdentifier","src":"6333:3:24"},"nativeSrc":"6333:12:24","nodeType":"YulFunctionCall","src":"6333:12:24"},{"name":"twos","nativeSrc":"6347:4:24","nodeType":"YulIdentifier","src":"6347:4:24"}],"functionName":{"name":"div","nativeSrc":"6329:3:24","nodeType":"YulIdentifier","src":"6329:3:24"},"nativeSrc":"6329:23:24","nodeType":"YulFunctionCall","src":"6329:23:24"},{"kind":"number","nativeSrc":"6354:1:24","nodeType":"YulLiteral","src":"6354:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:24","nodeType":"YulIdentifier","src":"6325:3:24"},"nativeSrc":"6325:31:24","nodeType":"YulFunctionCall","src":"6325:31:24"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:24","nodeType":"YulIdentifier","src":"6317:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3771,"isOffset":false,"isSlot":false,"src":"6073:11:24","valueSize":1},{"declaration":3771,"isOffset":false,"isSlot":false,"src":"6092:11:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"6177:5:24","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"6190:5:24","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6105:4:24","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6197:4:24","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6317:4:24","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6340:4:24","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"6347:4:24","valueSize":1}],"id":3816,"nodeType":"InlineAssembly","src":"5999:371:24"},{"expression":{"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3817,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"6436:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"6445:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3819,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"6453:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3822,"nodeType":"ExpressionStatement","src":"6436:21:24"},{"assignments":[3824],"declarations":[{"constant":false,"id":3824,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:24","nodeType":"VariableDeclaration","scope":3888,"src":"6775:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3831,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3826,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"6798:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:24"},{"expression":{"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7031:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7046:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3835,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3839,"nodeType":"ExpressionStatement","src":"7031:36:24"},{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3840,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7100:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7115:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3843,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7129:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"7100:36:24"},{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7170:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3850,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7185:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3851,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7199:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"7170:36:24"},{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3856,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7240:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3858,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7255:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3859,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"7240:36:24"},{"expression":{"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3864,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7310:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7325:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3867,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3871,"nodeType":"ExpressionStatement","src":"7310:36:24"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7381:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"7396:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3875,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7410:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"7381:36:24"},{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"7851:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"7860:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3882,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"7868:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"7851:24:24"},{"expression":{"id":3886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"7896:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3775,"id":3887,"nodeType":"Return","src":"7889:13:24"}]}]},"documentation":{"id":3765,"nodeType":"StructuredDocumentation","src":"3485:313:24","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:24","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"x","nameLocation":"3827:1:24","nodeType":"VariableDeclaration","scope":3890,"src":"3819:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"y","nameLocation":"3838:1:24","nodeType":"VariableDeclaration","scope":3890,"src":"3830:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:24","nodeType":"VariableDeclaration","scope":3890,"src":"3841:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:24"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"result","nameLocation":"3893:6:24","nodeType":"VariableDeclaration","scope":3890,"src":"3885:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:24"},"scope":4556,"src":"3803:4116:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3932,"nodeType":"Block","src":"8161:192:24","statements":[{"assignments":[3906],"declarations":[{"constant":false,"id":3906,"mutability":"mutable","name":"result","nameLocation":"8179:6:24","nodeType":"VariableDeclaration","scope":3932,"src":"8171:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3912,"initialValue":{"arguments":[{"id":3908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"8195:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"8198:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3910,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"8201:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3907,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3890,3933],"referencedDeclaration":3890,"src":"8188:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3914,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"8244:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":3913,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"8227:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3513_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3917,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"8264:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3918,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"8267:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3919,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"8270:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3916,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"8223:101:24","trueBody":{"id":3928,"nodeType":"Block","src":"8288:36:24","statements":[{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"8302:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3927,"nodeType":"ExpressionStatement","src":"8302:11:24"}]}},{"expression":{"id":3930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"8340:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3904,"id":3931,"nodeType":"Return","src":"8333:13:24"}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"7925:121:24","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3933,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:24","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"x","nameLocation":"8075:1:24","nodeType":"VariableDeclaration","scope":3933,"src":"8067:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3895,"mutability":"mutable","name":"y","nameLocation":"8086:1:24","nodeType":"VariableDeclaration","scope":3933,"src":"8078:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:24","nodeType":"VariableDeclaration","scope":3933,"src":"8089:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3896,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:24","nodeType":"VariableDeclaration","scope":3933,"src":"8110:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":3899,"nodeType":"UserDefinedTypeName","pathNode":{"id":3898,"name":"Rounding","nameLocations":["8110:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"8110:8:24"},"referencedDeclaration":3513,"src":"8110:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:24"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3933,"src":"8152:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:24"},"scope":4556,"src":"8051:302:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4044,"nodeType":"Block","src":"8644:1585:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"8658:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3947,"nodeType":"IfStatement","src":"8654:45:24","trueBody":{"id":3946,"nodeType":"Block","src":"8666:33:24","statements":[{"expression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3940,"id":3945,"nodeType":"Return","src":"8680:8:24"}]}},{"assignments":[3949],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"result","nameLocation":"9386:6:24","nodeType":"VariableDeclaration","scope":4044,"src":"9378:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3958,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"9406:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3951,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4212,4247],"referencedDeclaration":4212,"src":"9401:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:24"},{"id":4043,"nodeType":"UncheckedBlock","src":"9815:408:24","statements":[{"expression":{"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9839:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9849:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"9858:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9862:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3969,"nodeType":"ExpressionStatement","src":"9839:35:24"},{"expression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3970,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9888:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9898:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"9907:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9911:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3980,"nodeType":"ExpressionStatement","src":"9888:35:24"},{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9937:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9947:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"9956:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9960:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3991,"nodeType":"ExpressionStatement","src":"9937:35:24"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9986:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"9996:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10005:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10009:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"9986:35:24"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4003,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10035:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10045:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10058:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"10035:35:24"},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10084:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10094:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10103:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4017,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10107:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4024,"nodeType":"ExpressionStatement","src":"10084:35:24"},{"expression":{"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10133:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10143:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4027,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10152:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4028,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10156:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4035,"nodeType":"ExpressionStatement","src":"10133:35:24"},{"expression":{"arguments":[{"id":4037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10193:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"10201:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"10205:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4036,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"10189:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3940,"id":4042,"nodeType":"Return","src":"10182:30:24"}]}]},"documentation":{"id":3934,"nodeType":"StructuredDocumentation","src":"8359:223:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4045,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:24","nodeType":"FunctionDefinition","parameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"a","nameLocation":"8609:1:24","nodeType":"VariableDeclaration","scope":4045,"src":"8601:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3935,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:24"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4045,"src":"8635:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:24"},"scope":4556,"src":"8587:1642:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"10405:164:24","statements":[{"id":4078,"nodeType":"UncheckedBlock","src":"10415:148:24","statements":[{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"result","nameLocation":"10447:6:24","nodeType":"VariableDeclaration","scope":4078,"src":"10439:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"arguments":[{"id":4059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"10461:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4058,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4045,4080],"referencedDeclaration":4045,"src":"10456:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"10484:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4064,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"10511:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":4063,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"10494:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3513_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"10524:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"10533:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"10542:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:24","trueExpression":{"hexValue":"31","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4077,"nodeType":"Return","src":"10477:75:24"}]}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"10235:89:24","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4080,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:24","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"a","nameLocation":"10351:1:24","nodeType":"VariableDeclaration","scope":4080,"src":"10343:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:24","nodeType":"VariableDeclaration","scope":4080,"src":"10354:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":4050,"nodeType":"UserDefinedTypeName","pathNode":{"id":4049,"name":"Rounding","nameLocations":["10354:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"10354:8:24"},"referencedDeclaration":3513,"src":"10354:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:24"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4080,"src":"10396:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:24"},"scope":4556,"src":"10329:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4211,"nodeType":"Block","src":"10760:922:24","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"result","nameLocation":"10778:6:24","nodeType":"VariableDeclaration","scope":4211,"src":"10770:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4091,"initialValue":{"hexValue":"30","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:24"},{"id":4208,"nodeType":"UncheckedBlock","src":"10798:855:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10826:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4106,"nodeType":"IfStatement","src":"10822:99:24","trueBody":{"id":4105,"nodeType":"Block","src":"10844:77:24","statements":[{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10862:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"10862:13:24"},{"expression":{"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"10893:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4104,"nodeType":"ExpressionStatement","src":"10893:13:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10938:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4121,"nodeType":"IfStatement","src":"10934:96:24","trueBody":{"id":4120,"nodeType":"Block","src":"10955:75:24","statements":[{"expression":{"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"10973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4115,"nodeType":"ExpressionStatement","src":"10973:12:24"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11003:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"11003:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11047:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4136,"nodeType":"IfStatement","src":"11043:96:24","trueBody":{"id":4135,"nodeType":"Block","src":"11064:75:24","statements":[{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11082:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"11082:12:24"},{"expression":{"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11112:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4134,"nodeType":"ExpressionStatement","src":"11112:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11156:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4151,"nodeType":"IfStatement","src":"11152:96:24","trueBody":{"id":4150,"nodeType":"Block","src":"11173:75:24","statements":[{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11191:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4145,"nodeType":"ExpressionStatement","src":"11191:12:24"},{"expression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11221:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4149,"nodeType":"ExpressionStatement","src":"11221:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11265:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4166,"nodeType":"IfStatement","src":"11261:93:24","trueBody":{"id":4165,"nodeType":"Block","src":"11281:73:24","statements":[{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11299:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"11299:11:24"},{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11328:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4164,"nodeType":"ExpressionStatement","src":"11328:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11371:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"nodeType":"IfStatement","src":"11367:93:24","trueBody":{"id":4180,"nodeType":"Block","src":"11387:73:24","statements":[{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11405:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4175,"nodeType":"ExpressionStatement","src":"11405:11:24"},{"expression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11434:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4179,"nodeType":"ExpressionStatement","src":"11434:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11477:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4196,"nodeType":"IfStatement","src":"11473:93:24","trueBody":{"id":4195,"nodeType":"Block","src":"11493:73:24","statements":[{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11511:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"11511:11:24"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11540:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"11540:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11583:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"11579:64:24","trueBody":{"id":4206,"nodeType":"Block","src":"11599:44:24","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11617:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"11617:11:24"}]}}]},{"expression":{"id":4209,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"11669:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4087,"id":4210,"nodeType":"Return","src":"11662:13:24"}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"10575:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:24","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"value","nameLocation":"10721:5:24","nodeType":"VariableDeclaration","scope":4212,"src":"10713:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:24"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"10751:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:24"},"scope":4556,"src":"10699:983:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4246,"nodeType":"Block","src":"11915:168:24","statements":[{"id":4245,"nodeType":"UncheckedBlock","src":"11925:152:24","statements":[{"assignments":[4224],"declarations":[{"constant":false,"id":4224,"mutability":"mutable","name":"result","nameLocation":"11957:6:24","nodeType":"VariableDeclaration","scope":4245,"src":"11949:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4228,"initialValue":{"arguments":[{"id":4226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11971:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4225,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4212,4247],"referencedDeclaration":4212,"src":"11966:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"11998:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4231,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"12025:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":4230,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"12008:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3513_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4224,"src":"12043:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"12052:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:24","trueExpression":{"hexValue":"31","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4222,"id":4244,"nodeType":"Return","src":"11991:75:24"}]}]},"documentation":{"id":4213,"nodeType":"StructuredDocumentation","src":"11688:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4247,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:24","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"value","nameLocation":"11857:5:24","nodeType":"VariableDeclaration","scope":4247,"src":"11849:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:24","nodeType":"VariableDeclaration","scope":4247,"src":"11864:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":4217,"nodeType":"UserDefinedTypeName","pathNode":{"id":4216,"name":"Rounding","nameLocations":["11864:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"11864:8:24"},"referencedDeclaration":3513,"src":"11864:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:24"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4247,"src":"11906:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:24"},"scope":4556,"src":"11835:248:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"12276:854:24","statements":[{"assignments":[4256],"declarations":[{"constant":false,"id":4256,"mutability":"mutable","name":"result","nameLocation":"12294:6:24","nodeType":"VariableDeclaration","scope":4375,"src":"12286:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4258,"initialValue":{"hexValue":"30","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:24"},{"id":4372,"nodeType":"UncheckedBlock","src":"12314:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12342:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4275,"nodeType":"IfStatement","src":"12338:103:24","trueBody":{"id":4274,"nodeType":"Block","src":"12361:80:24","statements":[{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4269,"nodeType":"ExpressionStatement","src":"12379:17:24"},{"expression":{"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12414:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4273,"nodeType":"ExpressionStatement","src":"12414:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12458:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"12454:103:24","trueBody":{"id":4291,"nodeType":"Block","src":"12477:80:24","statements":[{"expression":{"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12495:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4286,"nodeType":"ExpressionStatement","src":"12495:17:24"},{"expression":{"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12530:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4290,"nodeType":"ExpressionStatement","src":"12530:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12574:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4309,"nodeType":"IfStatement","src":"12570:103:24","trueBody":{"id":4308,"nodeType":"Block","src":"12593:80:24","statements":[{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12611:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4303,"nodeType":"ExpressionStatement","src":"12611:17:24"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12646:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4307,"nodeType":"ExpressionStatement","src":"12646:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12690:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4326,"nodeType":"IfStatement","src":"12686:100:24","trueBody":{"id":4325,"nodeType":"Block","src":"12708:78:24","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12726:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4320,"nodeType":"ExpressionStatement","src":"12726:16:24"},{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12760:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"12760:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12803:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4343,"nodeType":"IfStatement","src":"12799:100:24","trueBody":{"id":4342,"nodeType":"Block","src":"12821:78:24","statements":[{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12839:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"12839:16:24"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12873:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4341,"nodeType":"ExpressionStatement","src":"12873:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12916:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4360,"nodeType":"IfStatement","src":"12912:100:24","trueBody":{"id":4359,"nodeType":"Block","src":"12934:78:24","statements":[{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"12952:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"12952:16:24"},{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"12986:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"12986:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"13029:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4371,"nodeType":"IfStatement","src":"13025:66:24","trueBody":{"id":4370,"nodeType":"Block","src":"13047:44:24","statements":[{"expression":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"13065:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4369,"nodeType":"ExpressionStatement","src":"13065:11:24"}]}}]},{"expression":{"id":4373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"13117:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4254,"id":4374,"nodeType":"Return","src":"13110:13:24"}]},"documentation":{"id":4248,"nodeType":"StructuredDocumentation","src":"12089:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:24","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"value","nameLocation":"12237:5:24","nodeType":"VariableDeclaration","scope":4376,"src":"12229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:24"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"12267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:24"},"scope":4556,"src":"12214:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"13365:170:24","statements":[{"id":4409,"nodeType":"UncheckedBlock","src":"13375:154:24","statements":[{"assignments":[4388],"declarations":[{"constant":false,"id":4388,"mutability":"mutable","name":"result","nameLocation":"13407:6:24","nodeType":"VariableDeclaration","scope":4409,"src":"13399:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4392,"initialValue":{"arguments":[{"id":4390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"13422:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4389,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4376,4411],"referencedDeclaration":4376,"src":"13416:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"13449:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4395,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"13476:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":4394,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"13459:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3513_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"13495:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"13504:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:24","trueExpression":{"hexValue":"31","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4386,"id":4408,"nodeType":"Return","src":"13442:76:24"}]}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"13136:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:24","nodeType":"FunctionDefinition","parameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"value","nameLocation":"13307:5:24","nodeType":"VariableDeclaration","scope":4411,"src":"13299:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:24","nodeType":"VariableDeclaration","scope":4411,"src":"13314:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":4381,"nodeType":"UserDefinedTypeName","pathNode":{"id":4380,"name":"Rounding","nameLocations":["13314:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"13314:8:24"},"referencedDeclaration":3513,"src":"13314:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:24"},"returnParameters":{"id":4386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"13356:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:24"},"scope":4556,"src":"13284:251:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"13855:600:24","statements":[{"assignments":[4420],"declarations":[{"constant":false,"id":4420,"mutability":"mutable","name":"result","nameLocation":"13873:6:24","nodeType":"VariableDeclaration","scope":4497,"src":"13865:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4422,"initialValue":{"hexValue":"30","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:24"},{"id":4494,"nodeType":"UncheckedBlock","src":"13893:533:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13921:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4437,"nodeType":"IfStatement","src":"13917:98:24","trueBody":{"id":4436,"nodeType":"Block","src":"13939:76:24","statements":[{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13957:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"13957:13:24"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13988:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"13988:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14032:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4452,"nodeType":"IfStatement","src":"14028:95:24","trueBody":{"id":4451,"nodeType":"Block","src":"14049:74:24","statements":[{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14067:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"14067:12:24"},{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14097:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"14097:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14140:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"14136:95:24","trueBody":{"id":4466,"nodeType":"Block","src":"14157:74:24","statements":[{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14175:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4461,"nodeType":"ExpressionStatement","src":"14175:12:24"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14205:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4465,"nodeType":"ExpressionStatement","src":"14205:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14248:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4482,"nodeType":"IfStatement","src":"14244:95:24","trueBody":{"id":4481,"nodeType":"Block","src":"14265:74:24","statements":[{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14283:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4476,"nodeType":"ExpressionStatement","src":"14283:12:24"},{"expression":{"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14313:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4480,"nodeType":"ExpressionStatement","src":"14313:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"14356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4493,"nodeType":"IfStatement","src":"14352:64:24","trueBody":{"id":4492,"nodeType":"Block","src":"14372:44:24","statements":[{"expression":{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14390:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4491,"nodeType":"ExpressionStatement","src":"14390:11:24"}]}}]},{"expression":{"id":4495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"14442:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4418,"id":4496,"nodeType":"Return","src":"14435:13:24"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"13541:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:24","nodeType":"FunctionDefinition","parameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"value","nameLocation":"13816:5:24","nodeType":"VariableDeclaration","scope":4498,"src":"13808:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:24"},"returnParameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"13846:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:24"},"scope":4556,"src":"13792:663:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"14692:177:24","statements":[{"id":4534,"nodeType":"UncheckedBlock","src":"14702:161:24","statements":[{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"result","nameLocation":"14734:6:24","nodeType":"VariableDeclaration","scope":4534,"src":"14726:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4514,"initialValue":{"arguments":[{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14750:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4511,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4498,4536],"referencedDeclaration":4498,"src":"14743:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"14777:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4517,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"14804:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":4516,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"14787:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3513_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"14823:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"14838:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:24","trueExpression":{"hexValue":"31","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4508,"id":4533,"nodeType":"Return","src":"14770:82:24"}]}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"14461:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:24","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"value","nameLocation":"14634:5:24","nodeType":"VariableDeclaration","scope":4536,"src":"14626:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4504,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:24","nodeType":"VariableDeclaration","scope":4536,"src":"14641:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":4503,"nodeType":"UserDefinedTypeName","pathNode":{"id":4502,"name":"Rounding","nameLocations":["14641:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"14641:8:24"},"referencedDeclaration":3513,"src":"14641:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:24"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4536,"src":"14683:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4506,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:24"},"scope":4556,"src":"14610:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4554,"nodeType":"Block","src":"15067:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4547,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"15090:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}],"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4545,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:24","typeDescriptions":{}}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4544,"id":4553,"nodeType":"Return","src":"15077:31:24"}]},"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"14875:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4555,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:24","nodeType":"FunctionDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:24","nodeType":"VariableDeclaration","scope":4555,"src":"15019:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"},"typeName":{"id":4539,"nodeType":"UserDefinedTypeName","pathNode":{"id":4538,"name":"Rounding","nameLocations":["15019:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":3513,"src":"15019:8:24"},"referencedDeclaration":3513,"src":"15019:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3513","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:24"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4555,"src":"15061:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4542,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:24"},"scope":4556,"src":"14993:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4557,"src":"203:14914:24","usedErrors":[3508],"usedEvents":[]}],"src":"103:15015:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6311]},"id":6312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"218:545:25","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6311,"linearizedBaseContracts":[6311],"name":"SafeCast","nameLocation":"772:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"787:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4566,"name":"SafeCastOverflowedUintDowncast","nameLocation":"866:30:25","nodeType":"ErrorDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"bits","nameLocation":"903:4:25","nodeType":"VariableDeclaration","scope":4566,"src":"897:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4561,"name":"uint8","nodeType":"ElementaryTypeName","src":"897:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"value","nameLocation":"917:5:25","nodeType":"VariableDeclaration","scope":4566,"src":"909:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"896:27:25"},"src":"860:64:25"},{"documentation":{"id":4567,"nodeType":"StructuredDocumentation","src":"930:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4571,"name":"SafeCastOverflowedIntToUint","nameLocation":"1016:27:25","nodeType":"ErrorDefinition","parameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"value","nameLocation":"1051:5:25","nodeType":"VariableDeclaration","scope":4571,"src":"1044:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4568,"name":"int256","nodeType":"ElementaryTypeName","src":"1044:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1043:14:25"},"src":"1010:48:25"},{"documentation":{"id":4572,"nodeType":"StructuredDocumentation","src":"1064:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4578,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1142:29:25","nodeType":"ErrorDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"bits","nameLocation":"1178:4:25","nodeType":"VariableDeclaration","scope":4578,"src":"1172:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4573,"name":"uint8","nodeType":"ElementaryTypeName","src":"1172:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"value","nameLocation":"1191:5:25","nodeType":"VariableDeclaration","scope":4578,"src":"1184:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4575,"name":"int256","nodeType":"ElementaryTypeName","src":"1184:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1171:26:25"},"src":"1136:62:25"},{"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"1204:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4583,"name":"SafeCastOverflowedUintToInt","nameLocation":"1290:27:25","nodeType":"ErrorDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"value","nameLocation":"1326:5:25","nodeType":"VariableDeclaration","scope":4583,"src":"1318:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1317:15:25"},"src":"1284:49:25"},{"body":{"id":4610,"nodeType":"Block","src":"1690:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"1704:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1717:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4593,"name":"uint248","nodeType":"ElementaryTypeName","src":"1717:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:3:25","memberName":"max","nodeType":"MemberAccess","src":"1712:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1704:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4604,"nodeType":"IfStatement","src":"1700:105:25","trueBody":{"id":4603,"nodeType":"Block","src":"1731:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"1788:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4598,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"1752:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4602,"nodeType":"RevertStatement","src":"1745:49:25"}]}},{"expression":{"arguments":[{"id":4607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4586,"src":"1829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1821:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4605,"name":"uint248","nodeType":"ElementaryTypeName","src":"1821:7:25","typeDescriptions":{}}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1821:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4590,"id":4609,"nodeType":"Return","src":"1814:21:25"}]},"documentation":{"id":4584,"nodeType":"StructuredDocumentation","src":"1339:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1633:9:25","nodeType":"FunctionDefinition","parameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"value","nameLocation":"1651:5:25","nodeType":"VariableDeclaration","scope":4611,"src":"1643:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:15:25"},"returnParameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"1681:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4588,"name":"uint248","nodeType":"ElementaryTypeName","src":"1681:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1680:9:25"},"scope":6311,"src":"1624:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4638,"nodeType":"Block","src":"2199:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"2213:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2226:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4621,"name":"uint240","nodeType":"ElementaryTypeName","src":"2226:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2221:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2221:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2235:3:25","memberName":"max","nodeType":"MemberAccess","src":"2221:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2213:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4632,"nodeType":"IfStatement","src":"2209:105:25","trueBody":{"id":4631,"nodeType":"Block","src":"2240:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"2297:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4626,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"2261:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4630,"nodeType":"RevertStatement","src":"2254:49:25"}]}},{"expression":{"arguments":[{"id":4635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"2338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2330:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4633,"name":"uint240","nodeType":"ElementaryTypeName","src":"2330:7:25","typeDescriptions":{}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2330:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4618,"id":4637,"nodeType":"Return","src":"2323:21:25"}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"1848:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2142:9:25","nodeType":"FunctionDefinition","parameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"value","nameLocation":"2160:5:25","nodeType":"VariableDeclaration","scope":4639,"src":"2152:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2151:15:25"},"returnParameters":{"id":4618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4639,"src":"2190:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4616,"name":"uint240","nodeType":"ElementaryTypeName","src":"2190:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2189:9:25"},"scope":6311,"src":"2133:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4666,"nodeType":"Block","src":"2708:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2722:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4649,"name":"uint232","nodeType":"ElementaryTypeName","src":"2735:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2730:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2744:3:25","memberName":"max","nodeType":"MemberAccess","src":"2730:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2722:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4660,"nodeType":"IfStatement","src":"2718:105:25","trueBody":{"id":4659,"nodeType":"Block","src":"2749:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2806:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4654,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"2770:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4658,"nodeType":"RevertStatement","src":"2763:49:25"}]}},{"expression":{"arguments":[{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2839:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4661,"name":"uint232","nodeType":"ElementaryTypeName","src":"2839:7:25","typeDescriptions":{}}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2839:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4646,"id":4665,"nodeType":"Return","src":"2832:21:25"}]},"documentation":{"id":4640,"nodeType":"StructuredDocumentation","src":"2357:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4667,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2651:9:25","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"value","nameLocation":"2669:5:25","nodeType":"VariableDeclaration","scope":4667,"src":"2661:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2661:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2660:15:25"},"returnParameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4667,"src":"2699:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4644,"name":"uint232","nodeType":"ElementaryTypeName","src":"2699:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2698:9:25"},"scope":6311,"src":"2642:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4694,"nodeType":"Block","src":"3217:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3231:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3244:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4677,"name":"uint224","nodeType":"ElementaryTypeName","src":"3244:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4676,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3239:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3253:3:25","memberName":"max","nodeType":"MemberAccess","src":"3239:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3231:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4688,"nodeType":"IfStatement","src":"3227:105:25","trueBody":{"id":4687,"nodeType":"Block","src":"3258:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3315:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4682,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"3279:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4686,"nodeType":"RevertStatement","src":"3272:49:25"}]}},{"expression":{"arguments":[{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"3356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4689,"name":"uint224","nodeType":"ElementaryTypeName","src":"3348:7:25","typeDescriptions":{}}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4674,"id":4693,"nodeType":"Return","src":"3341:21:25"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"2866:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3160:9:25","nodeType":"FunctionDefinition","parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"value","nameLocation":"3178:5:25","nodeType":"VariableDeclaration","scope":4695,"src":"3170:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3169:15:25"},"returnParameters":{"id":4674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4695,"src":"3208:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4672,"name":"uint224","nodeType":"ElementaryTypeName","src":"3208:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3207:9:25"},"scope":6311,"src":"3151:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4722,"nodeType":"Block","src":"3726:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"3740:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3753:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4705,"name":"uint216","nodeType":"ElementaryTypeName","src":"3753:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3748:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3748:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3762:3:25","memberName":"max","nodeType":"MemberAccess","src":"3748:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3740:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4716,"nodeType":"IfStatement","src":"3736:105:25","trueBody":{"id":4715,"nodeType":"Block","src":"3767:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3819:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"3824:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"3788:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4714,"nodeType":"RevertStatement","src":"3781:49:25"}]}},{"expression":{"arguments":[{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"3865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3857:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4717,"name":"uint216","nodeType":"ElementaryTypeName","src":"3857:7:25","typeDescriptions":{}}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3857:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4702,"id":4721,"nodeType":"Return","src":"3850:21:25"}]},"documentation":{"id":4696,"nodeType":"StructuredDocumentation","src":"3375:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3669:9:25","nodeType":"FunctionDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"value","nameLocation":"3687:5:25","nodeType":"VariableDeclaration","scope":4723,"src":"3679:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:15:25"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4723,"src":"3717:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4700,"name":"uint216","nodeType":"ElementaryTypeName","src":"3717:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3716:9:25"},"scope":6311,"src":"3660:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4750,"nodeType":"Block","src":"4235:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"4249:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4262:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4733,"name":"uint208","nodeType":"ElementaryTypeName","src":"4262:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4257:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4271:3:25","memberName":"max","nodeType":"MemberAccess","src":"4257:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4249:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4744,"nodeType":"IfStatement","src":"4245:105:25","trueBody":{"id":4743,"nodeType":"Block","src":"4276:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4328:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"4333:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"4297:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4742,"nodeType":"RevertStatement","src":"4290:49:25"}]}},{"expression":{"arguments":[{"id":4747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"4374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4745,"name":"uint208","nodeType":"ElementaryTypeName","src":"4366:7:25","typeDescriptions":{}}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4730,"id":4749,"nodeType":"Return","src":"4359:21:25"}]},"documentation":{"id":4724,"nodeType":"StructuredDocumentation","src":"3884:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4178:9:25","nodeType":"FunctionDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"value","nameLocation":"4196:5:25","nodeType":"VariableDeclaration","scope":4751,"src":"4188:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4188:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4187:15:25"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4751,"src":"4226:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4728,"name":"uint208","nodeType":"ElementaryTypeName","src":"4226:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4225:9:25"},"scope":6311,"src":"4169:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4778,"nodeType":"Block","src":"4744:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4758:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4771:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4761,"name":"uint200","nodeType":"ElementaryTypeName","src":"4771:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4766:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4780:3:25","memberName":"max","nodeType":"MemberAccess","src":"4766:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4758:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4772,"nodeType":"IfStatement","src":"4754:105:25","trueBody":{"id":4771,"nodeType":"Block","src":"4785:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4842:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"4806:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4770,"nodeType":"RevertStatement","src":"4799:49:25"}]}},{"expression":{"arguments":[{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"4883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4875:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4773,"name":"uint200","nodeType":"ElementaryTypeName","src":"4875:7:25","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4875:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4758,"id":4777,"nodeType":"Return","src":"4868:21:25"}]},"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"4393:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4687:9:25","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"value","nameLocation":"4705:5:25","nodeType":"VariableDeclaration","scope":4779,"src":"4697:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4696:15:25"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4779,"src":"4735:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4756,"name":"uint200","nodeType":"ElementaryTypeName","src":"4735:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4734:9:25"},"scope":6311,"src":"4678:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4806,"nodeType":"Block","src":"5253:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"5267:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5280:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4789,"name":"uint192","nodeType":"ElementaryTypeName","src":"5280:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5275:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5275:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5289:3:25","memberName":"max","nodeType":"MemberAccess","src":"5275:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5267:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"nodeType":"IfStatement","src":"5263:105:25","trueBody":{"id":4799,"nodeType":"Block","src":"5294:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5346:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"5351:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"5315:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4798,"nodeType":"RevertStatement","src":"5308:49:25"}]}},{"expression":{"arguments":[{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"5392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5384:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4801,"name":"uint192","nodeType":"ElementaryTypeName","src":"5384:7:25","typeDescriptions":{}}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5384:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4786,"id":4805,"nodeType":"Return","src":"5377:21:25"}]},"documentation":{"id":4780,"nodeType":"StructuredDocumentation","src":"4902:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5196:9:25","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"value","nameLocation":"5214:5:25","nodeType":"VariableDeclaration","scope":4807,"src":"5206:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5205:15:25"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4807,"src":"5244:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4784,"name":"uint192","nodeType":"ElementaryTypeName","src":"5244:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5243:9:25"},"scope":6311,"src":"5187:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4834,"nodeType":"Block","src":"5762:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"5776:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5789:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4817,"name":"uint184","nodeType":"ElementaryTypeName","src":"5789:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5784:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5798:3:25","memberName":"max","nodeType":"MemberAccess","src":"5784:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5776:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4828,"nodeType":"IfStatement","src":"5772:105:25","trueBody":{"id":4827,"nodeType":"Block","src":"5803:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5855:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"5860:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"5824:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4826,"nodeType":"RevertStatement","src":"5817:49:25"}]}},{"expression":{"arguments":[{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"5901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5893:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4829,"name":"uint184","nodeType":"ElementaryTypeName","src":"5893:7:25","typeDescriptions":{}}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4814,"id":4833,"nodeType":"Return","src":"5886:21:25"}]},"documentation":{"id":4808,"nodeType":"StructuredDocumentation","src":"5411:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5705:9:25","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"value","nameLocation":"5723:5:25","nodeType":"VariableDeclaration","scope":4835,"src":"5715:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5714:15:25"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4835,"src":"5753:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4812,"name":"uint184","nodeType":"ElementaryTypeName","src":"5753:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5752:9:25"},"scope":6311,"src":"5696:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"6271:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"6285:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6298:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4845,"name":"uint176","nodeType":"ElementaryTypeName","src":"6298:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6293:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6293:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6307:3:25","memberName":"max","nodeType":"MemberAccess","src":"6293:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6285:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4856,"nodeType":"IfStatement","src":"6281:105:25","trueBody":{"id":4855,"nodeType":"Block","src":"6312:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6364:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"6369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6333:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6333:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4854,"nodeType":"RevertStatement","src":"6326:49:25"}]}},{"expression":{"arguments":[{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"6410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6402:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4857,"name":"uint176","nodeType":"ElementaryTypeName","src":"6402:7:25","typeDescriptions":{}}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6402:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4842,"id":4861,"nodeType":"Return","src":"6395:21:25"}]},"documentation":{"id":4836,"nodeType":"StructuredDocumentation","src":"5920:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6214:9:25","nodeType":"FunctionDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"value","nameLocation":"6232:5:25","nodeType":"VariableDeclaration","scope":4863,"src":"6224:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6224:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6223:15:25"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4863,"src":"6262:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4840,"name":"uint176","nodeType":"ElementaryTypeName","src":"6262:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6261:9:25"},"scope":6311,"src":"6205:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4890,"nodeType":"Block","src":"6780:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"6794:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6807:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4873,"name":"uint168","nodeType":"ElementaryTypeName","src":"6807:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6802:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6816:3:25","memberName":"max","nodeType":"MemberAccess","src":"6802:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6794:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4884,"nodeType":"IfStatement","src":"6790:105:25","trueBody":{"id":4883,"nodeType":"Block","src":"6821:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6873:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"6878:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"6842:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6842:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4882,"nodeType":"RevertStatement","src":"6835:49:25"}]}},{"expression":{"arguments":[{"id":4887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"6919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4885,"name":"uint168","nodeType":"ElementaryTypeName","src":"6911:7:25","typeDescriptions":{}}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4870,"id":4889,"nodeType":"Return","src":"6904:21:25"}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"6429:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6723:9:25","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"value","nameLocation":"6741:5:25","nodeType":"VariableDeclaration","scope":4891,"src":"6733:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"6733:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6732:15:25"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4891,"src":"6771:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4868,"name":"uint168","nodeType":"ElementaryTypeName","src":"6771:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6770:9:25"},"scope":6311,"src":"6714:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4918,"nodeType":"Block","src":"7289:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"7303:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7316:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4901,"name":"uint160","nodeType":"ElementaryTypeName","src":"7316:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7311:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7325:3:25","memberName":"max","nodeType":"MemberAccess","src":"7311:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7303:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4912,"nodeType":"IfStatement","src":"7299:105:25","trueBody":{"id":4911,"nodeType":"Block","src":"7330:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7382:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"7387:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"7351:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"RevertStatement","src":"7344:49:25"}]}},{"expression":{"arguments":[{"id":4915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4894,"src":"7428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7420:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4913,"name":"uint160","nodeType":"ElementaryTypeName","src":"7420:7:25","typeDescriptions":{}}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7420:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4898,"id":4917,"nodeType":"Return","src":"7413:21:25"}]},"documentation":{"id":4892,"nodeType":"StructuredDocumentation","src":"6938:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7232:9:25","nodeType":"FunctionDefinition","parameters":{"id":4895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4894,"mutability":"mutable","name":"value","nameLocation":"7250:5:25","nodeType":"VariableDeclaration","scope":4919,"src":"7242:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4893,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:15:25"},"returnParameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4919,"src":"7280:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4896,"name":"uint160","nodeType":"ElementaryTypeName","src":"7280:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7279:9:25"},"scope":6311,"src":"7223:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4946,"nodeType":"Block","src":"7798:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"7812:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7825:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4929,"name":"uint152","nodeType":"ElementaryTypeName","src":"7825:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7820:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7820:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7834:3:25","memberName":"max","nodeType":"MemberAccess","src":"7820:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7812:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4940,"nodeType":"IfStatement","src":"7808:105:25","trueBody":{"id":4939,"nodeType":"Block","src":"7839:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7891:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"7896:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"7860:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7860:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4938,"nodeType":"RevertStatement","src":"7853:49:25"}]}},{"expression":{"arguments":[{"id":4943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"7937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7929:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4941,"name":"uint152","nodeType":"ElementaryTypeName","src":"7929:7:25","typeDescriptions":{}}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4926,"id":4945,"nodeType":"Return","src":"7922:21:25"}]},"documentation":{"id":4920,"nodeType":"StructuredDocumentation","src":"7447:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7741:9:25","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"value","nameLocation":"7759:5:25","nodeType":"VariableDeclaration","scope":4947,"src":"7751:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7750:15:25"},"returnParameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4947,"src":"7789:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4924,"name":"uint152","nodeType":"ElementaryTypeName","src":"7789:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7788:9:25"},"scope":6311,"src":"7732:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4974,"nodeType":"Block","src":"8307:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"8321:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4957,"name":"uint144","nodeType":"ElementaryTypeName","src":"8334:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8329:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8343:3:25","memberName":"max","nodeType":"MemberAccess","src":"8329:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8321:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4968,"nodeType":"IfStatement","src":"8317:105:25","trueBody":{"id":4967,"nodeType":"Block","src":"8348:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8400:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"8405:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"8369:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8369:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4966,"nodeType":"RevertStatement","src":"8362:49:25"}]}},{"expression":{"arguments":[{"id":4971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4950,"src":"8446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8438:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4969,"name":"uint144","nodeType":"ElementaryTypeName","src":"8438:7:25","typeDescriptions":{}}},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4954,"id":4973,"nodeType":"Return","src":"8431:21:25"}]},"documentation":{"id":4948,"nodeType":"StructuredDocumentation","src":"7956:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8250:9:25","nodeType":"FunctionDefinition","parameters":{"id":4951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4950,"mutability":"mutable","name":"value","nameLocation":"8268:5:25","nodeType":"VariableDeclaration","scope":4975,"src":"8260:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4949,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8259:15:25"},"returnParameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4975,"src":"8298:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4952,"name":"uint144","nodeType":"ElementaryTypeName","src":"8298:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8297:9:25"},"scope":6311,"src":"8241:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5002,"nodeType":"Block","src":"8816:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"8830:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8843:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4985,"name":"uint136","nodeType":"ElementaryTypeName","src":"8843:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8838:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8852:3:25","memberName":"max","nodeType":"MemberAccess","src":"8838:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8830:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4996,"nodeType":"IfStatement","src":"8826:105:25","trueBody":{"id":4995,"nodeType":"Block","src":"8857:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8909:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"8914:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"8878:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8878:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4994,"nodeType":"RevertStatement","src":"8871:49:25"}]}},{"expression":{"arguments":[{"id":4999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"8955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8947:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4997,"name":"uint136","nodeType":"ElementaryTypeName","src":"8947:7:25","typeDescriptions":{}}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8947:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4982,"id":5001,"nodeType":"Return","src":"8940:21:25"}]},"documentation":{"id":4976,"nodeType":"StructuredDocumentation","src":"8465:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8759:9:25","nodeType":"FunctionDefinition","parameters":{"id":4979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4978,"mutability":"mutable","name":"value","nameLocation":"8777:5:25","nodeType":"VariableDeclaration","scope":5003,"src":"8769:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4977,"name":"uint256","nodeType":"ElementaryTypeName","src":"8769:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8768:15:25"},"returnParameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5003,"src":"8807:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4980,"name":"uint136","nodeType":"ElementaryTypeName","src":"8807:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8806:9:25"},"scope":6311,"src":"8750:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5030,"nodeType":"Block","src":"9325:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9339:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9352:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5013,"name":"uint128","nodeType":"ElementaryTypeName","src":"9352:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9347:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9347:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9361:3:25","memberName":"max","nodeType":"MemberAccess","src":"9347:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9339:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5024,"nodeType":"IfStatement","src":"9335:105:25","trueBody":{"id":5023,"nodeType":"Block","src":"9366:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9418:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9423:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"9387:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5022,"nodeType":"RevertStatement","src":"9380:49:25"}]}},{"expression":{"arguments":[{"id":5027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"9464:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5025,"name":"uint128","nodeType":"ElementaryTypeName","src":"9456:7:25","typeDescriptions":{}}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5010,"id":5029,"nodeType":"Return","src":"9449:21:25"}]},"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"8974:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9268:9:25","nodeType":"FunctionDefinition","parameters":{"id":5007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"value","nameLocation":"9286:5:25","nodeType":"VariableDeclaration","scope":5031,"src":"9278:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"9278:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9277:15:25"},"returnParameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5031,"src":"9316:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5008,"name":"uint128","nodeType":"ElementaryTypeName","src":"9316:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9315:9:25"},"scope":6311,"src":"9259:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"9834:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9848:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9861:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5041,"name":"uint120","nodeType":"ElementaryTypeName","src":"9861:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9856:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:3:25","memberName":"max","nodeType":"MemberAccess","src":"9856:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9848:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5052,"nodeType":"IfStatement","src":"9844:105:25","trueBody":{"id":5051,"nodeType":"Block","src":"9875:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9927:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9932:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"9896:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9896:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5050,"nodeType":"RevertStatement","src":"9889:49:25"}]}},{"expression":{"arguments":[{"id":5055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"9973:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9965:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5053,"name":"uint120","nodeType":"ElementaryTypeName","src":"9965:7:25","typeDescriptions":{}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9965:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5038,"id":5057,"nodeType":"Return","src":"9958:21:25"}]},"documentation":{"id":5032,"nodeType":"StructuredDocumentation","src":"9483:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9777:9:25","nodeType":"FunctionDefinition","parameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"value","nameLocation":"9795:5:25","nodeType":"VariableDeclaration","scope":5059,"src":"9787:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"9787:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9786:15:25"},"returnParameters":{"id":5038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5059,"src":"9825:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5036,"name":"uint120","nodeType":"ElementaryTypeName","src":"9825:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9824:9:25"},"scope":6311,"src":"9768:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5086,"nodeType":"Block","src":"10343:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"10357:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10370:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5069,"name":"uint112","nodeType":"ElementaryTypeName","src":"10370:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10365:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10365:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10379:3:25","memberName":"max","nodeType":"MemberAccess","src":"10365:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10357:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5080,"nodeType":"IfStatement","src":"10353:105:25","trueBody":{"id":5079,"nodeType":"Block","src":"10384:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"10441:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"10405:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10405:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5078,"nodeType":"RevertStatement","src":"10398:49:25"}]}},{"expression":{"arguments":[{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5062,"src":"10482:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5081,"name":"uint112","nodeType":"ElementaryTypeName","src":"10474:7:25","typeDescriptions":{}}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10474:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5066,"id":5085,"nodeType":"Return","src":"10467:21:25"}]},"documentation":{"id":5060,"nodeType":"StructuredDocumentation","src":"9992:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10286:9:25","nodeType":"FunctionDefinition","parameters":{"id":5063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5062,"mutability":"mutable","name":"value","nameLocation":"10304:5:25","nodeType":"VariableDeclaration","scope":5087,"src":"10296:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5061,"name":"uint256","nodeType":"ElementaryTypeName","src":"10296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10295:15:25"},"returnParameters":{"id":5066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5087,"src":"10334:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5064,"name":"uint112","nodeType":"ElementaryTypeName","src":"10334:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10333:9:25"},"scope":6311,"src":"10277:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5114,"nodeType":"Block","src":"10852:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"10866:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10879:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5097,"name":"uint104","nodeType":"ElementaryTypeName","src":"10879:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10874:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10874:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10888:3:25","memberName":"max","nodeType":"MemberAccess","src":"10874:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10866:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5108,"nodeType":"IfStatement","src":"10862:105:25","trueBody":{"id":5107,"nodeType":"Block","src":"10893:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10945:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"10950:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"10914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10914:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5106,"nodeType":"RevertStatement","src":"10907:49:25"}]}},{"expression":{"arguments":[{"id":5111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"10991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5109,"name":"uint104","nodeType":"ElementaryTypeName","src":"10983:7:25","typeDescriptions":{}}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10983:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5094,"id":5113,"nodeType":"Return","src":"10976:21:25"}]},"documentation":{"id":5088,"nodeType":"StructuredDocumentation","src":"10501:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10795:9:25","nodeType":"FunctionDefinition","parameters":{"id":5091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5090,"mutability":"mutable","name":"value","nameLocation":"10813:5:25","nodeType":"VariableDeclaration","scope":5115,"src":"10805:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"10805:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10804:15:25"},"returnParameters":{"id":5094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5115,"src":"10843:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5092,"name":"uint104","nodeType":"ElementaryTypeName","src":"10843:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10842:9:25"},"scope":6311,"src":"10786:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5142,"nodeType":"Block","src":"11355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"11369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5125,"name":"uint96","nodeType":"ElementaryTypeName","src":"11382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11390:3:25","memberName":"max","nodeType":"MemberAccess","src":"11377:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5136,"nodeType":"IfStatement","src":"11365:103:25","trueBody":{"id":5135,"nodeType":"Block","src":"11395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"11451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"11416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5134,"nodeType":"RevertStatement","src":"11409:48:25"}]}},{"expression":{"arguments":[{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5118,"src":"11491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5137,"name":"uint96","nodeType":"ElementaryTypeName","src":"11484:6:25","typeDescriptions":{}}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5122,"id":5141,"nodeType":"Return","src":"11477:20:25"}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"11010:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5118,"mutability":"mutable","name":"value","nameLocation":"11317:5:25","nodeType":"VariableDeclaration","scope":5143,"src":"11309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:15:25"},"returnParameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5143,"src":"11347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5120,"name":"uint96","nodeType":"ElementaryTypeName","src":"11347:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11346:8:25"},"scope":6311,"src":"11291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5170,"nodeType":"Block","src":"11855:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11869:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5153,"name":"uint88","nodeType":"ElementaryTypeName","src":"11882:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11877:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11877:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11890:3:25","memberName":"max","nodeType":"MemberAccess","src":"11877:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11869:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5164,"nodeType":"IfStatement","src":"11865:103:25","trueBody":{"id":5163,"nodeType":"Block","src":"11895:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11951:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"11916:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11916:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"RevertStatement","src":"11909:48:25"}]}},{"expression":{"arguments":[{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"11991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5165,"name":"uint88","nodeType":"ElementaryTypeName","src":"11984:6:25","typeDescriptions":{}}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5150,"id":5169,"nodeType":"Return","src":"11977:20:25"}]},"documentation":{"id":5144,"nodeType":"StructuredDocumentation","src":"11510:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11800:8:25","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"value","nameLocation":"11817:5:25","nodeType":"VariableDeclaration","scope":5171,"src":"11809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"11809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11808:15:25"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5171,"src":"11847:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5148,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11846:8:25"},"scope":6311,"src":"11791:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5198,"nodeType":"Block","src":"12355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"12369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5181,"name":"uint80","nodeType":"ElementaryTypeName","src":"12382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12390:3:25","memberName":"max","nodeType":"MemberAccess","src":"12377:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"12365:103:25","trueBody":{"id":5191,"nodeType":"Block","src":"12395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"12451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"12416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5190,"nodeType":"RevertStatement","src":"12409:48:25"}]}},{"expression":{"arguments":[{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5174,"src":"12491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5193,"name":"uint80","nodeType":"ElementaryTypeName","src":"12484:6:25","typeDescriptions":{}}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5178,"id":5197,"nodeType":"Return","src":"12477:20:25"}]},"documentation":{"id":5172,"nodeType":"StructuredDocumentation","src":"12010:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"value","nameLocation":"12317:5:25","nodeType":"VariableDeclaration","scope":5199,"src":"12309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5173,"name":"uint256","nodeType":"ElementaryTypeName","src":"12309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12308:15:25"},"returnParameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5199,"src":"12347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5176,"name":"uint80","nodeType":"ElementaryTypeName","src":"12347:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12346:8:25"},"scope":6311,"src":"12291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5226,"nodeType":"Block","src":"12855:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"12869:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12882:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5209,"name":"uint72","nodeType":"ElementaryTypeName","src":"12882:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12877:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12877:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12890:3:25","memberName":"max","nodeType":"MemberAccess","src":"12877:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12869:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5220,"nodeType":"IfStatement","src":"12865:103:25","trueBody":{"id":5219,"nodeType":"Block","src":"12895:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"12951:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"12916:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12916:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5218,"nodeType":"RevertStatement","src":"12909:48:25"}]}},{"expression":{"arguments":[{"id":5223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"12991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5221,"name":"uint72","nodeType":"ElementaryTypeName","src":"12984:6:25","typeDescriptions":{}}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5206,"id":5225,"nodeType":"Return","src":"12977:20:25"}]},"documentation":{"id":5200,"nodeType":"StructuredDocumentation","src":"12510:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12800:8:25","nodeType":"FunctionDefinition","parameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"value","nameLocation":"12817:5:25","nodeType":"VariableDeclaration","scope":5227,"src":"12809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12808:15:25"},"returnParameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5227,"src":"12847:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5204,"name":"uint72","nodeType":"ElementaryTypeName","src":"12847:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12846:8:25"},"scope":6311,"src":"12791:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5254,"nodeType":"Block","src":"13355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"13369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5237,"name":"uint64","nodeType":"ElementaryTypeName","src":"13382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13390:3:25","memberName":"max","nodeType":"MemberAccess","src":"13377:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5248,"nodeType":"IfStatement","src":"13365:103:25","trueBody":{"id":5247,"nodeType":"Block","src":"13395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"13451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5246,"nodeType":"RevertStatement","src":"13409:48:25"}]}},{"expression":{"arguments":[{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"13491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5249,"name":"uint64","nodeType":"ElementaryTypeName","src":"13484:6:25","typeDescriptions":{}}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5234,"id":5253,"nodeType":"Return","src":"13477:20:25"}]},"documentation":{"id":5228,"nodeType":"StructuredDocumentation","src":"13010:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5230,"mutability":"mutable","name":"value","nameLocation":"13317:5:25","nodeType":"VariableDeclaration","scope":5255,"src":"13309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5229,"name":"uint256","nodeType":"ElementaryTypeName","src":"13309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13308:15:25"},"returnParameters":{"id":5234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5255,"src":"13347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5232,"name":"uint64","nodeType":"ElementaryTypeName","src":"13347:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13346:8:25"},"scope":6311,"src":"13291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"13855:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"13869:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13882:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5265,"name":"uint56","nodeType":"ElementaryTypeName","src":"13882:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13877:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13877:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13890:3:25","memberName":"max","nodeType":"MemberAccess","src":"13877:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13869:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5276,"nodeType":"IfStatement","src":"13865:103:25","trueBody":{"id":5275,"nodeType":"Block","src":"13895:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"13951:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"13916:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13916:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5274,"nodeType":"RevertStatement","src":"13909:48:25"}]}},{"expression":{"arguments":[{"id":5279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"13991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5277,"name":"uint56","nodeType":"ElementaryTypeName","src":"13984:6:25","typeDescriptions":{}}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5262,"id":5281,"nodeType":"Return","src":"13977:20:25"}]},"documentation":{"id":5256,"nodeType":"StructuredDocumentation","src":"13510:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13800:8:25","nodeType":"FunctionDefinition","parameters":{"id":5259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5258,"mutability":"mutable","name":"value","nameLocation":"13817:5:25","nodeType":"VariableDeclaration","scope":5283,"src":"13809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13808:15:25"},"returnParameters":{"id":5262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5283,"src":"13847:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5260,"name":"uint56","nodeType":"ElementaryTypeName","src":"13847:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13846:8:25"},"scope":6311,"src":"13791:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5310,"nodeType":"Block","src":"14355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"14369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5293,"name":"uint48","nodeType":"ElementaryTypeName","src":"14382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14390:3:25","memberName":"max","nodeType":"MemberAccess","src":"14377:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5304,"nodeType":"IfStatement","src":"14365:103:25","trueBody":{"id":5303,"nodeType":"Block","src":"14395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"14451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"14416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5302,"nodeType":"RevertStatement","src":"14409:48:25"}]}},{"expression":{"arguments":[{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"14491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5305,"name":"uint48","nodeType":"ElementaryTypeName","src":"14484:6:25","typeDescriptions":{}}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5290,"id":5309,"nodeType":"Return","src":"14477:20:25"}]},"documentation":{"id":5284,"nodeType":"StructuredDocumentation","src":"14010:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"value","nameLocation":"14317:5:25","nodeType":"VariableDeclaration","scope":5311,"src":"14309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5285,"name":"uint256","nodeType":"ElementaryTypeName","src":"14309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14308:15:25"},"returnParameters":{"id":5290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5311,"src":"14347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5288,"name":"uint48","nodeType":"ElementaryTypeName","src":"14347:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14346:8:25"},"scope":6311,"src":"14291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5338,"nodeType":"Block","src":"14855:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"14869:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14882:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5321,"name":"uint40","nodeType":"ElementaryTypeName","src":"14882:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14877:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14877:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14890:3:25","memberName":"max","nodeType":"MemberAccess","src":"14877:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14869:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5332,"nodeType":"IfStatement","src":"14865:103:25","trueBody":{"id":5331,"nodeType":"Block","src":"14895:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"14951:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"14916:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14916:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5330,"nodeType":"RevertStatement","src":"14909:48:25"}]}},{"expression":{"arguments":[{"id":5335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"14991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5333,"name":"uint40","nodeType":"ElementaryTypeName","src":"14984:6:25","typeDescriptions":{}}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5318,"id":5337,"nodeType":"Return","src":"14977:20:25"}]},"documentation":{"id":5312,"nodeType":"StructuredDocumentation","src":"14510:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14800:8:25","nodeType":"FunctionDefinition","parameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"value","nameLocation":"14817:5:25","nodeType":"VariableDeclaration","scope":5339,"src":"14809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"14809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14808:15:25"},"returnParameters":{"id":5318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5339,"src":"14847:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5316,"name":"uint40","nodeType":"ElementaryTypeName","src":"14847:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14846:8:25"},"scope":6311,"src":"14791:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5366,"nodeType":"Block","src":"15355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"15369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5349,"name":"uint32","nodeType":"ElementaryTypeName","src":"15382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15390:3:25","memberName":"max","nodeType":"MemberAccess","src":"15377:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5360,"nodeType":"IfStatement","src":"15365:103:25","trueBody":{"id":5359,"nodeType":"Block","src":"15395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"15451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"15416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5358,"nodeType":"RevertStatement","src":"15409:48:25"}]}},{"expression":{"arguments":[{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"15491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5361,"name":"uint32","nodeType":"ElementaryTypeName","src":"15484:6:25","typeDescriptions":{}}},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5346,"id":5365,"nodeType":"Return","src":"15477:20:25"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"15010:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"value","nameLocation":"15317:5:25","nodeType":"VariableDeclaration","scope":5367,"src":"15309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"15309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15308:15:25"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5367,"src":"15347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5344,"name":"uint32","nodeType":"ElementaryTypeName","src":"15347:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15346:8:25"},"scope":6311,"src":"15291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5394,"nodeType":"Block","src":"15855:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"15869:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15882:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5377,"name":"uint24","nodeType":"ElementaryTypeName","src":"15882:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15877:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15877:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15890:3:25","memberName":"max","nodeType":"MemberAccess","src":"15877:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15869:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5388,"nodeType":"IfStatement","src":"15865:103:25","trueBody":{"id":5387,"nodeType":"Block","src":"15895:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15947:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"15951:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"15916:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15916:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5386,"nodeType":"RevertStatement","src":"15909:48:25"}]}},{"expression":{"arguments":[{"id":5391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"15991:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5389,"name":"uint24","nodeType":"ElementaryTypeName","src":"15984:6:25","typeDescriptions":{}}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5374,"id":5393,"nodeType":"Return","src":"15977:20:25"}]},"documentation":{"id":5368,"nodeType":"StructuredDocumentation","src":"15510:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15800:8:25","nodeType":"FunctionDefinition","parameters":{"id":5371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"value","nameLocation":"15817:5:25","nodeType":"VariableDeclaration","scope":5395,"src":"15809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15808:15:25"},"returnParameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5395,"src":"15847:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5372,"name":"uint24","nodeType":"ElementaryTypeName","src":"15847:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15846:8:25"},"scope":6311,"src":"15791:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5422,"nodeType":"Block","src":"16355:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"16369:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16382:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5405,"name":"uint16","nodeType":"ElementaryTypeName","src":"16382:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16377:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16377:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16390:3:25","memberName":"max","nodeType":"MemberAccess","src":"16377:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16369:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"16365:103:25","trueBody":{"id":5415,"nodeType":"Block","src":"16395:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16447:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"16451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"16416:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16416:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5414,"nodeType":"RevertStatement","src":"16409:48:25"}]}},{"expression":{"arguments":[{"id":5419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"16491:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16484:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5417,"name":"uint16","nodeType":"ElementaryTypeName","src":"16484:6:25","typeDescriptions":{}}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16484:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5402,"id":5421,"nodeType":"Return","src":"16477:20:25"}]},"documentation":{"id":5396,"nodeType":"StructuredDocumentation","src":"16010:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16300:8:25","nodeType":"FunctionDefinition","parameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"value","nameLocation":"16317:5:25","nodeType":"VariableDeclaration","scope":5423,"src":"16309:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5397,"name":"uint256","nodeType":"ElementaryTypeName","src":"16309:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16308:15:25"},"returnParameters":{"id":5402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5423,"src":"16347:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5400,"name":"uint16","nodeType":"ElementaryTypeName","src":"16347:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16346:8:25"},"scope":6311,"src":"16291:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5450,"nodeType":"Block","src":"16849:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"16863:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16876:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5433,"name":"uint8","nodeType":"ElementaryTypeName","src":"16876:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16871:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16871:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16883:3:25","memberName":"max","nodeType":"MemberAccess","src":"16871:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16863:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5444,"nodeType":"IfStatement","src":"16859:101:25","trueBody":{"id":5443,"nodeType":"Block","src":"16888:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16940:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"16943:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"16909:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16909:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5442,"nodeType":"RevertStatement","src":"16902:47:25"}]}},{"expression":{"arguments":[{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"16982:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16976:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5445,"name":"uint8","nodeType":"ElementaryTypeName","src":"16976:5:25","typeDescriptions":{}}},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16976:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5430,"id":5449,"nodeType":"Return","src":"16969:19:25"}]},"documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"16510:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16796:7:25","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5426,"mutability":"mutable","name":"value","nameLocation":"16812:5:25","nodeType":"VariableDeclaration","scope":5451,"src":"16804:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"16804:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16803:15:25"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5451,"src":"16842:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5428,"name":"uint8","nodeType":"ElementaryTypeName","src":"16842:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16841:7:25"},"scope":6311,"src":"16787:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"17231:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"17245:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17253:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17245:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"17241:81:25","trueBody":{"id":5466,"nodeType":"Block","src":"17256:66:25","statements":[{"errorCall":{"arguments":[{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"17305:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5462,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"17277:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17277:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"RevertStatement","src":"17270:41:25"}]}},{"expression":{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"17346:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17338:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5468,"name":"uint256","nodeType":"ElementaryTypeName","src":"17338:7:25","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17338:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5458,"id":5472,"nodeType":"Return","src":"17331:21:25"}]},"documentation":{"id":5452,"nodeType":"StructuredDocumentation","src":"17001:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17175:9:25","nodeType":"FunctionDefinition","parameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"value","nameLocation":"17192:5:25","nodeType":"VariableDeclaration","scope":5474,"src":"17185:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5453,"name":"int256","nodeType":"ElementaryTypeName","src":"17185:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17184:14:25"},"returnParameters":{"id":5458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"17222:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5456,"name":"uint256","nodeType":"ElementaryTypeName","src":"17222:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17221:9:25"},"scope":6311,"src":"17166:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5499,"nodeType":"Block","src":"17756:150:25","statements":[{"expression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"17766:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"17786:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17779:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5483,"name":"int248","nodeType":"ElementaryTypeName","src":"17779:6:25","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17779:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17766:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5488,"nodeType":"ExpressionStatement","src":"17766:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5480,"src":"17806:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"17820:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17806:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5498,"nodeType":"IfStatement","src":"17802:98:25","trueBody":{"id":5497,"nodeType":"Block","src":"17827:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"17883:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5492,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"17848:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17848:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"RevertStatement","src":"17841:48:25"}]}}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"17365:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17691:8:25","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"17707:5:25","nodeType":"VariableDeclaration","scope":5500,"src":"17700:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5476,"name":"int256","nodeType":"ElementaryTypeName","src":"17700:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17699:14:25"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"downcasted","nameLocation":"17744:10:25","nodeType":"VariableDeclaration","scope":5500,"src":"17737:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5479,"name":"int248","nodeType":"ElementaryTypeName","src":"17737:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17736:19:25"},"scope":6311,"src":"17682:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5525,"nodeType":"Block","src":"18303:150:25","statements":[{"expression":{"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"18313:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"18333:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18326:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5509,"name":"int240","nodeType":"ElementaryTypeName","src":"18326:6:25","typeDescriptions":{}}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18313:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5514,"nodeType":"ExpressionStatement","src":"18313:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"18353:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"18367:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18353:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5524,"nodeType":"IfStatement","src":"18349:98:25","trueBody":{"id":5523,"nodeType":"Block","src":"18374:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18425:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"18430:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5518,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"18395:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5522,"nodeType":"RevertStatement","src":"18388:48:25"}]}}]},"documentation":{"id":5501,"nodeType":"StructuredDocumentation","src":"17912:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5526,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18238:8:25","nodeType":"FunctionDefinition","parameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"value","nameLocation":"18254:5:25","nodeType":"VariableDeclaration","scope":5526,"src":"18247:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5502,"name":"int256","nodeType":"ElementaryTypeName","src":"18247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18246:14:25"},"returnParameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5506,"mutability":"mutable","name":"downcasted","nameLocation":"18291:10:25","nodeType":"VariableDeclaration","scope":5526,"src":"18284:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5505,"name":"int240","nodeType":"ElementaryTypeName","src":"18284:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18283:19:25"},"scope":6311,"src":"18229:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5551,"nodeType":"Block","src":"18850:150:25","statements":[{"expression":{"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"18860:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"18880:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18873:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5535,"name":"int232","nodeType":"ElementaryTypeName","src":"18873:6:25","typeDescriptions":{}}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18873:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18860:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5540,"nodeType":"ExpressionStatement","src":"18860:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"18900:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"18914:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18900:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5550,"nodeType":"IfStatement","src":"18896:98:25","trueBody":{"id":5549,"nodeType":"Block","src":"18921:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"18977:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5544,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"18942:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18942:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5548,"nodeType":"RevertStatement","src":"18935:48:25"}]}}]},"documentation":{"id":5527,"nodeType":"StructuredDocumentation","src":"18459:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5552,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18785:8:25","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"value","nameLocation":"18801:5:25","nodeType":"VariableDeclaration","scope":5552,"src":"18794:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5528,"name":"int256","nodeType":"ElementaryTypeName","src":"18794:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18793:14:25"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"downcasted","nameLocation":"18838:10:25","nodeType":"VariableDeclaration","scope":5552,"src":"18831:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5531,"name":"int232","nodeType":"ElementaryTypeName","src":"18831:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18830:19:25"},"scope":6311,"src":"18776:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5577,"nodeType":"Block","src":"19397:150:25","statements":[{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"19407:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"19427:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19420:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5561,"name":"int224","nodeType":"ElementaryTypeName","src":"19420:6:25","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19420:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19407:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5566,"nodeType":"ExpressionStatement","src":"19407:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"19447:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"19461:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19447:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5576,"nodeType":"IfStatement","src":"19443:98:25","trueBody":{"id":5575,"nodeType":"Block","src":"19468:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19519:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"19524:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5570,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"19489:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19489:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5574,"nodeType":"RevertStatement","src":"19482:48:25"}]}}]},"documentation":{"id":5553,"nodeType":"StructuredDocumentation","src":"19006:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19332:8:25","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5555,"mutability":"mutable","name":"value","nameLocation":"19348:5:25","nodeType":"VariableDeclaration","scope":5578,"src":"19341:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5554,"name":"int256","nodeType":"ElementaryTypeName","src":"19341:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19340:14:25"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"downcasted","nameLocation":"19385:10:25","nodeType":"VariableDeclaration","scope":5578,"src":"19378:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5557,"name":"int224","nodeType":"ElementaryTypeName","src":"19378:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19377:19:25"},"scope":6311,"src":"19323:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5603,"nodeType":"Block","src":"19944:150:25","statements":[{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"19954:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"19974:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19967:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5587,"name":"int216","nodeType":"ElementaryTypeName","src":"19967:6:25","typeDescriptions":{}}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19967:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19954:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5592,"nodeType":"ExpressionStatement","src":"19954:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"19994:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"20008:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19994:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5602,"nodeType":"IfStatement","src":"19990:98:25","trueBody":{"id":5601,"nodeType":"Block","src":"20015:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20066:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"20071:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5596,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"20036:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20036:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5600,"nodeType":"RevertStatement","src":"20029:48:25"}]}}]},"documentation":{"id":5579,"nodeType":"StructuredDocumentation","src":"19553:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5604,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19879:8:25","nodeType":"FunctionDefinition","parameters":{"id":5582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"value","nameLocation":"19895:5:25","nodeType":"VariableDeclaration","scope":5604,"src":"19888:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5580,"name":"int256","nodeType":"ElementaryTypeName","src":"19888:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19887:14:25"},"returnParameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"downcasted","nameLocation":"19932:10:25","nodeType":"VariableDeclaration","scope":5604,"src":"19925:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5583,"name":"int216","nodeType":"ElementaryTypeName","src":"19925:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19924:19:25"},"scope":6311,"src":"19870:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5629,"nodeType":"Block","src":"20491:150:25","statements":[{"expression":{"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"20501:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"20521:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20514:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5613,"name":"int208","nodeType":"ElementaryTypeName","src":"20514:6:25","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20514:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20501:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5618,"nodeType":"ExpressionStatement","src":"20501:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"20541:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"20555:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20541:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5628,"nodeType":"IfStatement","src":"20537:98:25","trueBody":{"id":5627,"nodeType":"Block","src":"20562:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20613:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"20618:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5622,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"20583:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20583:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"RevertStatement","src":"20576:48:25"}]}}]},"documentation":{"id":5605,"nodeType":"StructuredDocumentation","src":"20100:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5630,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20426:8:25","nodeType":"FunctionDefinition","parameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"value","nameLocation":"20442:5:25","nodeType":"VariableDeclaration","scope":5630,"src":"20435:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5606,"name":"int256","nodeType":"ElementaryTypeName","src":"20435:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20434:14:25"},"returnParameters":{"id":5611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"downcasted","nameLocation":"20479:10:25","nodeType":"VariableDeclaration","scope":5630,"src":"20472:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5609,"name":"int208","nodeType":"ElementaryTypeName","src":"20472:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20471:19:25"},"scope":6311,"src":"20417:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5655,"nodeType":"Block","src":"21038:150:25","statements":[{"expression":{"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"21048:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"21068:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21061:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5639,"name":"int200","nodeType":"ElementaryTypeName","src":"21061:6:25","typeDescriptions":{}}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21061:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21048:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5644,"nodeType":"ExpressionStatement","src":"21048:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"21088:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"21102:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21088:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5654,"nodeType":"IfStatement","src":"21084:98:25","trueBody":{"id":5653,"nodeType":"Block","src":"21109:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21160:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"21165:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"21130:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21130:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5652,"nodeType":"RevertStatement","src":"21123:48:25"}]}}]},"documentation":{"id":5631,"nodeType":"StructuredDocumentation","src":"20647:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20973:8:25","nodeType":"FunctionDefinition","parameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"value","nameLocation":"20989:5:25","nodeType":"VariableDeclaration","scope":5656,"src":"20982:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5632,"name":"int256","nodeType":"ElementaryTypeName","src":"20982:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20981:14:25"},"returnParameters":{"id":5637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"downcasted","nameLocation":"21026:10:25","nodeType":"VariableDeclaration","scope":5656,"src":"21019:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5635,"name":"int200","nodeType":"ElementaryTypeName","src":"21019:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21018:19:25"},"scope":6311,"src":"20964:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5681,"nodeType":"Block","src":"21585:150:25","statements":[{"expression":{"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"21595:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"21615:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21608:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5665,"name":"int192","nodeType":"ElementaryTypeName","src":"21608:6:25","typeDescriptions":{}}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21608:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21595:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5670,"nodeType":"ExpressionStatement","src":"21595:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"21635:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"21649:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21635:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5680,"nodeType":"IfStatement","src":"21631:98:25","trueBody":{"id":5679,"nodeType":"Block","src":"21656:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21707:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"21712:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"21677:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21677:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5678,"nodeType":"RevertStatement","src":"21670:48:25"}]}}]},"documentation":{"id":5657,"nodeType":"StructuredDocumentation","src":"21194:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21520:8:25","nodeType":"FunctionDefinition","parameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"mutability":"mutable","name":"value","nameLocation":"21536:5:25","nodeType":"VariableDeclaration","scope":5682,"src":"21529:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5658,"name":"int256","nodeType":"ElementaryTypeName","src":"21529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21528:14:25"},"returnParameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"downcasted","nameLocation":"21573:10:25","nodeType":"VariableDeclaration","scope":5682,"src":"21566:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5661,"name":"int192","nodeType":"ElementaryTypeName","src":"21566:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21565:19:25"},"scope":6311,"src":"21511:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5707,"nodeType":"Block","src":"22132:150:25","statements":[{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22142:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"22162:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22155:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5691,"name":"int184","nodeType":"ElementaryTypeName","src":"22155:6:25","typeDescriptions":{}}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22155:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22142:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5696,"nodeType":"ExpressionStatement","src":"22142:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"22182:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"22196:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22182:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5706,"nodeType":"IfStatement","src":"22178:98:25","trueBody":{"id":5705,"nodeType":"Block","src":"22203:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22254:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"22259:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"22224:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22224:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5704,"nodeType":"RevertStatement","src":"22217:48:25"}]}}]},"documentation":{"id":5683,"nodeType":"StructuredDocumentation","src":"21741:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22067:8:25","nodeType":"FunctionDefinition","parameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"value","nameLocation":"22083:5:25","nodeType":"VariableDeclaration","scope":5708,"src":"22076:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5684,"name":"int256","nodeType":"ElementaryTypeName","src":"22076:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22075:14:25"},"returnParameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"downcasted","nameLocation":"22120:10:25","nodeType":"VariableDeclaration","scope":5708,"src":"22113:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5687,"name":"int184","nodeType":"ElementaryTypeName","src":"22113:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22112:19:25"},"scope":6311,"src":"22058:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"22679:150:25","statements":[{"expression":{"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22689:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"22709:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22702:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5717,"name":"int176","nodeType":"ElementaryTypeName","src":"22702:6:25","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22702:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22689:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5722,"nodeType":"ExpressionStatement","src":"22689:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"22729:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"22743:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22729:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5732,"nodeType":"IfStatement","src":"22725:98:25","trueBody":{"id":5731,"nodeType":"Block","src":"22750:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22801:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"22806:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"22771:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22771:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5730,"nodeType":"RevertStatement","src":"22764:48:25"}]}}]},"documentation":{"id":5709,"nodeType":"StructuredDocumentation","src":"22288:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22614:8:25","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"value","nameLocation":"22630:5:25","nodeType":"VariableDeclaration","scope":5734,"src":"22623:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5710,"name":"int256","nodeType":"ElementaryTypeName","src":"22623:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22622:14:25"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"downcasted","nameLocation":"22667:10:25","nodeType":"VariableDeclaration","scope":5734,"src":"22660:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5713,"name":"int176","nodeType":"ElementaryTypeName","src":"22660:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22659:19:25"},"scope":6311,"src":"22605:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5759,"nodeType":"Block","src":"23226:150:25","statements":[{"expression":{"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"23236:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"23256:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23249:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5743,"name":"int168","nodeType":"ElementaryTypeName","src":"23249:6:25","typeDescriptions":{}}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23249:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23236:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5748,"nodeType":"ExpressionStatement","src":"23236:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"23276:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"23290:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23276:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5758,"nodeType":"IfStatement","src":"23272:98:25","trueBody":{"id":5757,"nodeType":"Block","src":"23297:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23348:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"23353:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"23318:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23318:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5756,"nodeType":"RevertStatement","src":"23311:48:25"}]}}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"22835:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23161:8:25","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"23177:5:25","nodeType":"VariableDeclaration","scope":5760,"src":"23170:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5736,"name":"int256","nodeType":"ElementaryTypeName","src":"23170:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23169:14:25"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"downcasted","nameLocation":"23214:10:25","nodeType":"VariableDeclaration","scope":5760,"src":"23207:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5739,"name":"int168","nodeType":"ElementaryTypeName","src":"23207:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23206:19:25"},"scope":6311,"src":"23152:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5785,"nodeType":"Block","src":"23773:150:25","statements":[{"expression":{"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"23783:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"23803:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23796:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5769,"name":"int160","nodeType":"ElementaryTypeName","src":"23796:6:25","typeDescriptions":{}}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23796:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23783:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5774,"nodeType":"ExpressionStatement","src":"23783:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"23823:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"23837:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23823:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5784,"nodeType":"IfStatement","src":"23819:98:25","trueBody":{"id":5783,"nodeType":"Block","src":"23844:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23895:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5763,"src":"23900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"23865:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23865:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5782,"nodeType":"RevertStatement","src":"23858:48:25"}]}}]},"documentation":{"id":5761,"nodeType":"StructuredDocumentation","src":"23382:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23708:8:25","nodeType":"FunctionDefinition","parameters":{"id":5764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5763,"mutability":"mutable","name":"value","nameLocation":"23724:5:25","nodeType":"VariableDeclaration","scope":5786,"src":"23717:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5762,"name":"int256","nodeType":"ElementaryTypeName","src":"23717:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23716:14:25"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"downcasted","nameLocation":"23761:10:25","nodeType":"VariableDeclaration","scope":5786,"src":"23754:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5765,"name":"int160","nodeType":"ElementaryTypeName","src":"23754:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23753:19:25"},"scope":6311,"src":"23699:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5811,"nodeType":"Block","src":"24320:150:25","statements":[{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"24330:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"24350:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24343:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5795,"name":"int152","nodeType":"ElementaryTypeName","src":"24343:6:25","typeDescriptions":{}}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24343:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24330:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5800,"nodeType":"ExpressionStatement","src":"24330:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"24370:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"24384:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24370:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5810,"nodeType":"IfStatement","src":"24366:98:25","trueBody":{"id":5809,"nodeType":"Block","src":"24391:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24442:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"24447:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"24412:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24412:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5808,"nodeType":"RevertStatement","src":"24405:48:25"}]}}]},"documentation":{"id":5787,"nodeType":"StructuredDocumentation","src":"23929:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24255:8:25","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"value","nameLocation":"24271:5:25","nodeType":"VariableDeclaration","scope":5812,"src":"24264:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5788,"name":"int256","nodeType":"ElementaryTypeName","src":"24264:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24263:14:25"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"downcasted","nameLocation":"24308:10:25","nodeType":"VariableDeclaration","scope":5812,"src":"24301:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5791,"name":"int152","nodeType":"ElementaryTypeName","src":"24301:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24300:19:25"},"scope":6311,"src":"24246:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"24867:150:25","statements":[{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"24877:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"24897:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24890:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5821,"name":"int144","nodeType":"ElementaryTypeName","src":"24890:6:25","typeDescriptions":{}}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24890:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24877:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5826,"nodeType":"ExpressionStatement","src":"24877:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"24917:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"24931:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24917:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5836,"nodeType":"IfStatement","src":"24913:98:25","trueBody":{"id":5835,"nodeType":"Block","src":"24938:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24989:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"24994:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"24959:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24959:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"RevertStatement","src":"24952:48:25"}]}}]},"documentation":{"id":5813,"nodeType":"StructuredDocumentation","src":"24476:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24802:8:25","nodeType":"FunctionDefinition","parameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"value","nameLocation":"24818:5:25","nodeType":"VariableDeclaration","scope":5838,"src":"24811:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5814,"name":"int256","nodeType":"ElementaryTypeName","src":"24811:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24810:14:25"},"returnParameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"downcasted","nameLocation":"24855:10:25","nodeType":"VariableDeclaration","scope":5838,"src":"24848:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5817,"name":"int144","nodeType":"ElementaryTypeName","src":"24848:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24847:19:25"},"scope":6311,"src":"24793:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5863,"nodeType":"Block","src":"25414:150:25","statements":[{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"25424:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"25444:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25437:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5847,"name":"int136","nodeType":"ElementaryTypeName","src":"25437:6:25","typeDescriptions":{}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25437:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25424:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5852,"nodeType":"ExpressionStatement","src":"25424:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"25464:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"25478:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25464:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5862,"nodeType":"IfStatement","src":"25460:98:25","trueBody":{"id":5861,"nodeType":"Block","src":"25485:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25536:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"25541:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"25506:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25506:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5860,"nodeType":"RevertStatement","src":"25499:48:25"}]}}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"25023:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25349:8:25","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"25365:5:25","nodeType":"VariableDeclaration","scope":5864,"src":"25358:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5840,"name":"int256","nodeType":"ElementaryTypeName","src":"25358:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25357:14:25"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"downcasted","nameLocation":"25402:10:25","nodeType":"VariableDeclaration","scope":5864,"src":"25395:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5843,"name":"int136","nodeType":"ElementaryTypeName","src":"25395:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25394:19:25"},"scope":6311,"src":"25340:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5889,"nodeType":"Block","src":"25961:150:25","statements":[{"expression":{"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"25971:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"25991:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25984:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5873,"name":"int128","nodeType":"ElementaryTypeName","src":"25984:6:25","typeDescriptions":{}}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25984:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25971:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5878,"nodeType":"ExpressionStatement","src":"25971:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5870,"src":"26011:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"26025:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26011:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5888,"nodeType":"IfStatement","src":"26007:98:25","trueBody":{"id":5887,"nodeType":"Block","src":"26032:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26083:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"26088:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"26053:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26053:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5886,"nodeType":"RevertStatement","src":"26046:48:25"}]}}]},"documentation":{"id":5865,"nodeType":"StructuredDocumentation","src":"25570:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25896:8:25","nodeType":"FunctionDefinition","parameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"value","nameLocation":"25912:5:25","nodeType":"VariableDeclaration","scope":5890,"src":"25905:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5866,"name":"int256","nodeType":"ElementaryTypeName","src":"25905:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25904:14:25"},"returnParameters":{"id":5871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5870,"mutability":"mutable","name":"downcasted","nameLocation":"25949:10:25","nodeType":"VariableDeclaration","scope":5890,"src":"25942:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5869,"name":"int128","nodeType":"ElementaryTypeName","src":"25942:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25941:19:25"},"scope":6311,"src":"25887:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5915,"nodeType":"Block","src":"26508:150:25","statements":[{"expression":{"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26518:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"26538:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26531:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5899,"name":"int120","nodeType":"ElementaryTypeName","src":"26531:6:25","typeDescriptions":{}}},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26531:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26518:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5904,"nodeType":"ExpressionStatement","src":"26518:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26558:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"26572:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26558:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5914,"nodeType":"IfStatement","src":"26554:98:25","trueBody":{"id":5913,"nodeType":"Block","src":"26579:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26630:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"26635:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"26600:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26600:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5912,"nodeType":"RevertStatement","src":"26593:48:25"}]}}]},"documentation":{"id":5891,"nodeType":"StructuredDocumentation","src":"26117:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26443:8:25","nodeType":"FunctionDefinition","parameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"value","nameLocation":"26459:5:25","nodeType":"VariableDeclaration","scope":5916,"src":"26452:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5892,"name":"int256","nodeType":"ElementaryTypeName","src":"26452:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26451:14:25"},"returnParameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5896,"mutability":"mutable","name":"downcasted","nameLocation":"26496:10:25","nodeType":"VariableDeclaration","scope":5916,"src":"26489:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5895,"name":"int120","nodeType":"ElementaryTypeName","src":"26489:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26488:19:25"},"scope":6311,"src":"26434:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5941,"nodeType":"Block","src":"27055:150:25","statements":[{"expression":{"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"27065:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"27085:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27078:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5925,"name":"int112","nodeType":"ElementaryTypeName","src":"27078:6:25","typeDescriptions":{}}},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27078:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27065:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5930,"nodeType":"ExpressionStatement","src":"27065:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"27105:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"27119:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27105:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"27101:98:25","trueBody":{"id":5939,"nodeType":"Block","src":"27126:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27177:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"27182:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"27147:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27147:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5938,"nodeType":"RevertStatement","src":"27140:48:25"}]}}]},"documentation":{"id":5917,"nodeType":"StructuredDocumentation","src":"26664:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26990:8:25","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"value","nameLocation":"27006:5:25","nodeType":"VariableDeclaration","scope":5942,"src":"26999:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5918,"name":"int256","nodeType":"ElementaryTypeName","src":"26999:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26998:14:25"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"downcasted","nameLocation":"27043:10:25","nodeType":"VariableDeclaration","scope":5942,"src":"27036:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5921,"name":"int112","nodeType":"ElementaryTypeName","src":"27036:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27035:19:25"},"scope":6311,"src":"26981:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5967,"nodeType":"Block","src":"27602:150:25","statements":[{"expression":{"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"27612:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"27632:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27625:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5951,"name":"int104","nodeType":"ElementaryTypeName","src":"27625:6:25","typeDescriptions":{}}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27625:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27612:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5956,"nodeType":"ExpressionStatement","src":"27612:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"27652:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"27666:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27652:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5966,"nodeType":"IfStatement","src":"27648:98:25","trueBody":{"id":5965,"nodeType":"Block","src":"27673:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27724:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5945,"src":"27729:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"27694:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27694:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5964,"nodeType":"RevertStatement","src":"27687:48:25"}]}}]},"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"27211:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27537:8:25","nodeType":"FunctionDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"value","nameLocation":"27553:5:25","nodeType":"VariableDeclaration","scope":5968,"src":"27546:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5944,"name":"int256","nodeType":"ElementaryTypeName","src":"27546:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27545:14:25"},"returnParameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5948,"mutability":"mutable","name":"downcasted","nameLocation":"27590:10:25","nodeType":"VariableDeclaration","scope":5968,"src":"27583:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5947,"name":"int104","nodeType":"ElementaryTypeName","src":"27583:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27582:19:25"},"scope":6311,"src":"27528:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5993,"nodeType":"Block","src":"28142:148:25","statements":[{"expression":{"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"28152:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"28171:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28165:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5977,"name":"int96","nodeType":"ElementaryTypeName","src":"28165:5:25","typeDescriptions":{}}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28165:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28152:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5982,"nodeType":"ExpressionStatement","src":"28152:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"28191:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"28205:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28191:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5992,"nodeType":"IfStatement","src":"28187:97:25","trueBody":{"id":5991,"nodeType":"Block","src":"28212:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28263:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"28267:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"28233:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28233:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5990,"nodeType":"RevertStatement","src":"28226:47:25"}]}}]},"documentation":{"id":5969,"nodeType":"StructuredDocumentation","src":"27758:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28079:7:25","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"value","nameLocation":"28094:5:25","nodeType":"VariableDeclaration","scope":5994,"src":"28087:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5970,"name":"int256","nodeType":"ElementaryTypeName","src":"28087:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28086:14:25"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"downcasted","nameLocation":"28130:10:25","nodeType":"VariableDeclaration","scope":5994,"src":"28124:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5973,"name":"int96","nodeType":"ElementaryTypeName","src":"28124:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28123:18:25"},"scope":6311,"src":"28070:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6019,"nodeType":"Block","src":"28680:148:25","statements":[{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"28690:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"28709:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28703:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6003,"name":"int88","nodeType":"ElementaryTypeName","src":"28703:5:25","typeDescriptions":{}}},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28703:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28690:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6008,"nodeType":"ExpressionStatement","src":"28690:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6000,"src":"28729:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"28743:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28729:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6018,"nodeType":"IfStatement","src":"28725:97:25","trueBody":{"id":6017,"nodeType":"Block","src":"28750:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28801:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"28805:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"28771:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28771:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"RevertStatement","src":"28764:47:25"}]}}]},"documentation":{"id":5995,"nodeType":"StructuredDocumentation","src":"28296:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28617:7:25","nodeType":"FunctionDefinition","parameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"value","nameLocation":"28632:5:25","nodeType":"VariableDeclaration","scope":6020,"src":"28625:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5996,"name":"int256","nodeType":"ElementaryTypeName","src":"28625:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28624:14:25"},"returnParameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"downcasted","nameLocation":"28668:10:25","nodeType":"VariableDeclaration","scope":6020,"src":"28662:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5999,"name":"int88","nodeType":"ElementaryTypeName","src":"28662:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28661:18:25"},"scope":6311,"src":"28608:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6045,"nodeType":"Block","src":"29218:148:25","statements":[{"expression":{"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"29228:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"29247:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29241:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6029,"name":"int80","nodeType":"ElementaryTypeName","src":"29241:5:25","typeDescriptions":{}}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29241:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29228:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6034,"nodeType":"ExpressionStatement","src":"29228:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"29267:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"29281:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29267:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6044,"nodeType":"IfStatement","src":"29263:97:25","trueBody":{"id":6043,"nodeType":"Block","src":"29288:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29339:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"29343:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"29309:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29309:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6042,"nodeType":"RevertStatement","src":"29302:47:25"}]}}]},"documentation":{"id":6021,"nodeType":"StructuredDocumentation","src":"28834:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29155:7:25","nodeType":"FunctionDefinition","parameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"value","nameLocation":"29170:5:25","nodeType":"VariableDeclaration","scope":6046,"src":"29163:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6022,"name":"int256","nodeType":"ElementaryTypeName","src":"29163:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29162:14:25"},"returnParameters":{"id":6027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6026,"mutability":"mutable","name":"downcasted","nameLocation":"29206:10:25","nodeType":"VariableDeclaration","scope":6046,"src":"29200:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6025,"name":"int80","nodeType":"ElementaryTypeName","src":"29200:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29199:18:25"},"scope":6311,"src":"29146:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6071,"nodeType":"Block","src":"29756:148:25","statements":[{"expression":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"29766:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"29785:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29779:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6055,"name":"int72","nodeType":"ElementaryTypeName","src":"29779:5:25","typeDescriptions":{}}},"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29779:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29766:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6060,"nodeType":"ExpressionStatement","src":"29766:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6052,"src":"29805:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"29819:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29805:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6070,"nodeType":"IfStatement","src":"29801:97:25","trueBody":{"id":6069,"nodeType":"Block","src":"29826:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29877:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"29881:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"29847:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29847:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6068,"nodeType":"RevertStatement","src":"29840:47:25"}]}}]},"documentation":{"id":6047,"nodeType":"StructuredDocumentation","src":"29372:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29693:7:25","nodeType":"FunctionDefinition","parameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"value","nameLocation":"29708:5:25","nodeType":"VariableDeclaration","scope":6072,"src":"29701:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6048,"name":"int256","nodeType":"ElementaryTypeName","src":"29701:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29700:14:25"},"returnParameters":{"id":6053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6052,"mutability":"mutable","name":"downcasted","nameLocation":"29744:10:25","nodeType":"VariableDeclaration","scope":6072,"src":"29738:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6051,"name":"int72","nodeType":"ElementaryTypeName","src":"29738:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29737:18:25"},"scope":6311,"src":"29684:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6097,"nodeType":"Block","src":"30294:148:25","statements":[{"expression":{"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"30304:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"30323:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30317:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6081,"name":"int64","nodeType":"ElementaryTypeName","src":"30317:5:25","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30317:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30304:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6086,"nodeType":"ExpressionStatement","src":"30304:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6078,"src":"30343:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"30357:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30343:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6096,"nodeType":"IfStatement","src":"30339:97:25","trueBody":{"id":6095,"nodeType":"Block","src":"30364:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30415:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"30419:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"30385:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30385:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6094,"nodeType":"RevertStatement","src":"30378:47:25"}]}}]},"documentation":{"id":6073,"nodeType":"StructuredDocumentation","src":"29910:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30231:7:25","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"value","nameLocation":"30246:5:25","nodeType":"VariableDeclaration","scope":6098,"src":"30239:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6074,"name":"int256","nodeType":"ElementaryTypeName","src":"30239:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30238:14:25"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"downcasted","nameLocation":"30282:10:25","nodeType":"VariableDeclaration","scope":6098,"src":"30276:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6077,"name":"int64","nodeType":"ElementaryTypeName","src":"30276:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30275:18:25"},"scope":6311,"src":"30222:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6123,"nodeType":"Block","src":"30832:148:25","statements":[{"expression":{"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"30842:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"30861:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30855:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6107,"name":"int56","nodeType":"ElementaryTypeName","src":"30855:5:25","typeDescriptions":{}}},"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30855:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30842:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6112,"nodeType":"ExpressionStatement","src":"30842:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"30881:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"30895:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30881:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6122,"nodeType":"IfStatement","src":"30877:97:25","trueBody":{"id":6121,"nodeType":"Block","src":"30902:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30953:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"30957:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"30923:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6120,"nodeType":"RevertStatement","src":"30916:47:25"}]}}]},"documentation":{"id":6099,"nodeType":"StructuredDocumentation","src":"30448:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30769:7:25","nodeType":"FunctionDefinition","parameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"value","nameLocation":"30784:5:25","nodeType":"VariableDeclaration","scope":6124,"src":"30777:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6100,"name":"int256","nodeType":"ElementaryTypeName","src":"30777:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30776:14:25"},"returnParameters":{"id":6105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"downcasted","nameLocation":"30820:10:25","nodeType":"VariableDeclaration","scope":6124,"src":"30814:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6103,"name":"int56","nodeType":"ElementaryTypeName","src":"30814:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30813:18:25"},"scope":6311,"src":"30760:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6149,"nodeType":"Block","src":"31370:148:25","statements":[{"expression":{"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"31380:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"31399:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31393:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6133,"name":"int48","nodeType":"ElementaryTypeName","src":"31393:5:25","typeDescriptions":{}}},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31393:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31380:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6138,"nodeType":"ExpressionStatement","src":"31380:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"31419:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"31433:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31419:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6148,"nodeType":"IfStatement","src":"31415:97:25","trueBody":{"id":6147,"nodeType":"Block","src":"31440:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31491:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"31495:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"31461:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6146,"nodeType":"RevertStatement","src":"31454:47:25"}]}}]},"documentation":{"id":6125,"nodeType":"StructuredDocumentation","src":"30986:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31307:7:25","nodeType":"FunctionDefinition","parameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"value","nameLocation":"31322:5:25","nodeType":"VariableDeclaration","scope":6150,"src":"31315:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6126,"name":"int256","nodeType":"ElementaryTypeName","src":"31315:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31314:14:25"},"returnParameters":{"id":6131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6130,"mutability":"mutable","name":"downcasted","nameLocation":"31358:10:25","nodeType":"VariableDeclaration","scope":6150,"src":"31352:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6129,"name":"int48","nodeType":"ElementaryTypeName","src":"31352:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31351:18:25"},"scope":6311,"src":"31298:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6175,"nodeType":"Block","src":"31908:148:25","statements":[{"expression":{"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"31918:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"31937:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31931:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6159,"name":"int40","nodeType":"ElementaryTypeName","src":"31931:5:25","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31931:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31918:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6164,"nodeType":"ExpressionStatement","src":"31918:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"31957:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"31971:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31957:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6174,"nodeType":"IfStatement","src":"31953:97:25","trueBody":{"id":6173,"nodeType":"Block","src":"31978:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32029:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6153,"src":"32033:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"31999:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31999:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6172,"nodeType":"RevertStatement","src":"31992:47:25"}]}}]},"documentation":{"id":6151,"nodeType":"StructuredDocumentation","src":"31524:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31845:7:25","nodeType":"FunctionDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6153,"mutability":"mutable","name":"value","nameLocation":"31860:5:25","nodeType":"VariableDeclaration","scope":6176,"src":"31853:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6152,"name":"int256","nodeType":"ElementaryTypeName","src":"31853:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31852:14:25"},"returnParameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"downcasted","nameLocation":"31896:10:25","nodeType":"VariableDeclaration","scope":6176,"src":"31890:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6155,"name":"int40","nodeType":"ElementaryTypeName","src":"31890:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31889:18:25"},"scope":6311,"src":"31836:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6201,"nodeType":"Block","src":"32446:148:25","statements":[{"expression":{"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"32456:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"32475:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32469:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6185,"name":"int32","nodeType":"ElementaryTypeName","src":"32469:5:25","typeDescriptions":{}}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32469:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32456:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6190,"nodeType":"ExpressionStatement","src":"32456:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"32495:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"32509:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32495:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6200,"nodeType":"IfStatement","src":"32491:97:25","trueBody":{"id":6199,"nodeType":"Block","src":"32516:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32567:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"32571:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"32537:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32537:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6198,"nodeType":"RevertStatement","src":"32530:47:25"}]}}]},"documentation":{"id":6177,"nodeType":"StructuredDocumentation","src":"32062:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32383:7:25","nodeType":"FunctionDefinition","parameters":{"id":6180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6179,"mutability":"mutable","name":"value","nameLocation":"32398:5:25","nodeType":"VariableDeclaration","scope":6202,"src":"32391:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6178,"name":"int256","nodeType":"ElementaryTypeName","src":"32391:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32390:14:25"},"returnParameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"downcasted","nameLocation":"32434:10:25","nodeType":"VariableDeclaration","scope":6202,"src":"32428:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6181,"name":"int32","nodeType":"ElementaryTypeName","src":"32428:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32427:18:25"},"scope":6311,"src":"32374:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"32984:148:25","statements":[{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"32994:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"33013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33007:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6211,"name":"int24","nodeType":"ElementaryTypeName","src":"33007:5:25","typeDescriptions":{}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33007:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32994:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6216,"nodeType":"ExpressionStatement","src":"32994:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6208,"src":"33033:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"33047:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33033:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6226,"nodeType":"IfStatement","src":"33029:97:25","trueBody":{"id":6225,"nodeType":"Block","src":"33054:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33105:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"33109:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"33075:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33075:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6224,"nodeType":"RevertStatement","src":"33068:47:25"}]}}]},"documentation":{"id":6203,"nodeType":"StructuredDocumentation","src":"32600:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32921:7:25","nodeType":"FunctionDefinition","parameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"value","nameLocation":"32936:5:25","nodeType":"VariableDeclaration","scope":6228,"src":"32929:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6204,"name":"int256","nodeType":"ElementaryTypeName","src":"32929:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32928:14:25"},"returnParameters":{"id":6209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6208,"mutability":"mutable","name":"downcasted","nameLocation":"32972:10:25","nodeType":"VariableDeclaration","scope":6228,"src":"32966:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6207,"name":"int24","nodeType":"ElementaryTypeName","src":"32966:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32965:18:25"},"scope":6311,"src":"32912:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6253,"nodeType":"Block","src":"33522:148:25","statements":[{"expression":{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"33532:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"33551:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33545:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6237,"name":"int16","nodeType":"ElementaryTypeName","src":"33545:5:25","typeDescriptions":{}}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33545:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33532:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6242,"nodeType":"ExpressionStatement","src":"33532:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"33571:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"33585:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33571:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"33567:97:25","trueBody":{"id":6251,"nodeType":"Block","src":"33592:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33643:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"33647:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"33613:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33613:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6250,"nodeType":"RevertStatement","src":"33606:47:25"}]}}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"33138:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33459:7:25","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"value","nameLocation":"33474:5:25","nodeType":"VariableDeclaration","scope":6254,"src":"33467:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6230,"name":"int256","nodeType":"ElementaryTypeName","src":"33467:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33466:14:25"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"downcasted","nameLocation":"33510:10:25","nodeType":"VariableDeclaration","scope":6254,"src":"33504:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6233,"name":"int16","nodeType":"ElementaryTypeName","src":"33504:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33503:18:25"},"scope":6311,"src":"33450:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6279,"nodeType":"Block","src":"34053:146:25","statements":[{"expression":{"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"34063:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"34081:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34076:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6263,"name":"int8","nodeType":"ElementaryTypeName","src":"34076:4:25","typeDescriptions":{}}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34076:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34063:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6268,"nodeType":"ExpressionStatement","src":"34063:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6260,"src":"34101:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"34115:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34101:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6278,"nodeType":"IfStatement","src":"34097:96:25","trueBody":{"id":6277,"nodeType":"Block","src":"34122:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34173:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"34176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"34143:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34143:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6276,"nodeType":"RevertStatement","src":"34136:46:25"}]}}]},"documentation":{"id":6255,"nodeType":"StructuredDocumentation","src":"33676:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33992:6:25","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"value","nameLocation":"34006:5:25","nodeType":"VariableDeclaration","scope":6280,"src":"33999:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6256,"name":"int256","nodeType":"ElementaryTypeName","src":"33999:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33998:14:25"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"downcasted","nameLocation":"34041:10:25","nodeType":"VariableDeclaration","scope":6280,"src":"34036:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6259,"name":"int8","nodeType":"ElementaryTypeName","src":"34036:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34035:17:25"},"scope":6311,"src":"33983:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6309,"nodeType":"Block","src":"34439:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"34552:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34573:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6292,"name":"int256","nodeType":"ElementaryTypeName","src":"34573:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6291,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34568:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34568:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34581:3:25","memberName":"max","nodeType":"MemberAccess","src":"34568:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34560:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6289,"name":"uint256","nodeType":"ElementaryTypeName","src":"34560:7:25","typeDescriptions":{}}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34560:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34552:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6303,"nodeType":"IfStatement","src":"34548:105:25","trueBody":{"id":6302,"nodeType":"Block","src":"34587:66:25","statements":[{"errorCall":{"arguments":[{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"34636:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"34608:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34608:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6301,"nodeType":"RevertStatement","src":"34601:41:25"}]}},{"expression":{"arguments":[{"id":6306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"34676:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34669:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6304,"name":"int256","nodeType":"ElementaryTypeName","src":"34669:6:25","typeDescriptions":{}}},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34669:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6287,"id":6308,"nodeType":"Return","src":"34662:20:25"}]},"documentation":{"id":6281,"nodeType":"StructuredDocumentation","src":"34205:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6310,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34384:8:25","nodeType":"FunctionDefinition","parameters":{"id":6284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6283,"mutability":"mutable","name":"value","nameLocation":"34401:5:25","nodeType":"VariableDeclaration","scope":6310,"src":"34393:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"34393:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34392:15:25"},"returnParameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6310,"src":"34431:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6285,"name":"int256","nodeType":"ElementaryTypeName","src":"34431:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34430:8:25"},"scope":6311,"src":"34375:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6312,"src":"764:33927:25","usedErrors":[4566,4571,4578,4583],"usedEvents":[]}],"src":"192:34500:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6416]},"id":6417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6313,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"135:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6416,"linearizedBaseContracts":[6416],"name":"SignedMath","nameLocation":"224:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6331,"nodeType":"Block","src":"376:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"393:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"397:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6328,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"405:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:26","trueExpression":{"id":6327,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"401:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6323,"id":6330,"nodeType":"Return","src":"386:20:26"}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"241:66:26","text":" @dev Returns the largest of two signed numbers."},"id":6332,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:26","nodeType":"FunctionDefinition","parameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"a","nameLocation":"332:1:26","nodeType":"VariableDeclaration","scope":6332,"src":"325:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6319,"mutability":"mutable","name":"b","nameLocation":"342:1:26","nodeType":"VariableDeclaration","scope":6332,"src":"335:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6318,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:26"},"returnParameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6332,"src":"368:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6321,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:26"},"scope":6416,"src":"312:101:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6349,"nodeType":"Block","src":"555:37:26","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"572:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6346,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"584:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:26","trueExpression":{"id":6345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"580:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6341,"id":6348,"nodeType":"Return","src":"565:20:26"}]},"documentation":{"id":6333,"nodeType":"StructuredDocumentation","src":"419:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":6350,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:26","nodeType":"FunctionDefinition","parameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"a","nameLocation":"511:1:26","nodeType":"VariableDeclaration","scope":6350,"src":"504:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6334,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6337,"mutability":"mutable","name":"b","nameLocation":"521:1:26","nodeType":"VariableDeclaration","scope":6350,"src":"514:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6336,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:26"},"returnParameters":{"id":6341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6350,"src":"547:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6339,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:26"},"scope":6416,"src":"491:101:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6393,"nodeType":"Block","src":"797:162:26","statements":[{"assignments":[6361],"declarations":[{"constant":false,"id":6361,"mutability":"mutable","name":"x","nameLocation":"866:1:26","nodeType":"VariableDeclaration","scope":6393,"src":"859:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6360,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6374,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"871:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"875:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"882:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"886:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"911:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6361,"src":"931:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:26","typeDescriptions":{}}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6376,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:26","typeDescriptions":{}}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"945:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"949:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6359,"id":6392,"nodeType":"Return","src":"904:48:26"}]},"documentation":{"id":6351,"nodeType":"StructuredDocumentation","src":"598:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:26","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"a","nameLocation":"753:1:26","nodeType":"VariableDeclaration","scope":6394,"src":"746:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6352,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6355,"mutability":"mutable","name":"b","nameLocation":"763:1:26","nodeType":"VariableDeclaration","scope":6394,"src":"756:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6354,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:26"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"789:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6357,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:26"},"scope":6416,"src":"729:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6414,"nodeType":"Block","src":"1103:158:26","statements":[{"id":6413,"nodeType":"UncheckedBlock","src":"1113:142:26","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1228:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:26","subExpression":{"id":6408,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1242:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:26","trueExpression":{"id":6407,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1237:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:26","typeDescriptions":{}}},"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6401,"id":6412,"nodeType":"Return","src":"1213:31:26"}]}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"965:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6415,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:26","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"n","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":6415,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:26"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6415,"src":"1094:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:26"},"scope":6416,"src":"1048:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6417,"src":"216:1047:26","usedErrors":[],"usedEvents":[]}],"src":"109:1155:26"},"id":26},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/Checkpoints.sol","exportedSymbols":{"Checkpoints":[7988],"Math":[4556]},"id":7989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6418,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"201:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":6420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7989,"sourceUnit":4557,"src":"227:38:27","symbolAliases":[{"foreign":{"id":6419,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"235:4:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Checkpoints","contractDependencies":[],"contractKind":"library","documentation":{"id":6421,"nodeType":"StructuredDocumentation","src":"267:400:27","text":" @dev This library defines the `Trace*` struct, for checkpointing values as they change at different points in\n time, and later looking up past values by block number. See {Votes} as an example.\n To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new\n checkpoint for the current transaction block using the {push} function."},"fullyImplemented":true,"id":7988,"linearizedBaseContracts":[7988],"name":"Checkpoints","nameLocation":"676:11:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"694:82:27","text":" @dev A value was attempted to be inserted on a past checkpoint."},"errorSelector":"2520601d","id":6424,"name":"CheckpointUnorderedInsertion","nameLocation":"787:28:27","nodeType":"ErrorDefinition","parameters":{"id":6423,"nodeType":"ParameterList","parameters":[],"src":"815:2:27"},"src":"781:37:27"},{"canonicalName":"Checkpoints.Trace224","id":6429,"members":[{"constant":false,"id":6428,"mutability":"mutable","name":"_checkpoints","nameLocation":"866:12:27","nodeType":"VariableDeclaration","scope":6429,"src":"850:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6426,"nodeType":"UserDefinedTypeName","pathNode":{"id":6425,"name":"Checkpoint224","nameLocations":["850:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"850:13:27"},"referencedDeclaration":6434,"src":"850:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6427,"nodeType":"ArrayTypeName","src":"850:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"}],"name":"Trace224","nameLocation":"831:8:27","nodeType":"StructDefinition","scope":7988,"src":"824:61:27","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint224","id":6434,"members":[{"constant":false,"id":6431,"mutability":"mutable","name":"_key","nameLocation":"929:4:27","nodeType":"VariableDeclaration","scope":6434,"src":"922:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6430,"name":"uint32","nodeType":"ElementaryTypeName","src":"922:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6433,"mutability":"mutable","name":"_value","nameLocation":"951:6:27","nodeType":"VariableDeclaration","scope":6434,"src":"943:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6432,"name":"uint224","nodeType":"ElementaryTypeName","src":"943:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint224","nameLocation":"898:13:27","nodeType":"StructDefinition","scope":7988,"src":"891:73:27","visibility":"public"},{"body":{"id":6456,"nodeType":"Block","src":"1377:62:27","statements":[{"expression":{"arguments":[{"expression":{"id":6450,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1402:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1407:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"1402:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6452,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1421:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"1426:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6449,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6826,7347,7868],"referencedDeclaration":6826,"src":"1394:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint224_$returns$_t_uint224_$_t_uint224_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint224) returns (uint224,uint224)"}},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":6448,"id":6455,"nodeType":"Return","src":"1387:45:27"}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"970:302:27","text":" @dev Pushes a (`key`, `value`) pair into a Trace224 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint32).max` key set will disable the\n library."},"id":6457,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1286:4:27","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"self","nameLocation":"1308:4:27","nodeType":"VariableDeclaration","scope":6457,"src":"1291:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6437,"nodeType":"UserDefinedTypeName","pathNode":{"id":6436,"name":"Trace224","nameLocations":["1291:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"1291:8:27"},"referencedDeclaration":6429,"src":"1291:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"key","nameLocation":"1321:3:27","nodeType":"VariableDeclaration","scope":6457,"src":"1314:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6439,"name":"uint32","nodeType":"ElementaryTypeName","src":"1314:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"value","nameLocation":"1334:5:27","nodeType":"VariableDeclaration","scope":6457,"src":"1326:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6441,"name":"uint224","nodeType":"ElementaryTypeName","src":"1326:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1290:50:27"},"returnParameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6457,"src":"1359:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6444,"name":"uint224","nodeType":"ElementaryTypeName","src":"1359:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6457,"src":"1368:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6446,"name":"uint224","nodeType":"ElementaryTypeName","src":"1368:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1358:18:27"},"scope":7988,"src":"1277:162:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6496,"nodeType":"Block","src":"1692:207:27","statements":[{"assignments":[6469],"declarations":[{"constant":false,"id":6469,"mutability":"mutable","name":"len","nameLocation":"1710:3:27","nodeType":"VariableDeclaration","scope":6496,"src":"1702:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6473,"initialValue":{"expression":{"expression":{"id":6470,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1716:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1721:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"1716:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1734:6:27","memberName":"length","nodeType":"MemberAccess","src":"1716:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1702:38:27"},{"assignments":[6475],"declarations":[{"constant":false,"id":6475,"mutability":"mutable","name":"pos","nameLocation":"1758:3:27","nodeType":"VariableDeclaration","scope":6496,"src":"1750:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6474,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6483,"initialValue":{"arguments":[{"expression":{"id":6477,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1783:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1788:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"1783:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6479,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"1802:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1807:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6481,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"1810:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6476,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6930,7451,7972],"referencedDeclaration":6930,"src":"1764:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"1831:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6485,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6469,"src":"1838:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1831:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6489,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"1862:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1867:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"1862:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6491,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"1881:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6488,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"1848:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1886:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"1848:44:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1831:61:27","trueExpression":{"hexValue":"30","id":6487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1844:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6467,"id":6495,"nodeType":"Return","src":"1824:68:27"}]},"documentation":{"id":6458,"nodeType":"StructuredDocumentation","src":"1445:154:27","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":6497,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"1613:11:27","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"self","nameLocation":"1642:4:27","nodeType":"VariableDeclaration","scope":6497,"src":"1625:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6460,"nodeType":"UserDefinedTypeName","pathNode":{"id":6459,"name":"Trace224","nameLocations":["1625:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"1625:8:27"},"referencedDeclaration":6429,"src":"1625:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6463,"mutability":"mutable","name":"key","nameLocation":"1655:3:27","nodeType":"VariableDeclaration","scope":6497,"src":"1648:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6462,"name":"uint32","nodeType":"ElementaryTypeName","src":"1648:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1624:35:27"},"returnParameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6497,"src":"1683:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6465,"name":"uint224","nodeType":"ElementaryTypeName","src":"1683:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"1682:9:27"},"scope":7988,"src":"1604:295:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"2154:209:27","statements":[{"assignments":[6509],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"len","nameLocation":"2172:3:27","nodeType":"VariableDeclaration","scope":6538,"src":"2164:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6513,"initialValue":{"expression":{"expression":{"id":6510,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2178:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2183:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"2178:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2196:6:27","memberName":"length","nodeType":"MemberAccess","src":"2178:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2164:38:27"},{"assignments":[6515],"declarations":[{"constant":false,"id":6515,"mutability":"mutable","name":"pos","nameLocation":"2220:3:27","nodeType":"VariableDeclaration","scope":6538,"src":"2212:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6514,"name":"uint256","nodeType":"ElementaryTypeName","src":"2212:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6523,"initialValue":{"arguments":[{"expression":{"id":6517,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2245:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2250:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"2245:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6519,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"2264:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2269:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6521,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"2272:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6516,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":6878,"src":"2226:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2212:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6524,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"2293:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2293:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6529,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"2322:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6530,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2327:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"2322:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6531,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"2341:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2347:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2341:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6528,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"2308:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2350:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"2308:48:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2293:63:27","trueExpression":{"hexValue":"30","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2304:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6507,"id":6537,"nodeType":"Return","src":"2286:70:27"}]},"documentation":{"id":6498,"nodeType":"StructuredDocumentation","src":"1905:156:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"2075:11:27","nodeType":"FunctionDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"self","nameLocation":"2104:4:27","nodeType":"VariableDeclaration","scope":6539,"src":"2087:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6500,"nodeType":"UserDefinedTypeName","pathNode":{"id":6499,"name":"Trace224","nameLocations":["2087:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"2087:8:27"},"referencedDeclaration":6429,"src":"2087:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6503,"mutability":"mutable","name":"key","nameLocation":"2117:3:27","nodeType":"VariableDeclaration","scope":6539,"src":"2110:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6502,"name":"uint32","nodeType":"ElementaryTypeName","src":"2110:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2086:35:27"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6539,"src":"2145:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6505,"name":"uint224","nodeType":"ElementaryTypeName","src":"2145:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2144:9:27"},"scope":7988,"src":"2066:297:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6623,"nodeType":"Block","src":"2762:512:27","statements":[{"assignments":[6551],"declarations":[{"constant":false,"id":6551,"mutability":"mutable","name":"len","nameLocation":"2780:3:27","nodeType":"VariableDeclaration","scope":6623,"src":"2772:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6555,"initialValue":{"expression":{"expression":{"id":6552,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"2786:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2791:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"2786:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:6:27","memberName":"length","nodeType":"MemberAccess","src":"2786:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2772:38:27"},{"assignments":[6557],"declarations":[{"constant":false,"id":6557,"mutability":"mutable","name":"low","nameLocation":"2829:3:27","nodeType":"VariableDeclaration","scope":6623,"src":"2821:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6559,"initialValue":{"hexValue":"30","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2821:15:27"},{"assignments":[6561],"declarations":[{"constant":false,"id":6561,"mutability":"mutable","name":"high","nameLocation":"2854:4:27","nodeType":"VariableDeclaration","scope":6623,"src":"2846:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6560,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6563,"initialValue":{"id":6562,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2861:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2846:18:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6564,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2879:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2879:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6598,"nodeType":"IfStatement","src":"2875:234:27","trueBody":{"id":6597,"nodeType":"Block","src":"2888:221:27","statements":[{"assignments":[6568],"declarations":[{"constant":false,"id":6568,"mutability":"mutable","name":"mid","nameLocation":"2910:3:27","nodeType":"VariableDeclaration","scope":6597,"src":"2902:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2902:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2916:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6572,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2932:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6570,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"2922:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"2922:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2916:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2902:34:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6576,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"2954:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":6578,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"2974:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2979:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"2974:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6580,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"2993:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6577,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"2960:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2998:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"2960:42:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2954:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6595,"nodeType":"Block","src":"3053:46:27","statements":[{"expression":{"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6589,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"3071:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"3077:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3083:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3077:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3071:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6594,"nodeType":"ExpressionStatement","src":"3071:13:27"}]},"id":6596,"nodeType":"IfStatement","src":"2950:149:27","trueBody":{"id":6588,"nodeType":"Block","src":"3004:43:27","statements":[{"expression":{"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6584,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3022:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6585,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"3029:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3022:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6587,"nodeType":"ExpressionStatement","src":"3022:10:27"}]}}]}},{"assignments":[6600],"declarations":[{"constant":false,"id":6600,"mutability":"mutable","name":"pos","nameLocation":"3127:3:27","nodeType":"VariableDeclaration","scope":6623,"src":"3119:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6608,"initialValue":{"arguments":[{"expression":{"id":6602,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"3152:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3157:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"3152:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"id":6604,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"3171:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6605,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"3176:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6606,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3181:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6601,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":6878,"src":"3133:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint32,uint256,uint256) view returns (uint256)"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3119:67:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"3204:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3211:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3204:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"3233:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3238:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"3233:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6600,"src":"3252:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6613,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"3219:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"3219:48:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3204:63:27","trueExpression":{"hexValue":"30","id":6612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3215:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6549,"id":6622,"nodeType":"Return","src":"3197:70:27"}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"2369:294:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":6624,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"2677:17:27","nodeType":"FunctionDefinition","parameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"self","nameLocation":"2712:4:27","nodeType":"VariableDeclaration","scope":6624,"src":"2695:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6542,"nodeType":"UserDefinedTypeName","pathNode":{"id":6541,"name":"Trace224","nameLocations":["2695:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"2695:8:27"},"referencedDeclaration":6429,"src":"2695:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6545,"mutability":"mutable","name":"key","nameLocation":"2725:3:27","nodeType":"VariableDeclaration","scope":6624,"src":"2718:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6544,"name":"uint32","nodeType":"ElementaryTypeName","src":"2718:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2694:35:27"},"returnParameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6624,"src":"2753:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6547,"name":"uint224","nodeType":"ElementaryTypeName","src":"2753:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2752:9:27"},"scope":7988,"src":"2668:606:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6653,"nodeType":"Block","src":"3465:135:27","statements":[{"assignments":[6634],"declarations":[{"constant":false,"id":6634,"mutability":"mutable","name":"pos","nameLocation":"3483:3:27","nodeType":"VariableDeclaration","scope":6653,"src":"3475:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6638,"initialValue":{"expression":{"expression":{"id":6635,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"3489:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"3489:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3507:6:27","memberName":"length","nodeType":"MemberAccess","src":"3489:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3475:38:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6639,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"3530:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3530:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":6644,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"3559:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3564:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"3559:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"3578:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3584:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3578:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6643,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"3545:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3545:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"3545:48:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3530:63:27","trueExpression":{"hexValue":"30","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3541:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6632,"id":6652,"nodeType":"Return","src":"3523:70:27"}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"3280:109:27","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"3403:6:27","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"self","nameLocation":"3427:4:27","nodeType":"VariableDeclaration","scope":6654,"src":"3410:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6627,"nodeType":"UserDefinedTypeName","pathNode":{"id":6626,"name":"Trace224","nameLocations":["3410:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"3410:8:27"},"referencedDeclaration":6429,"src":"3410:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3409:23:27"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6654,"src":"3456:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6630,"name":"uint224","nodeType":"ElementaryTypeName","src":"3456:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3455:9:27"},"scope":7988,"src":"3394:206:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6702,"nodeType":"Block","src":"3893:274:27","statements":[{"assignments":[6668],"declarations":[{"constant":false,"id":6668,"mutability":"mutable","name":"pos","nameLocation":"3911:3:27","nodeType":"VariableDeclaration","scope":6702,"src":"3903:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3903:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6672,"initialValue":{"expression":{"expression":{"id":6669,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"3917:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3922:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"3917:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3935:6:27","memberName":"length","nodeType":"MemberAccess","src":"3917:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3903:38:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"3955:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6700,"nodeType":"Block","src":"4016:145:27","statements":[{"assignments":[6684],"declarations":[{"constant":false,"id":6684,"mutability":"mutable","name":"ckpt","nameLocation":"4051:4:27","nodeType":"VariableDeclaration","scope":6700,"src":"4030:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6683,"nodeType":"UserDefinedTypeName","pathNode":{"id":6682,"name":"Checkpoint224","nameLocations":["4030:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"4030:13:27"},"referencedDeclaration":6434,"src":"4030:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":6692,"initialValue":{"arguments":[{"expression":{"id":6686,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"4072:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4077:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"4072:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6688,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6668,"src":"4091:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4097:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4091:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6685,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"4058:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4058:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4030:69:27"},{"expression":{"components":[{"hexValue":"74727565","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4121:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6694,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"4127:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4132:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"4127:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6696,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"4138:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4143:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"4138:11:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4120:30:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint32_$_t_uint224_$","typeString":"tuple(bool,uint32,uint224)"}},"functionReturnParameters":6666,"id":6699,"nodeType":"Return","src":"4113:37:27"}]},"id":6701,"nodeType":"IfStatement","src":"3951:210:27","trueBody":{"id":6681,"nodeType":"Block","src":"3965:45:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3986:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":6666,"id":6680,"nodeType":"Return","src":"3979:20:27"}]}}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"3606:168:27","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":6703,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"3788:16:27","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"self","nameLocation":"3822:4:27","nodeType":"VariableDeclaration","scope":6703,"src":"3805:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6657,"nodeType":"UserDefinedTypeName","pathNode":{"id":6656,"name":"Trace224","nameLocations":["3805:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"3805:8:27"},"referencedDeclaration":6429,"src":"3805:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"3804:23:27"},"returnParameters":{"id":6666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"exists","nameLocation":"3856:6:27","nodeType":"VariableDeclaration","scope":6703,"src":"3851:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6660,"name":"bool","nodeType":"ElementaryTypeName","src":"3851:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6663,"mutability":"mutable","name":"_key","nameLocation":"3871:4:27","nodeType":"VariableDeclaration","scope":6703,"src":"3864:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6662,"name":"uint32","nodeType":"ElementaryTypeName","src":"3864:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6665,"mutability":"mutable","name":"_value","nameLocation":"3885:6:27","nodeType":"VariableDeclaration","scope":6703,"src":"3877:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6664,"name":"uint224","nodeType":"ElementaryTypeName","src":"3877:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3850:42:27"},"scope":7988,"src":"3779:388:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6716,"nodeType":"Block","src":"4306:48:27","statements":[{"expression":{"expression":{"expression":{"id":6712,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"4323:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4328:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"4323:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:27","memberName":"length","nodeType":"MemberAccess","src":"4323:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6711,"id":6715,"nodeType":"Return","src":"4316:31:27"}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"4173:57:27","text":" @dev Returns the number of checkpoint."},"id":6717,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"4244:6:27","nodeType":"FunctionDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"self","nameLocation":"4268:4:27","nodeType":"VariableDeclaration","scope":6717,"src":"4251:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6706,"nodeType":"UserDefinedTypeName","pathNode":{"id":6705,"name":"Trace224","nameLocations":["4251:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"4251:8:27"},"referencedDeclaration":6429,"src":"4251:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"}],"src":"4250:23:27"},"returnParameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6717,"src":"4297:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4296:9:27"},"scope":7988,"src":"4235:119:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"4518:46:27","statements":[{"expression":{"baseExpression":{"expression":{"id":6729,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4535:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224 storage pointer"}},"id":6730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4540:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6428,"src":"4535:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage ref"}},"id":6732,"indexExpression":{"id":6731,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"4553:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4535:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage","typeString":"struct Checkpoints.Checkpoint224 storage ref"}},"functionReturnParameters":6728,"id":6733,"nodeType":"Return","src":"4528:29:27"}]},"documentation":{"id":6718,"nodeType":"StructuredDocumentation","src":"4360:61:27","text":" @dev Returns checkpoint at given position."},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"4435:2:27","nodeType":"FunctionDefinition","parameters":{"id":6724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"self","nameLocation":"4455:4:27","nodeType":"VariableDeclaration","scope":6735,"src":"4438:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"},"typeName":{"id":6720,"nodeType":"UserDefinedTypeName","pathNode":{"id":6719,"name":"Trace224","nameLocations":["4438:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6429,"src":"4438:8:27"},"referencedDeclaration":6429,"src":"4438:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace224_$6429_storage_ptr","typeString":"struct Checkpoints.Trace224"}},"visibility":"internal"},{"constant":false,"id":6723,"mutability":"mutable","name":"pos","nameLocation":"4468:3:27","nodeType":"VariableDeclaration","scope":6735,"src":"4461:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6722,"name":"uint32","nodeType":"ElementaryTypeName","src":"4461:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4437:35:27"},"returnParameters":{"id":6728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6735,"src":"4496:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6726,"nodeType":"UserDefinedTypeName","pathNode":{"id":6725,"name":"Checkpoint224","nameLocations":["4496:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"4496:13:27"},"referencedDeclaration":6434,"src":"4496:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"4495:22:27"},"scope":7988,"src":"4426:138:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6825,"nodeType":"Block","src":"4849:761:27","statements":[{"assignments":[6752],"declarations":[{"constant":false,"id":6752,"mutability":"mutable","name":"pos","nameLocation":"4867:3:27","nodeType":"VariableDeclaration","scope":6825,"src":"4859:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4859:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6755,"initialValue":{"expression":{"id":6753,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"4873:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4878:6:27","memberName":"length","nodeType":"MemberAccess","src":"4873:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4859:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"4899:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4899:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6823,"nodeType":"Block","src":"5496:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":6814,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5541:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5554:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6813,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"5520:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5535:4:27","5546:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5520:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":6810,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5510:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5515:4:27","memberName":"push","nodeType":"MemberAccess","src":"5510:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6434_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5510:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6818,"nodeType":"ExpressionStatement","src":"5510:52:27"},{"expression":{"components":[{"hexValue":"30","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5584:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5587:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5583:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint224_$","typeString":"tuple(int_const 0,uint224)"}},"functionReturnParameters":6750,"id":6822,"nodeType":"Return","src":"5576:17:27"}]},"id":6824,"nodeType":"IfStatement","src":"4895:709:27","trueBody":{"id":6809,"nodeType":"Block","src":"4908:582:27","statements":[{"assignments":[6761],"declarations":[{"constant":false,"id":6761,"mutability":"mutable","name":"last","nameLocation":"4995:4:27","nodeType":"VariableDeclaration","scope":6809,"src":"4974:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6760,"nodeType":"UserDefinedTypeName","pathNode":{"id":6759,"name":"Checkpoint224","nameLocations":["4974:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"4974:13:27"},"referencedDeclaration":6434,"src":"4974:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"id":6768,"initialValue":{"arguments":[{"id":6763,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5016:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6764,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"5022:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5022:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"5002:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4974:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6769,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"5104:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5109:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"5104:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6771,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5116:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5104:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6777,"nodeType":"IfStatement","src":"5100:91:27","trueBody":{"id":6776,"nodeType":"Block","src":"5121:70:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6773,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"5146:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6775,"nodeType":"RevertStatement","src":"5139:37:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6778,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"5254:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5259:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"5254:9:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6780,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5267:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5254:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6802,"nodeType":"Block","src":"5354:85:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":6797,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"5403:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5416:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":6796,"name":"Checkpoint224","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"5382:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5397:4:27","5408:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"5382:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}],"expression":{"id":6793,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5372:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5377:4:27","memberName":"push","nodeType":"MemberAccess","src":"5372:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint224_$6434_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,struct Checkpoints.Checkpoint224 storage ref)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6801,"nodeType":"ExpressionStatement","src":"5372:52:27"}]},"id":6803,"nodeType":"IfStatement","src":"5250:189:27","trueBody":{"id":6792,"nodeType":"Block","src":"5272:76:27","statements":[{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":6783,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5304:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6784,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"5310:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5316:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"5290:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5319:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"5290:35:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5328:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"5290:43:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":6791,"nodeType":"ExpressionStatement","src":"5290:43:27"}]}},{"expression":{"components":[{"expression":{"id":6804,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"5460:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_memory_ptr","typeString":"struct Checkpoints.Checkpoint224 memory"}},"id":6805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5465:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6433,"src":"5460:11:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"5473:5:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"id":6807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5459:20:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint224_$_t_uint224_$","typeString":"tuple(uint224,uint224)"}},"functionReturnParameters":6750,"id":6808,"nodeType":"Return","src":"5452:27:27"}]}}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"4570:165:27","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":6826,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"4749:7:27","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"self","nameLocation":"4781:4:27","nodeType":"VariableDeclaration","scope":6826,"src":"4757:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6738,"nodeType":"UserDefinedTypeName","pathNode":{"id":6737,"name":"Checkpoint224","nameLocations":["4757:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"4757:13:27"},"referencedDeclaration":6434,"src":"4757:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6739,"nodeType":"ArrayTypeName","src":"4757:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6742,"mutability":"mutable","name":"key","nameLocation":"4794:3:27","nodeType":"VariableDeclaration","scope":6826,"src":"4787:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6741,"name":"uint32","nodeType":"ElementaryTypeName","src":"4787:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6744,"mutability":"mutable","name":"value","nameLocation":"4807:5:27","nodeType":"VariableDeclaration","scope":6826,"src":"4799:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6743,"name":"uint224","nodeType":"ElementaryTypeName","src":"4799:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4756:57:27"},"returnParameters":{"id":6750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6826,"src":"4831:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6746,"name":"uint224","nodeType":"ElementaryTypeName","src":"4831:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"},{"constant":false,"id":6749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6826,"src":"4840:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6748,"name":"uint224","nodeType":"ElementaryTypeName","src":"4840:7:27","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"4830:18:27"},"scope":7988,"src":"4740:870:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6877,"nodeType":"Block","src":"6129:267:27","statements":[{"body":{"id":6873,"nodeType":"Block","src":"6158:211:27","statements":[{"assignments":[6846],"declarations":[{"constant":false,"id":6846,"mutability":"mutable","name":"mid","nameLocation":"6180:3:27","nodeType":"VariableDeclaration","scope":6873,"src":"6172:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"6172:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6852,"initialValue":{"arguments":[{"id":6849,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"6199:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6850,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"6204:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6847,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"6186:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6191:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"6186:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6172:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6854,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"6241:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":6855,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"6247:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6853,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"6227:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6227:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6252:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"6227:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6858,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"6259:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"6227:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6871,"nodeType":"Block","src":"6313:46:27","statements":[{"expression":{"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6865,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"6331:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6866,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"6337:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6343:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6337:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6331:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6870,"nodeType":"ExpressionStatement","src":"6331:13:27"}]},"id":6872,"nodeType":"IfStatement","src":"6223:136:27","trueBody":{"id":6864,"nodeType":"Block","src":"6264:43:27","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"6282:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6861,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"6289:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6282:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6863,"nodeType":"ExpressionStatement","src":"6282:10:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6835,"src":"6146:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6843,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"6152:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6146:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6874,"nodeType":"WhileStatement","src":"6139:230:27"},{"expression":{"id":6875,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"6385:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6841,"id":6876,"nodeType":"Return","src":"6378:11:27"}]},"documentation":{"id":6827,"nodeType":"StructuredDocumentation","src":"5616:342:27","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":6878,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"5972:18:27","nodeType":"FunctionDefinition","parameters":{"id":6838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"self","nameLocation":"6024:4:27","nodeType":"VariableDeclaration","scope":6878,"src":"6000:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6829,"nodeType":"UserDefinedTypeName","pathNode":{"id":6828,"name":"Checkpoint224","nameLocations":["6000:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"6000:13:27"},"referencedDeclaration":6434,"src":"6000:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6830,"nodeType":"ArrayTypeName","src":"6000:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6833,"mutability":"mutable","name":"key","nameLocation":"6045:3:27","nodeType":"VariableDeclaration","scope":6878,"src":"6038:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6832,"name":"uint32","nodeType":"ElementaryTypeName","src":"6038:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6835,"mutability":"mutable","name":"low","nameLocation":"6066:3:27","nodeType":"VariableDeclaration","scope":6878,"src":"6058:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6058:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6837,"mutability":"mutable","name":"high","nameLocation":"6087:4:27","nodeType":"VariableDeclaration","scope":6878,"src":"6079:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6836,"name":"uint256","nodeType":"ElementaryTypeName","src":"6079:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5990:107:27"},"returnParameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6878,"src":"6120:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"6120:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6119:9:27"},"scope":7988,"src":"5963:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6929,"nodeType":"Block","src":"6916:267:27","statements":[{"body":{"id":6925,"nodeType":"Block","src":"6945:211:27","statements":[{"assignments":[6898],"declarations":[{"constant":false,"id":6898,"mutability":"mutable","name":"mid","nameLocation":"6967:3:27","nodeType":"VariableDeclaration","scope":6925,"src":"6959:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6904,"initialValue":{"arguments":[{"id":6901,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"6986:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6902,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"6991:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6899,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"6973:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6978:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"6973:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6973:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6959:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6906,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"7028:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"}},{"id":6907,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"7034:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6905,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":6945,"src":"7014:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint224_$6434_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint224 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint224 storage pointer)"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7014:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224 storage pointer"}},"id":6909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6431,"src":"7014:29:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6910,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"7046:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7014:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6923,"nodeType":"Block","src":"7103:43:27","statements":[{"expression":{"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6919,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7121:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6920,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"7128:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7121:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6922,"nodeType":"ExpressionStatement","src":"7121:10:27"}]},"id":6924,"nodeType":"IfStatement","src":"7010:136:27","trueBody":{"id":6918,"nodeType":"Block","src":"7051:46:27","statements":[{"expression":{"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"7069:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"7075:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7081:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7075:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6917,"nodeType":"ExpressionStatement","src":"7069:13:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6894,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"6933:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6895,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"6939:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6926,"nodeType":"WhileStatement","src":"6926:230:27"},{"expression":{"id":6927,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"7172:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6893,"id":6928,"nodeType":"Return","src":"7165:11:27"}]},"documentation":{"id":6879,"nodeType":"StructuredDocumentation","src":"6402:343:27","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":6930,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"6759:18:27","nodeType":"FunctionDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"self","nameLocation":"6811:4:27","nodeType":"VariableDeclaration","scope":6930,"src":"6787:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6881,"nodeType":"UserDefinedTypeName","pathNode":{"id":6880,"name":"Checkpoint224","nameLocations":["6787:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"6787:13:27"},"referencedDeclaration":6434,"src":"6787:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6882,"nodeType":"ArrayTypeName","src":"6787:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6885,"mutability":"mutable","name":"key","nameLocation":"6832:3:27","nodeType":"VariableDeclaration","scope":6930,"src":"6825:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6884,"name":"uint32","nodeType":"ElementaryTypeName","src":"6825:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"low","nameLocation":"6853:3:27","nodeType":"VariableDeclaration","scope":6930,"src":"6845:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"6845:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6889,"mutability":"mutable","name":"high","nameLocation":"6874:4:27","nodeType":"VariableDeclaration","scope":6930,"src":"6866:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"6866:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6777:107:27"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6930,"src":"6907:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6907:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6906:9:27"},"scope":7988,"src":"6750:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6944,"nodeType":"Block","src":"7466:125:27","statements":[{"AST":{"nativeSrc":"7485:100:27","nodeType":"YulBlock","src":"7485:100:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7506:1:27","nodeType":"YulLiteral","src":"7506:1:27","type":"","value":"0"},{"name":"self.slot","nativeSrc":"7509:9:27","nodeType":"YulIdentifier","src":"7509:9:27"}],"functionName":{"name":"mstore","nativeSrc":"7499:6:27","nodeType":"YulIdentifier","src":"7499:6:27"},"nativeSrc":"7499:20:27","nodeType":"YulFunctionCall","src":"7499:20:27"},"nativeSrc":"7499:20:27","nodeType":"YulExpressionStatement","src":"7499:20:27"},{"nativeSrc":"7532:43:27","nodeType":"YulAssignment","src":"7532:43:27","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7561:1:27","nodeType":"YulLiteral","src":"7561:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"7564:4:27","nodeType":"YulLiteral","src":"7564:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7551:9:27","nodeType":"YulIdentifier","src":"7551:9:27"},"nativeSrc":"7551:18:27","nodeType":"YulFunctionCall","src":"7551:18:27"},{"name":"pos","nativeSrc":"7571:3:27","nodeType":"YulIdentifier","src":"7571:3:27"}],"functionName":{"name":"add","nativeSrc":"7547:3:27","nodeType":"YulIdentifier","src":"7547:3:27"},"nativeSrc":"7547:28:27","nodeType":"YulFunctionCall","src":"7547:28:27"},"variableNames":[{"name":"result.slot","nativeSrc":"7532:11:27","nodeType":"YulIdentifier","src":"7532:11:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6937,"isOffset":false,"isSlot":false,"src":"7571:3:27","valueSize":1},{"declaration":6941,"isOffset":false,"isSlot":true,"src":"7532:11:27","suffix":"slot","valueSize":1},{"declaration":6935,"isOffset":false,"isSlot":true,"src":"7509:9:27","suffix":"slot","valueSize":1}],"id":6943,"nodeType":"InlineAssembly","src":"7476:109:27"}]},"documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"7189:132:27","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":6945,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"7335:13:27","nodeType":"FunctionDefinition","parameters":{"id":6938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"self","nameLocation":"7382:4:27","nodeType":"VariableDeclaration","scope":6945,"src":"7358:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"},"typeName":{"baseType":{"id":6933,"nodeType":"UserDefinedTypeName","pathNode":{"id":6932,"name":"Checkpoint224","nameLocations":["7358:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"7358:13:27"},"referencedDeclaration":6434,"src":"7358:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"id":6934,"nodeType":"ArrayTypeName","src":"7358:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint224_$6434_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint224[]"}},"visibility":"internal"},{"constant":false,"id":6937,"mutability":"mutable","name":"pos","nameLocation":"7404:3:27","nodeType":"VariableDeclaration","scope":6945,"src":"7396:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7348:65:27"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"result","nameLocation":"7458:6:27","nodeType":"VariableDeclaration","scope":6945,"src":"7436:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"},"typeName":{"id":6940,"nodeType":"UserDefinedTypeName","pathNode":{"id":6939,"name":"Checkpoint224","nameLocations":["7436:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6434,"src":"7436:13:27"},"referencedDeclaration":6434,"src":"7436:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint224_$6434_storage_ptr","typeString":"struct Checkpoints.Checkpoint224"}},"visibility":"internal"}],"src":"7435:30:27"},"scope":7988,"src":"7326:265:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace208","id":6950,"members":[{"constant":false,"id":6949,"mutability":"mutable","name":"_checkpoints","nameLocation":"7639:12:27","nodeType":"VariableDeclaration","scope":6950,"src":"7623:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":6947,"nodeType":"UserDefinedTypeName","pathNode":{"id":6946,"name":"Checkpoint208","nameLocations":["7623:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"7623:13:27"},"referencedDeclaration":6955,"src":"7623:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":6948,"nodeType":"ArrayTypeName","src":"7623:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"}],"name":"Trace208","nameLocation":"7604:8:27","nodeType":"StructDefinition","scope":7988,"src":"7597:61:27","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint208","id":6955,"members":[{"constant":false,"id":6952,"mutability":"mutable","name":"_key","nameLocation":"7702:4:27","nodeType":"VariableDeclaration","scope":6955,"src":"7695:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6951,"name":"uint48","nodeType":"ElementaryTypeName","src":"7695:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6954,"mutability":"mutable","name":"_value","nameLocation":"7724:6:27","nodeType":"VariableDeclaration","scope":6955,"src":"7716:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6953,"name":"uint208","nodeType":"ElementaryTypeName","src":"7716:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"name":"Checkpoint208","nameLocation":"7671:13:27","nodeType":"StructDefinition","scope":7988,"src":"7664:73:27","visibility":"public"},{"body":{"id":6977,"nodeType":"Block","src":"8150:62:27","statements":[{"expression":{"arguments":[{"expression":{"id":6971,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"8175:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8180:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"8175:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":6973,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"8194:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":6974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"8199:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":6970,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6826,7347,7868],"referencedDeclaration":7347,"src":"8167:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint208_$returns$_t_uint208_$_t_uint208_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint208) returns (uint208,uint208)"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8167:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":6969,"id":6976,"nodeType":"Return","src":"8160:45:27"}]},"documentation":{"id":6956,"nodeType":"StructuredDocumentation","src":"7743:302:27","text":" @dev Pushes a (`key`, `value`) pair into a Trace208 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint48).max` key set will disable the\n library."},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"8059:4:27","nodeType":"FunctionDefinition","parameters":{"id":6964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"self","nameLocation":"8081:4:27","nodeType":"VariableDeclaration","scope":6978,"src":"8064:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6958,"nodeType":"UserDefinedTypeName","pathNode":{"id":6957,"name":"Trace208","nameLocations":["8064:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"8064:8:27"},"referencedDeclaration":6950,"src":"8064:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6961,"mutability":"mutable","name":"key","nameLocation":"8094:3:27","nodeType":"VariableDeclaration","scope":6978,"src":"8087:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6960,"name":"uint48","nodeType":"ElementaryTypeName","src":"8087:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6963,"mutability":"mutable","name":"value","nameLocation":"8107:5:27","nodeType":"VariableDeclaration","scope":6978,"src":"8099:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6962,"name":"uint208","nodeType":"ElementaryTypeName","src":"8099:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8063:50:27"},"returnParameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6978,"src":"8132:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6965,"name":"uint208","nodeType":"ElementaryTypeName","src":"8132:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6978,"src":"8141:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6967,"name":"uint208","nodeType":"ElementaryTypeName","src":"8141:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8131:18:27"},"scope":7988,"src":"8050:162:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7017,"nodeType":"Block","src":"8465:207:27","statements":[{"assignments":[6990],"declarations":[{"constant":false,"id":6990,"mutability":"mutable","name":"len","nameLocation":"8483:3:27","nodeType":"VariableDeclaration","scope":7017,"src":"8475:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"8475:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6994,"initialValue":{"expression":{"expression":{"id":6991,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"8489:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8494:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"8489:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8507:6:27","memberName":"length","nodeType":"MemberAccess","src":"8489:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8475:38:27"},{"assignments":[6996],"declarations":[{"constant":false,"id":6996,"mutability":"mutable","name":"pos","nameLocation":"8531:3:27","nodeType":"VariableDeclaration","scope":7017,"src":"8523:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"8523:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7004,"initialValue":{"arguments":[{"expression":{"id":6998,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"8556:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":6999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8561:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"8556:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7000,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"8575:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7002,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"8583:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6997,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6930,7451,7972],"referencedDeclaration":7451,"src":"8537:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8537:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8523:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"8604:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7006,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6990,"src":"8611:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8604:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7010,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"8635:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8640:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"8635:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7012,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"8654:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7009,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"8621:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8659:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"8621:44:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8604:61:27","trueExpression":{"hexValue":"30","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8617:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6988,"id":7016,"nodeType":"Return","src":"8597:68:27"}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"8218:154:27","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7018,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"8386:11:27","nodeType":"FunctionDefinition","parameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"self","nameLocation":"8415:4:27","nodeType":"VariableDeclaration","scope":7018,"src":"8398:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":6981,"nodeType":"UserDefinedTypeName","pathNode":{"id":6980,"name":"Trace208","nameLocations":["8398:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"8398:8:27"},"referencedDeclaration":6950,"src":"8398:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":6984,"mutability":"mutable","name":"key","nameLocation":"8428:3:27","nodeType":"VariableDeclaration","scope":7018,"src":"8421:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6983,"name":"uint48","nodeType":"ElementaryTypeName","src":"8421:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8397:35:27"},"returnParameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7018,"src":"8456:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6986,"name":"uint208","nodeType":"ElementaryTypeName","src":"8456:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8455:9:27"},"scope":7988,"src":"8377:295:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7059,"nodeType":"Block","src":"8927:209:27","statements":[{"assignments":[7030],"declarations":[{"constant":false,"id":7030,"mutability":"mutable","name":"len","nameLocation":"8945:3:27","nodeType":"VariableDeclaration","scope":7059,"src":"8937:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7029,"name":"uint256","nodeType":"ElementaryTypeName","src":"8937:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7034,"initialValue":{"expression":{"expression":{"id":7031,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"8951:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8956:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"8951:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8969:6:27","memberName":"length","nodeType":"MemberAccess","src":"8951:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8937:38:27"},{"assignments":[7036],"declarations":[{"constant":false,"id":7036,"mutability":"mutable","name":"pos","nameLocation":"8993:3:27","nodeType":"VariableDeclaration","scope":7059,"src":"8985:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7035,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7044,"initialValue":{"arguments":[{"expression":{"id":7038,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"9018:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7039,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9023:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"9018:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7040,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"9037:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"hexValue":"30","id":7041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9042:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7042,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7030,"src":"9045:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7037,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":7399,"src":"8999:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8985:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"9066:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9073:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9066:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7050,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"9095:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9100:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"9095:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"9114:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9114:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7049,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"9081:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9081:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"9081:48:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9066:63:27","trueExpression":{"hexValue":"30","id":7048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9077:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7028,"id":7058,"nodeType":"Return","src":"9059:70:27"}]},"documentation":{"id":7019,"nodeType":"StructuredDocumentation","src":"8678:156:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7060,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"8848:11:27","nodeType":"FunctionDefinition","parameters":{"id":7025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"self","nameLocation":"8877:4:27","nodeType":"VariableDeclaration","scope":7060,"src":"8860:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7021,"nodeType":"UserDefinedTypeName","pathNode":{"id":7020,"name":"Trace208","nameLocations":["8860:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"8860:8:27"},"referencedDeclaration":6950,"src":"8860:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7024,"mutability":"mutable","name":"key","nameLocation":"8890:3:27","nodeType":"VariableDeclaration","scope":7060,"src":"8883:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7023,"name":"uint48","nodeType":"ElementaryTypeName","src":"8883:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"8859:35:27"},"returnParameters":{"id":7028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7060,"src":"8918:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7026,"name":"uint208","nodeType":"ElementaryTypeName","src":"8918:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"8917:9:27"},"scope":7988,"src":"8839:297:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7144,"nodeType":"Block","src":"9535:512:27","statements":[{"assignments":[7072],"declarations":[{"constant":false,"id":7072,"mutability":"mutable","name":"len","nameLocation":"9553:3:27","nodeType":"VariableDeclaration","scope":7144,"src":"9545:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7071,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7076,"initialValue":{"expression":{"expression":{"id":7073,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"9559:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9564:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"9559:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9577:6:27","memberName":"length","nodeType":"MemberAccess","src":"9559:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9545:38:27"},{"assignments":[7078],"declarations":[{"constant":false,"id":7078,"mutability":"mutable","name":"low","nameLocation":"9602:3:27","nodeType":"VariableDeclaration","scope":7144,"src":"9594:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7080,"initialValue":{"hexValue":"30","id":7079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9608:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9594:15:27"},{"assignments":[7082],"declarations":[{"constant":false,"id":7082,"mutability":"mutable","name":"high","nameLocation":"9627:4:27","nodeType":"VariableDeclaration","scope":7144,"src":"9619:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"9619:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7084,"initialValue":{"id":7083,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9634:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9619:18:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7085,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9652:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9658:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"9652:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7119,"nodeType":"IfStatement","src":"9648:234:27","trueBody":{"id":7118,"nodeType":"Block","src":"9661:221:27","statements":[{"assignments":[7089],"declarations":[{"constant":false,"id":7089,"mutability":"mutable","name":"mid","nameLocation":"9683:3:27","nodeType":"VariableDeclaration","scope":7118,"src":"9675:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7088,"name":"uint256","nodeType":"ElementaryTypeName","src":"9675:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9689:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7093,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"9705:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7091,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"9695:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9700:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"9695:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9675:34:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"9727:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7099,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"9747:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9752:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"9747:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7101,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"9766:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7098,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"9733:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7103,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9771:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"9733:42:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9727:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7116,"nodeType":"Block","src":"9826:46:27","statements":[{"expression":{"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7110,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"9844:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7111,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"9850:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9856:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9850:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9844:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7115,"nodeType":"ExpressionStatement","src":"9844:13:27"}]},"id":7117,"nodeType":"IfStatement","src":"9723:149:27","trueBody":{"id":7109,"nodeType":"Block","src":"9777:43:27","statements":[{"expression":{"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7105,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"9795:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7106,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"9802:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9795:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7108,"nodeType":"ExpressionStatement","src":"9795:10:27"}]}}]}},{"assignments":[7121],"declarations":[{"constant":false,"id":7121,"mutability":"mutable","name":"pos","nameLocation":"9900:3:27","nodeType":"VariableDeclaration","scope":7144,"src":"9892:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"9892:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7129,"initialValue":{"arguments":[{"expression":{"id":7123,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"9925:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7124,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"9925:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"id":7125,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"9944:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7126,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"9949:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7127,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"9954:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7122,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":7399,"src":"9906:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint48_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint48,uint256,uint256) view returns (uint256)"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9906:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9892:67:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7130,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"9977:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9984:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9977:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7135,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"10006:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10011:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"10006:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7137,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"10025:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10031:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10025:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7134,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"9992:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9992:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10034:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"9992:48:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9977:63:27","trueExpression":{"hexValue":"30","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9988:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7070,"id":7143,"nodeType":"Return","src":"9970:70:27"}]},"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"9142:294:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7145,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"9450:17:27","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"self","nameLocation":"9485:4:27","nodeType":"VariableDeclaration","scope":7145,"src":"9468:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7063,"nodeType":"UserDefinedTypeName","pathNode":{"id":7062,"name":"Trace208","nameLocations":["9468:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"9468:8:27"},"referencedDeclaration":6950,"src":"9468:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"key","nameLocation":"9498:3:27","nodeType":"VariableDeclaration","scope":7145,"src":"9491:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7065,"name":"uint48","nodeType":"ElementaryTypeName","src":"9491:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"9467:35:27"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7145,"src":"9526:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7068,"name":"uint208","nodeType":"ElementaryTypeName","src":"9526:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"9525:9:27"},"scope":7988,"src":"9441:606:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7174,"nodeType":"Block","src":"10238:135:27","statements":[{"assignments":[7155],"declarations":[{"constant":false,"id":7155,"mutability":"mutable","name":"pos","nameLocation":"10256:3:27","nodeType":"VariableDeclaration","scope":7174,"src":"10248:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7154,"name":"uint256","nodeType":"ElementaryTypeName","src":"10248:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7159,"initialValue":{"expression":{"expression":{"id":7156,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"10262:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10267:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"10262:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:27","memberName":"length","nodeType":"MemberAccess","src":"10262:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10248:38:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7160,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"10303:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10310:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10303:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7165,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"10332:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"10332:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"10351:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10357:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10351:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7164,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"10318:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10318:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10360:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"10318:48:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10303:63:27","trueExpression":{"hexValue":"30","id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10314:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7153,"id":7173,"nodeType":"Return","src":"10296:70:27"}]},"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"10053:109:27","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7175,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"10176:6:27","nodeType":"FunctionDefinition","parameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"self","nameLocation":"10200:4:27","nodeType":"VariableDeclaration","scope":7175,"src":"10183:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7148,"nodeType":"UserDefinedTypeName","pathNode":{"id":7147,"name":"Trace208","nameLocations":["10183:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"10183:8:27"},"referencedDeclaration":6950,"src":"10183:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10182:23:27"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7175,"src":"10229:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7151,"name":"uint208","nodeType":"ElementaryTypeName","src":"10229:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10228:9:27"},"scope":7988,"src":"10167:206:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7223,"nodeType":"Block","src":"10666:274:27","statements":[{"assignments":[7189],"declarations":[{"constant":false,"id":7189,"mutability":"mutable","name":"pos","nameLocation":"10684:3:27","nodeType":"VariableDeclaration","scope":7223,"src":"10676:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7188,"name":"uint256","nodeType":"ElementaryTypeName","src":"10676:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7193,"initialValue":{"expression":{"expression":{"id":7190,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"10690:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10695:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"10690:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10708:6:27","memberName":"length","nodeType":"MemberAccess","src":"10690:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10676:38:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7194,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"10728:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10735:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10728:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7221,"nodeType":"Block","src":"10789:145:27","statements":[{"assignments":[7205],"declarations":[{"constant":false,"id":7205,"mutability":"mutable","name":"ckpt","nameLocation":"10824:4:27","nodeType":"VariableDeclaration","scope":7221,"src":"10803:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7204,"nodeType":"UserDefinedTypeName","pathNode":{"id":7203,"name":"Checkpoint208","nameLocations":["10803:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"10803:13:27"},"referencedDeclaration":6955,"src":"10803:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7213,"initialValue":{"arguments":[{"expression":{"id":7207,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"10845:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10850:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"10845:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7209,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"10864:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10870:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10864:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7206,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"10831:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10831:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10803:69:27"},{"expression":{"components":[{"hexValue":"74727565","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10894:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7215,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"10900:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10905:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"10900:9:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"expression":{"id":7217,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"10911:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"10911:11:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10893:30:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint48_$_t_uint208_$","typeString":"tuple(bool,uint48,uint208)"}},"functionReturnParameters":7187,"id":7220,"nodeType":"Return","src":"10886:37:27"}]},"id":7222,"nodeType":"IfStatement","src":"10724:210:27","trueBody":{"id":7202,"nodeType":"Block","src":"10738:45:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10760:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10767:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10759:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7187,"id":7201,"nodeType":"Return","src":"10752:20:27"}]}}]},"documentation":{"id":7176,"nodeType":"StructuredDocumentation","src":"10379:168:27","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7224,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"10561:16:27","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"self","nameLocation":"10595:4:27","nodeType":"VariableDeclaration","scope":7224,"src":"10578:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7178,"nodeType":"UserDefinedTypeName","pathNode":{"id":7177,"name":"Trace208","nameLocations":["10578:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"10578:8:27"},"referencedDeclaration":6950,"src":"10578:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"10577:23:27"},"returnParameters":{"id":7187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"exists","nameLocation":"10629:6:27","nodeType":"VariableDeclaration","scope":7224,"src":"10624:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7181,"name":"bool","nodeType":"ElementaryTypeName","src":"10624:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7184,"mutability":"mutable","name":"_key","nameLocation":"10644:4:27","nodeType":"VariableDeclaration","scope":7224,"src":"10637:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7183,"name":"uint48","nodeType":"ElementaryTypeName","src":"10637:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7186,"mutability":"mutable","name":"_value","nameLocation":"10658:6:27","nodeType":"VariableDeclaration","scope":7224,"src":"10650:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7185,"name":"uint208","nodeType":"ElementaryTypeName","src":"10650:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"10623:42:27"},"scope":7988,"src":"10552:388:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"11079:48:27","statements":[{"expression":{"expression":{"expression":{"id":7233,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"11096:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11101:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"11096:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11114:6:27","memberName":"length","nodeType":"MemberAccess","src":"11096:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7232,"id":7236,"nodeType":"Return","src":"11089:31:27"}]},"documentation":{"id":7225,"nodeType":"StructuredDocumentation","src":"10946:57:27","text":" @dev Returns the number of checkpoint."},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11017:6:27","nodeType":"FunctionDefinition","parameters":{"id":7229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7228,"mutability":"mutable","name":"self","nameLocation":"11041:4:27","nodeType":"VariableDeclaration","scope":7238,"src":"11024:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7227,"nodeType":"UserDefinedTypeName","pathNode":{"id":7226,"name":"Trace208","nameLocations":["11024:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"11024:8:27"},"referencedDeclaration":6950,"src":"11024:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"}],"src":"11023:23:27"},"returnParameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"11070:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7230,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11069:9:27"},"scope":7988,"src":"11008:119:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7255,"nodeType":"Block","src":"11291:46:27","statements":[{"expression":{"baseExpression":{"expression":{"id":7250,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"11308:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208 storage pointer"}},"id":7251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11313:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":6949,"src":"11308:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage ref"}},"id":7253,"indexExpression":{"id":7252,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"11326:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11308:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage","typeString":"struct Checkpoints.Checkpoint208 storage ref"}},"functionReturnParameters":7249,"id":7254,"nodeType":"Return","src":"11301:29:27"}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"11133:61:27","text":" @dev Returns checkpoint at given position."},"id":7256,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11208:2:27","nodeType":"FunctionDefinition","parameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"self","nameLocation":"11228:4:27","nodeType":"VariableDeclaration","scope":7256,"src":"11211:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"},"typeName":{"id":7241,"nodeType":"UserDefinedTypeName","pathNode":{"id":7240,"name":"Trace208","nameLocations":["11211:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":6950,"src":"11211:8:27"},"referencedDeclaration":6950,"src":"11211:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace208_$6950_storage_ptr","typeString":"struct Checkpoints.Trace208"}},"visibility":"internal"},{"constant":false,"id":7244,"mutability":"mutable","name":"pos","nameLocation":"11241:3:27","nodeType":"VariableDeclaration","scope":7256,"src":"11234:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7243,"name":"uint32","nodeType":"ElementaryTypeName","src":"11234:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11210:35:27"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7256,"src":"11269:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7247,"nodeType":"UserDefinedTypeName","pathNode":{"id":7246,"name":"Checkpoint208","nameLocations":["11269:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"11269:13:27"},"referencedDeclaration":6955,"src":"11269:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"11268:22:27"},"scope":7988,"src":"11199:138:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7346,"nodeType":"Block","src":"11622:761:27","statements":[{"assignments":[7273],"declarations":[{"constant":false,"id":7273,"mutability":"mutable","name":"pos","nameLocation":"11640:3:27","nodeType":"VariableDeclaration","scope":7346,"src":"11632:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7272,"name":"uint256","nodeType":"ElementaryTypeName","src":"11632:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7276,"initialValue":{"expression":{"id":7274,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"11646:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11651:6:27","memberName":"length","nodeType":"MemberAccess","src":"11646:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11632:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"11672:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11672:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7344,"nodeType":"Block","src":"12269:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7335,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"12314:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"12327:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7334,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"12293:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12308:4:27","12319:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12293:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7331,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"12283:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12288:4:27","memberName":"push","nodeType":"MemberAccess","src":"12283:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$6955_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7339,"nodeType":"ExpressionStatement","src":"12283:52:27"},{"expression":{"components":[{"hexValue":"30","id":7340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"12360:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12356:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint208_$","typeString":"tuple(int_const 0,uint208)"}},"functionReturnParameters":7271,"id":7343,"nodeType":"Return","src":"12349:17:27"}]},"id":7345,"nodeType":"IfStatement","src":"11668:709:27","trueBody":{"id":7330,"nodeType":"Block","src":"11681:582:27","statements":[{"assignments":[7282],"declarations":[{"constant":false,"id":7282,"mutability":"mutable","name":"last","nameLocation":"11768:4:27","nodeType":"VariableDeclaration","scope":7330,"src":"11747:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7281,"nodeType":"UserDefinedTypeName","pathNode":{"id":7280,"name":"Checkpoint208","nameLocations":["11747:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"11747:13:27"},"referencedDeclaration":6955,"src":"11747:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"id":7289,"initialValue":{"arguments":[{"id":7284,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"11789:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7285,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"11795:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11801:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11795:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7283,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"11775:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11747:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7290,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"11877:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11882:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"11877:9:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7292,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"11889:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"11877:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7298,"nodeType":"IfStatement","src":"11873:91:27","trueBody":{"id":7297,"nodeType":"Block","src":"11894:70:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7294,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"11919:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11919:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7296,"nodeType":"RevertStatement","src":"11912:37:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7299,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"12027:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12032:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"12027:9:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7301,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"12040:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"12027:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7323,"nodeType":"Block","src":"12127:85:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7318,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"12176:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":7319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"12189:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint208","typeString":"uint208"}],"id":7317,"name":"Checkpoint208","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"12155:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12170:4:27","12181:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"12155:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}],"expression":{"id":7314,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"12145:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12150:4:27","memberName":"push","nodeType":"MemberAccess","src":"12145:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint208_$6955_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,struct Checkpoints.Checkpoint208 storage ref)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12145:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7322,"nodeType":"ExpressionStatement","src":"12145:52:27"}]},"id":7324,"nodeType":"IfStatement","src":"12023:189:27","trueBody":{"id":7313,"nodeType":"Block","src":"12045:76:27","statements":[{"expression":{"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7304,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"12077:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"12083:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12089:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12083:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7303,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"12063:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12092:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"12063:35:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"12101:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"12063:43:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"id":7312,"nodeType":"ExpressionStatement","src":"12063:43:27"}]}},{"expression":{"components":[{"expression":{"id":7325,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"12233:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_memory_ptr","typeString":"struct Checkpoints.Checkpoint208 memory"}},"id":7326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12238:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6954,"src":"12233:11:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},{"id":7327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"12246:5:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}}],"id":7328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12232:20:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint208_$_t_uint208_$","typeString":"tuple(uint208,uint208)"}},"functionReturnParameters":7271,"id":7329,"nodeType":"Return","src":"12225:27:27"}]}}]},"documentation":{"id":7257,"nodeType":"StructuredDocumentation","src":"11343:165:27","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7347,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"11522:7:27","nodeType":"FunctionDefinition","parameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"self","nameLocation":"11554:4:27","nodeType":"VariableDeclaration","scope":7347,"src":"11530:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7259,"nodeType":"UserDefinedTypeName","pathNode":{"id":7258,"name":"Checkpoint208","nameLocations":["11530:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"11530:13:27"},"referencedDeclaration":6955,"src":"11530:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7260,"nodeType":"ArrayTypeName","src":"11530:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"key","nameLocation":"11567:3:27","nodeType":"VariableDeclaration","scope":7347,"src":"11560:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7262,"name":"uint48","nodeType":"ElementaryTypeName","src":"11560:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7265,"mutability":"mutable","name":"value","nameLocation":"11580:5:27","nodeType":"VariableDeclaration","scope":7347,"src":"11572:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7264,"name":"uint208","nodeType":"ElementaryTypeName","src":"11572:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11529:57:27"},"returnParameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7347,"src":"11604:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7267,"name":"uint208","nodeType":"ElementaryTypeName","src":"11604:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"},{"constant":false,"id":7270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7347,"src":"11613:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7269,"name":"uint208","nodeType":"ElementaryTypeName","src":"11613:7:27","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"11603:18:27"},"scope":7988,"src":"11513:870:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7398,"nodeType":"Block","src":"12902:267:27","statements":[{"body":{"id":7394,"nodeType":"Block","src":"12931:211:27","statements":[{"assignments":[7367],"declarations":[{"constant":false,"id":7367,"mutability":"mutable","name":"mid","nameLocation":"12953:3:27","nodeType":"VariableDeclaration","scope":7394,"src":"12945:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7366,"name":"uint256","nodeType":"ElementaryTypeName","src":"12945:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7373,"initialValue":{"arguments":[{"id":7370,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"12972:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7371,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"12977:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7368,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"12959:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12964:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"12959:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12959:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12945:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7375,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"13014:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7376,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"13020:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7374,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"13000:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7378,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13025:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"13000:29:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7379,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"13032:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13000:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7392,"nodeType":"Block","src":"13086:46:27","statements":[{"expression":{"id":7390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7386,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"13104:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7387,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"13110:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13116:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13110:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13104:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7391,"nodeType":"ExpressionStatement","src":"13104:13:27"}]},"id":7393,"nodeType":"IfStatement","src":"12996:136:27","trueBody":{"id":7385,"nodeType":"Block","src":"13037:43:27","statements":[{"expression":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7381,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"13055:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7382,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"13062:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13055:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7384,"nodeType":"ExpressionStatement","src":"13055:10:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"12919:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7364,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"12925:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12919:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7395,"nodeType":"WhileStatement","src":"12912:230:27"},{"expression":{"id":7396,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"13158:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7362,"id":7397,"nodeType":"Return","src":"13151:11:27"}]},"documentation":{"id":7348,"nodeType":"StructuredDocumentation","src":"12389:342:27","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7399,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"12745:18:27","nodeType":"FunctionDefinition","parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"self","nameLocation":"12797:4:27","nodeType":"VariableDeclaration","scope":7399,"src":"12773:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7350,"nodeType":"UserDefinedTypeName","pathNode":{"id":7349,"name":"Checkpoint208","nameLocations":["12773:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"12773:13:27"},"referencedDeclaration":6955,"src":"12773:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7351,"nodeType":"ArrayTypeName","src":"12773:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7354,"mutability":"mutable","name":"key","nameLocation":"12818:3:27","nodeType":"VariableDeclaration","scope":7399,"src":"12811:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7353,"name":"uint48","nodeType":"ElementaryTypeName","src":"12811:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7356,"mutability":"mutable","name":"low","nameLocation":"12839:3:27","nodeType":"VariableDeclaration","scope":7399,"src":"12831:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7355,"name":"uint256","nodeType":"ElementaryTypeName","src":"12831:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"high","nameLocation":"12860:4:27","nodeType":"VariableDeclaration","scope":7399,"src":"12852:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"12852:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12763:107:27"},"returnParameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7399,"src":"12893:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7360,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12892:9:27"},"scope":7988,"src":"12736:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7450,"nodeType":"Block","src":"13689:267:27","statements":[{"body":{"id":7446,"nodeType":"Block","src":"13718:211:27","statements":[{"assignments":[7419],"declarations":[{"constant":false,"id":7419,"mutability":"mutable","name":"mid","nameLocation":"13740:3:27","nodeType":"VariableDeclaration","scope":7446,"src":"13732:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"13732:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7425,"initialValue":{"arguments":[{"id":7422,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"13759:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7423,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"13764:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7420,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"13746:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13751:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"13746:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13732:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7427,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"13801:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"}},{"id":7428,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"13807:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7426,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7466,"src":"13787:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint208_$6955_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint208 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint208 storage pointer)"}},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13787:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208 storage pointer"}},"id":7430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13812:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":6952,"src":"13787:29:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7431,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"13819:3:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"13787:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7444,"nodeType":"Block","src":"13876:43:27","statements":[{"expression":{"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7440,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"13894:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7441,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"13901:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13894:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7443,"nodeType":"ExpressionStatement","src":"13894:10:27"}]},"id":7445,"nodeType":"IfStatement","src":"13783:136:27","trueBody":{"id":7439,"nodeType":"Block","src":"13824:46:27","statements":[{"expression":{"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7433,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"13842:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7434,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"13848:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13848:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13842:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7438,"nodeType":"ExpressionStatement","src":"13842:13:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7415,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7408,"src":"13706:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7416,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"13712:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13706:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7447,"nodeType":"WhileStatement","src":"13699:230:27"},{"expression":{"id":7448,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7410,"src":"13945:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7414,"id":7449,"nodeType":"Return","src":"13938:11:27"}]},"documentation":{"id":7400,"nodeType":"StructuredDocumentation","src":"13175:343:27","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7451,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"13532:18:27","nodeType":"FunctionDefinition","parameters":{"id":7411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"self","nameLocation":"13584:4:27","nodeType":"VariableDeclaration","scope":7451,"src":"13560:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7402,"nodeType":"UserDefinedTypeName","pathNode":{"id":7401,"name":"Checkpoint208","nameLocations":["13560:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"13560:13:27"},"referencedDeclaration":6955,"src":"13560:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7403,"nodeType":"ArrayTypeName","src":"13560:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7406,"mutability":"mutable","name":"key","nameLocation":"13605:3:27","nodeType":"VariableDeclaration","scope":7451,"src":"13598:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7405,"name":"uint48","nodeType":"ElementaryTypeName","src":"13598:6:27","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":7408,"mutability":"mutable","name":"low","nameLocation":"13626:3:27","nodeType":"VariableDeclaration","scope":7451,"src":"13618:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7407,"name":"uint256","nodeType":"ElementaryTypeName","src":"13618:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7410,"mutability":"mutable","name":"high","nameLocation":"13647:4:27","nodeType":"VariableDeclaration","scope":7451,"src":"13639:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7409,"name":"uint256","nodeType":"ElementaryTypeName","src":"13639:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13550:107:27"},"returnParameters":{"id":7414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7451,"src":"13680:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7412,"name":"uint256","nodeType":"ElementaryTypeName","src":"13680:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13679:9:27"},"scope":7988,"src":"13523:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7465,"nodeType":"Block","src":"14239:125:27","statements":[{"AST":{"nativeSrc":"14258:100:27","nodeType":"YulBlock","src":"14258:100:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14279:1:27","nodeType":"YulLiteral","src":"14279:1:27","type":"","value":"0"},{"name":"self.slot","nativeSrc":"14282:9:27","nodeType":"YulIdentifier","src":"14282:9:27"}],"functionName":{"name":"mstore","nativeSrc":"14272:6:27","nodeType":"YulIdentifier","src":"14272:6:27"},"nativeSrc":"14272:20:27","nodeType":"YulFunctionCall","src":"14272:20:27"},"nativeSrc":"14272:20:27","nodeType":"YulExpressionStatement","src":"14272:20:27"},{"nativeSrc":"14305:43:27","nodeType":"YulAssignment","src":"14305:43:27","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14334:1:27","nodeType":"YulLiteral","src":"14334:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"14337:4:27","nodeType":"YulLiteral","src":"14337:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"14324:9:27","nodeType":"YulIdentifier","src":"14324:9:27"},"nativeSrc":"14324:18:27","nodeType":"YulFunctionCall","src":"14324:18:27"},{"name":"pos","nativeSrc":"14344:3:27","nodeType":"YulIdentifier","src":"14344:3:27"}],"functionName":{"name":"add","nativeSrc":"14320:3:27","nodeType":"YulIdentifier","src":"14320:3:27"},"nativeSrc":"14320:28:27","nodeType":"YulFunctionCall","src":"14320:28:27"},"variableNames":[{"name":"result.slot","nativeSrc":"14305:11:27","nodeType":"YulIdentifier","src":"14305:11:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7458,"isOffset":false,"isSlot":false,"src":"14344:3:27","valueSize":1},{"declaration":7462,"isOffset":false,"isSlot":true,"src":"14305:11:27","suffix":"slot","valueSize":1},{"declaration":7456,"isOffset":false,"isSlot":true,"src":"14282:9:27","suffix":"slot","valueSize":1}],"id":7464,"nodeType":"InlineAssembly","src":"14249:109:27"}]},"documentation":{"id":7452,"nodeType":"StructuredDocumentation","src":"13962:132:27","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7466,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"14108:13:27","nodeType":"FunctionDefinition","parameters":{"id":7459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7456,"mutability":"mutable","name":"self","nameLocation":"14155:4:27","nodeType":"VariableDeclaration","scope":7466,"src":"14131:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"},"typeName":{"baseType":{"id":7454,"nodeType":"UserDefinedTypeName","pathNode":{"id":7453,"name":"Checkpoint208","nameLocations":["14131:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"14131:13:27"},"referencedDeclaration":6955,"src":"14131:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"id":7455,"nodeType":"ArrayTypeName","src":"14131:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint208_$6955_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint208[]"}},"visibility":"internal"},{"constant":false,"id":7458,"mutability":"mutable","name":"pos","nameLocation":"14177:3:27","nodeType":"VariableDeclaration","scope":7466,"src":"14169:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7457,"name":"uint256","nodeType":"ElementaryTypeName","src":"14169:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14121:65:27"},"returnParameters":{"id":7463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7462,"mutability":"mutable","name":"result","nameLocation":"14231:6:27","nodeType":"VariableDeclaration","scope":7466,"src":"14209:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"},"typeName":{"id":7461,"nodeType":"UserDefinedTypeName","pathNode":{"id":7460,"name":"Checkpoint208","nameLocations":["14209:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":6955,"src":"14209:13:27"},"referencedDeclaration":6955,"src":"14209:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint208_$6955_storage_ptr","typeString":"struct Checkpoints.Checkpoint208"}},"visibility":"internal"}],"src":"14208:30:27"},"scope":7988,"src":"14099:265:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"canonicalName":"Checkpoints.Trace160","id":7471,"members":[{"constant":false,"id":7470,"mutability":"mutable","name":"_checkpoints","nameLocation":"14412:12:27","nodeType":"VariableDeclaration","scope":7471,"src":"14396:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7468,"nodeType":"UserDefinedTypeName","pathNode":{"id":7467,"name":"Checkpoint160","nameLocations":["14396:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"14396:13:27"},"referencedDeclaration":7476,"src":"14396:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7469,"nodeType":"ArrayTypeName","src":"14396:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"}],"name":"Trace160","nameLocation":"14377:8:27","nodeType":"StructDefinition","scope":7988,"src":"14370:61:27","visibility":"public"},{"canonicalName":"Checkpoints.Checkpoint160","id":7476,"members":[{"constant":false,"id":7473,"mutability":"mutable","name":"_key","nameLocation":"14475:4:27","nodeType":"VariableDeclaration","scope":7476,"src":"14468:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7472,"name":"uint96","nodeType":"ElementaryTypeName","src":"14468:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7475,"mutability":"mutable","name":"_value","nameLocation":"14497:6:27","nodeType":"VariableDeclaration","scope":7476,"src":"14489:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7474,"name":"uint160","nodeType":"ElementaryTypeName","src":"14489:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"Checkpoint160","nameLocation":"14444:13:27","nodeType":"StructDefinition","scope":7988,"src":"14437:73:27","visibility":"public"},{"body":{"id":7498,"nodeType":"Block","src":"14923:62:27","statements":[{"expression":{"arguments":[{"expression":{"id":7492,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"14948:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14953:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"14948:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7494,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"14967:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"14972:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7491,"name":"_insert","nodeType":"Identifier","overloadedDeclarations":[6826,7347,7868],"referencedDeclaration":7868,"src":"14940:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint160_$returns$_t_uint160_$_t_uint160_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint160) returns (uint160,uint160)"}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14940:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":7490,"id":7497,"nodeType":"Return","src":"14933:45:27"}]},"documentation":{"id":7477,"nodeType":"StructuredDocumentation","src":"14516:302:27","text":" @dev Pushes a (`key`, `value`) pair into a Trace160 so that it is stored as the checkpoint.\n Returns previous value and new value.\n IMPORTANT: Never accept `key` as a user input, since an arbitrary `type(uint96).max` key set will disable the\n library."},"id":7499,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"14832:4:27","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"self","nameLocation":"14854:4:27","nodeType":"VariableDeclaration","scope":7499,"src":"14837:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7479,"nodeType":"UserDefinedTypeName","pathNode":{"id":7478,"name":"Trace160","nameLocations":["14837:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"14837:8:27"},"referencedDeclaration":7471,"src":"14837:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7482,"mutability":"mutable","name":"key","nameLocation":"14867:3:27","nodeType":"VariableDeclaration","scope":7499,"src":"14860:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7481,"name":"uint96","nodeType":"ElementaryTypeName","src":"14860:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7484,"mutability":"mutable","name":"value","nameLocation":"14880:5:27","nodeType":"VariableDeclaration","scope":7499,"src":"14872:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7483,"name":"uint160","nodeType":"ElementaryTypeName","src":"14872:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14836:50:27"},"returnParameters":{"id":7490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7499,"src":"14905:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7486,"name":"uint160","nodeType":"ElementaryTypeName","src":"14905:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":7489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7499,"src":"14914:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7488,"name":"uint160","nodeType":"ElementaryTypeName","src":"14914:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"14904:18:27"},"scope":7988,"src":"14823:162:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7538,"nodeType":"Block","src":"15238:207:27","statements":[{"assignments":[7511],"declarations":[{"constant":false,"id":7511,"mutability":"mutable","name":"len","nameLocation":"15256:3:27","nodeType":"VariableDeclaration","scope":7538,"src":"15248:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7510,"name":"uint256","nodeType":"ElementaryTypeName","src":"15248:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7515,"initialValue":{"expression":{"expression":{"id":7512,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"15262:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15267:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15262:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15280:6:27","memberName":"length","nodeType":"MemberAccess","src":"15262:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15248:38:27"},{"assignments":[7517],"declarations":[{"constant":false,"id":7517,"mutability":"mutable","name":"pos","nameLocation":"15304:3:27","nodeType":"VariableDeclaration","scope":7538,"src":"15296:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7516,"name":"uint256","nodeType":"ElementaryTypeName","src":"15296:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7525,"initialValue":{"arguments":[{"expression":{"id":7519,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"15329:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15334:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15329:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7521,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7505,"src":"15348:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15353:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7523,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"15356:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7518,"name":"_lowerBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6930,7451,7972],"referencedDeclaration":7972,"src":"15310:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15310:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15296:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7526,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"15377:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7527,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"15384:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7531,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"15408:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15413:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15408:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7533,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"15427:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7530,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"15394:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15394:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15432:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"15394:44:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15377:61:27","trueExpression":{"hexValue":"30","id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15390:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7509,"id":7537,"nodeType":"Return","src":"15370:68:27"}]},"documentation":{"id":7500,"nodeType":"StructuredDocumentation","src":"14991:154:27","text":" @dev Returns the value in the first (oldest) checkpoint with key greater or equal than the search key, or zero if\n there is none."},"id":7539,"implemented":true,"kind":"function","modifiers":[],"name":"lowerLookup","nameLocation":"15159:11:27","nodeType":"FunctionDefinition","parameters":{"id":7506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7503,"mutability":"mutable","name":"self","nameLocation":"15188:4:27","nodeType":"VariableDeclaration","scope":7539,"src":"15171:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7502,"nodeType":"UserDefinedTypeName","pathNode":{"id":7501,"name":"Trace160","nameLocations":["15171:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"15171:8:27"},"referencedDeclaration":7471,"src":"15171:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7505,"mutability":"mutable","name":"key","nameLocation":"15201:3:27","nodeType":"VariableDeclaration","scope":7539,"src":"15194:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7504,"name":"uint96","nodeType":"ElementaryTypeName","src":"15194:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15170:35:27"},"returnParameters":{"id":7509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7539,"src":"15229:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7507,"name":"uint160","nodeType":"ElementaryTypeName","src":"15229:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15228:9:27"},"scope":7988,"src":"15150:295:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7580,"nodeType":"Block","src":"15700:209:27","statements":[{"assignments":[7551],"declarations":[{"constant":false,"id":7551,"mutability":"mutable","name":"len","nameLocation":"15718:3:27","nodeType":"VariableDeclaration","scope":7580,"src":"15710:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7550,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7555,"initialValue":{"expression":{"expression":{"id":7552,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"15724:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15729:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15724:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15742:6:27","memberName":"length","nodeType":"MemberAccess","src":"15724:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15710:38:27"},{"assignments":[7557],"declarations":[{"constant":false,"id":7557,"mutability":"mutable","name":"pos","nameLocation":"15766:3:27","nodeType":"VariableDeclaration","scope":7580,"src":"15758:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7556,"name":"uint256","nodeType":"ElementaryTypeName","src":"15758:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7565,"initialValue":{"arguments":[{"expression":{"id":7559,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"15791:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15796:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15791:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7561,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"15810:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":7562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15815:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7563,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"15818:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7558,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":7920,"src":"15772:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15772:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15758:64:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7566,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"15839:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15846:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15839:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7571,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"15868:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"15868:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7573,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7557,"src":"15887:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15893:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15887:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7570,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"15854:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15854:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15896:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"15854:48:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15839:63:27","trueExpression":{"hexValue":"30","id":7569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7549,"id":7579,"nodeType":"Return","src":"15832:70:27"}]},"documentation":{"id":7540,"nodeType":"StructuredDocumentation","src":"15451:156:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none."},"id":7581,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookup","nameLocation":"15621:11:27","nodeType":"FunctionDefinition","parameters":{"id":7546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"self","nameLocation":"15650:4:27","nodeType":"VariableDeclaration","scope":7581,"src":"15633:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7542,"nodeType":"UserDefinedTypeName","pathNode":{"id":7541,"name":"Trace160","nameLocations":["15633:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"15633:8:27"},"referencedDeclaration":7471,"src":"15633:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7545,"mutability":"mutable","name":"key","nameLocation":"15663:3:27","nodeType":"VariableDeclaration","scope":7581,"src":"15656:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7544,"name":"uint96","nodeType":"ElementaryTypeName","src":"15656:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"15632:35:27"},"returnParameters":{"id":7549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7581,"src":"15691:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7547,"name":"uint160","nodeType":"ElementaryTypeName","src":"15691:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"15690:9:27"},"scope":7988,"src":"15612:297:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7665,"nodeType":"Block","src":"16308:512:27","statements":[{"assignments":[7593],"declarations":[{"constant":false,"id":7593,"mutability":"mutable","name":"len","nameLocation":"16326:3:27","nodeType":"VariableDeclaration","scope":7665,"src":"16318:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7592,"name":"uint256","nodeType":"ElementaryTypeName","src":"16318:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7597,"initialValue":{"expression":{"expression":{"id":7594,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"16332:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16337:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"16332:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16350:6:27","memberName":"length","nodeType":"MemberAccess","src":"16332:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16318:38:27"},{"assignments":[7599],"declarations":[{"constant":false,"id":7599,"mutability":"mutable","name":"low","nameLocation":"16375:3:27","nodeType":"VariableDeclaration","scope":7665,"src":"16367:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7598,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7601,"initialValue":{"hexValue":"30","id":7600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16381:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16367:15:27"},{"assignments":[7603],"declarations":[{"constant":false,"id":7603,"mutability":"mutable","name":"high","nameLocation":"16400:4:27","nodeType":"VariableDeclaration","scope":7665,"src":"16392:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7602,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7605,"initialValue":{"id":7604,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"16407:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16392:18:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7606,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"16425:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16431:1:27","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"16425:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7640,"nodeType":"IfStatement","src":"16421:234:27","trueBody":{"id":7639,"nodeType":"Block","src":"16434:221:27","statements":[{"assignments":[7610],"declarations":[{"constant":false,"id":7610,"mutability":"mutable","name":"mid","nameLocation":"16456:3:27","nodeType":"VariableDeclaration","scope":7639,"src":"16448:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7609,"name":"uint256","nodeType":"ElementaryTypeName","src":"16448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7611,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"16462:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7614,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"16478:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16468:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16473:4:27","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4045,"src":"16468:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16468:14:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16462:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16448:34:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7618,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"16500:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"expression":{"id":7620,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"16520:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16525:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"16520:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7622,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"16539:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7619,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"16506:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16506:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16544:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"16506:42:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"16500:48:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7637,"nodeType":"Block","src":"16599:46:27","statements":[{"expression":{"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7631,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"16617:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7632,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"16623:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16629:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16623:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7636,"nodeType":"ExpressionStatement","src":"16617:13:27"}]},"id":7638,"nodeType":"IfStatement","src":"16496:149:27","trueBody":{"id":7630,"nodeType":"Block","src":"16550:43:27","statements":[{"expression":{"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7626,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"16568:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7627,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"16575:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16568:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7629,"nodeType":"ExpressionStatement","src":"16568:10:27"}]}}]}},{"assignments":[7642],"declarations":[{"constant":false,"id":7642,"mutability":"mutable","name":"pos","nameLocation":"16673:3:27","nodeType":"VariableDeclaration","scope":7665,"src":"16665:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7641,"name":"uint256","nodeType":"ElementaryTypeName","src":"16665:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7650,"initialValue":{"arguments":[{"expression":{"id":7644,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"16698:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16703:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"16698:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"id":7646,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"16717:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7647,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"16722:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7648,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"16727:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7643,"name":"_upperBinaryLookup","nodeType":"Identifier","overloadedDeclarations":[6878,7399,7920],"referencedDeclaration":7920,"src":"16679:18:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint96_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint96,uint256,uint256) view returns (uint256)"}},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16679:53:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16665:67:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7651,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"16750:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16757:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16750:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7656,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"16779:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16784:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"16779:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7642,"src":"16798:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16804:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16798:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7655,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"16765:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16765:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16807:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"16765:48:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"16750:63:27","trueExpression":{"hexValue":"30","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16761:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7591,"id":7664,"nodeType":"Return","src":"16743:70:27"}]},"documentation":{"id":7582,"nodeType":"StructuredDocumentation","src":"15915:294:27","text":" @dev Returns the value in the last (most recent) checkpoint with key lower or equal than the search key, or zero\n if there is none.\n NOTE: This is a variant of {upperLookup} that is optimised to find \"recent\" checkpoint (checkpoints with high\n keys)."},"id":7666,"implemented":true,"kind":"function","modifiers":[],"name":"upperLookupRecent","nameLocation":"16223:17:27","nodeType":"FunctionDefinition","parameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7585,"mutability":"mutable","name":"self","nameLocation":"16258:4:27","nodeType":"VariableDeclaration","scope":7666,"src":"16241:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7584,"nodeType":"UserDefinedTypeName","pathNode":{"id":7583,"name":"Trace160","nameLocations":["16241:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"16241:8:27"},"referencedDeclaration":7471,"src":"16241:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7587,"mutability":"mutable","name":"key","nameLocation":"16271:3:27","nodeType":"VariableDeclaration","scope":7666,"src":"16264:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7586,"name":"uint96","nodeType":"ElementaryTypeName","src":"16264:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"16240:35:27"},"returnParameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7666,"src":"16299:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7589,"name":"uint160","nodeType":"ElementaryTypeName","src":"16299:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"16298:9:27"},"scope":7988,"src":"16214:606:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7695,"nodeType":"Block","src":"17011:135:27","statements":[{"assignments":[7676],"declarations":[{"constant":false,"id":7676,"mutability":"mutable","name":"pos","nameLocation":"17029:3:27","nodeType":"VariableDeclaration","scope":7695,"src":"17021:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7675,"name":"uint256","nodeType":"ElementaryTypeName","src":"17021:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7680,"initialValue":{"expression":{"expression":{"id":7677,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"17035:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17040:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"17035:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17053:6:27","memberName":"length","nodeType":"MemberAccess","src":"17035:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17021:38:27"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7681,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"17076:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17083:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17076:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"expression":{"id":7686,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7670,"src":"17105:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17110:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"17105:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7688,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7676,"src":"17124:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17130:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17124:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7685,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"17091:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17091:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17133:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"17091:48:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"17076:63:27","trueExpression":{"hexValue":"30","id":7684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17087:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7674,"id":7694,"nodeType":"Return","src":"17069:70:27"}]},"documentation":{"id":7667,"nodeType":"StructuredDocumentation","src":"16826:109:27","text":" @dev Returns the value in the most recent checkpoint, or zero if there are no checkpoints."},"id":7696,"implemented":true,"kind":"function","modifiers":[],"name":"latest","nameLocation":"16949:6:27","nodeType":"FunctionDefinition","parameters":{"id":7671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7670,"mutability":"mutable","name":"self","nameLocation":"16973:4:27","nodeType":"VariableDeclaration","scope":7696,"src":"16956:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7669,"nodeType":"UserDefinedTypeName","pathNode":{"id":7668,"name":"Trace160","nameLocations":["16956:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"16956:8:27"},"referencedDeclaration":7471,"src":"16956:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"16955:23:27"},"returnParameters":{"id":7674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7696,"src":"17002:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7672,"name":"uint160","nodeType":"ElementaryTypeName","src":"17002:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17001:9:27"},"scope":7988,"src":"16940:206:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7744,"nodeType":"Block","src":"17439:274:27","statements":[{"assignments":[7710],"declarations":[{"constant":false,"id":7710,"mutability":"mutable","name":"pos","nameLocation":"17457:3:27","nodeType":"VariableDeclaration","scope":7744,"src":"17449:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7709,"name":"uint256","nodeType":"ElementaryTypeName","src":"17449:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7714,"initialValue":{"expression":{"expression":{"id":7711,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"17463:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17468:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"17463:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17481:6:27","memberName":"length","nodeType":"MemberAccess","src":"17463:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17449:38:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7715,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"17501:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17508:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17501:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7742,"nodeType":"Block","src":"17562:145:27","statements":[{"assignments":[7726],"declarations":[{"constant":false,"id":7726,"mutability":"mutable","name":"ckpt","nameLocation":"17597:4:27","nodeType":"VariableDeclaration","scope":7742,"src":"17576:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7725,"nodeType":"UserDefinedTypeName","pathNode":{"id":7724,"name":"Checkpoint160","nameLocations":["17576:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"17576:13:27"},"referencedDeclaration":7476,"src":"17576:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":7734,"initialValue":{"arguments":[{"expression":{"id":7728,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7700,"src":"17618:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17623:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"17618:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7730,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"17637:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17643:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17637:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7727,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"17604:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17604:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17576:69:27"},{"expression":{"components":[{"hexValue":"74727565","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17667:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":7736,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"17673:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17678:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"17673:9:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"id":7738,"name":"ckpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"17684:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17689:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"17684:11:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17666:30:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint96_$_t_uint160_$","typeString":"tuple(bool,uint96,uint160)"}},"functionReturnParameters":7708,"id":7741,"nodeType":"Return","src":"17659:37:27"}]},"id":7743,"nodeType":"IfStatement","src":"17497:210:27","trueBody":{"id":7723,"nodeType":"Block","src":"17511:45:27","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":7718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17533:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17540:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17543:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17532:13:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0,int_const 0)"}},"functionReturnParameters":7708,"id":7722,"nodeType":"Return","src":"17525:20:27"}]}}]},"documentation":{"id":7697,"nodeType":"StructuredDocumentation","src":"17152:168:27","text":" @dev Returns whether there is a checkpoint in the structure (i.e. it is not empty), and if so the key and value\n in the most recent checkpoint."},"id":7745,"implemented":true,"kind":"function","modifiers":[],"name":"latestCheckpoint","nameLocation":"17334:16:27","nodeType":"FunctionDefinition","parameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"self","nameLocation":"17368:4:27","nodeType":"VariableDeclaration","scope":7745,"src":"17351:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7699,"nodeType":"UserDefinedTypeName","pathNode":{"id":7698,"name":"Trace160","nameLocations":["17351:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"17351:8:27"},"referencedDeclaration":7471,"src":"17351:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17350:23:27"},"returnParameters":{"id":7708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7703,"mutability":"mutable","name":"exists","nameLocation":"17402:6:27","nodeType":"VariableDeclaration","scope":7745,"src":"17397:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7702,"name":"bool","nodeType":"ElementaryTypeName","src":"17397:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7705,"mutability":"mutable","name":"_key","nameLocation":"17417:4:27","nodeType":"VariableDeclaration","scope":7745,"src":"17410:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7704,"name":"uint96","nodeType":"ElementaryTypeName","src":"17410:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7707,"mutability":"mutable","name":"_value","nameLocation":"17431:6:27","nodeType":"VariableDeclaration","scope":7745,"src":"17423:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7706,"name":"uint160","nodeType":"ElementaryTypeName","src":"17423:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"17396:42:27"},"scope":7988,"src":"17325:388:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7758,"nodeType":"Block","src":"17852:48:27","statements":[{"expression":{"expression":{"expression":{"id":7754,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"17869:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17874:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"17869:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17887:6:27","memberName":"length","nodeType":"MemberAccess","src":"17869:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7753,"id":7757,"nodeType":"Return","src":"17862:31:27"}]},"documentation":{"id":7746,"nodeType":"StructuredDocumentation","src":"17719:57:27","text":" @dev Returns the number of checkpoint."},"id":7759,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"17790:6:27","nodeType":"FunctionDefinition","parameters":{"id":7750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7749,"mutability":"mutable","name":"self","nameLocation":"17814:4:27","nodeType":"VariableDeclaration","scope":7759,"src":"17797:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7748,"nodeType":"UserDefinedTypeName","pathNode":{"id":7747,"name":"Trace160","nameLocations":["17797:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"17797:8:27"},"referencedDeclaration":7471,"src":"17797:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"}],"src":"17796:23:27"},"returnParameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7759,"src":"17843:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7751,"name":"uint256","nodeType":"ElementaryTypeName","src":"17843:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17842:9:27"},"scope":7988,"src":"17781:119:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7776,"nodeType":"Block","src":"18064:46:27","statements":[{"expression":{"baseExpression":{"expression":{"id":7771,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"18081:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160 storage pointer"}},"id":7772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18086:12:27","memberName":"_checkpoints","nodeType":"MemberAccess","referencedDeclaration":7470,"src":"18081:17:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage ref"}},"id":7774,"indexExpression":{"id":7773,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"18099:3:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18081:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage","typeString":"struct Checkpoints.Checkpoint160 storage ref"}},"functionReturnParameters":7770,"id":7775,"nodeType":"Return","src":"18074:29:27"}]},"documentation":{"id":7760,"nodeType":"StructuredDocumentation","src":"17906:61:27","text":" @dev Returns checkpoint at given position."},"id":7777,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"17981:2:27","nodeType":"FunctionDefinition","parameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7763,"mutability":"mutable","name":"self","nameLocation":"18001:4:27","nodeType":"VariableDeclaration","scope":7777,"src":"17984:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"},"typeName":{"id":7762,"nodeType":"UserDefinedTypeName","pathNode":{"id":7761,"name":"Trace160","nameLocations":["17984:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":7471,"src":"17984:8:27"},"referencedDeclaration":7471,"src":"17984:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_Trace160_$7471_storage_ptr","typeString":"struct Checkpoints.Trace160"}},"visibility":"internal"},{"constant":false,"id":7765,"mutability":"mutable","name":"pos","nameLocation":"18014:3:27","nodeType":"VariableDeclaration","scope":7777,"src":"18007:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7764,"name":"uint32","nodeType":"ElementaryTypeName","src":"18007:6:27","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"17983:35:27"},"returnParameters":{"id":7770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7777,"src":"18042:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7768,"nodeType":"UserDefinedTypeName","pathNode":{"id":7767,"name":"Checkpoint160","nameLocations":["18042:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"18042:13:27"},"referencedDeclaration":7476,"src":"18042:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"18041:22:27"},"scope":7988,"src":"17972:138:27","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7867,"nodeType":"Block","src":"18395:761:27","statements":[{"assignments":[7794],"declarations":[{"constant":false,"id":7794,"mutability":"mutable","name":"pos","nameLocation":"18413:3:27","nodeType":"VariableDeclaration","scope":7867,"src":"18405:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"18405:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7797,"initialValue":{"expression":{"id":7795,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18419:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18424:6:27","memberName":"length","nodeType":"MemberAccess","src":"18419:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18405:25:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7798,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"18445:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18451:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18445:7:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7865,"nodeType":"Block","src":"19042:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7856,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"19087:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"19100:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7855,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"19066:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["19081:4:27","19092:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"19066:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":7852,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"19056:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19061:4:27","memberName":"push","nodeType":"MemberAccess","src":"19056:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7476_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19056:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7860,"nodeType":"ExpressionStatement","src":"19056:52:27"},{"expression":{"components":[{"hexValue":"30","id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19130:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"19133:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19129:10:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_uint160_$","typeString":"tuple(int_const 0,uint160)"}},"functionReturnParameters":7792,"id":7864,"nodeType":"Return","src":"19122:17:27"}]},"id":7866,"nodeType":"IfStatement","src":"18441:709:27","trueBody":{"id":7851,"nodeType":"Block","src":"18454:582:27","statements":[{"assignments":[7803],"declarations":[{"constant":false,"id":7803,"mutability":"mutable","name":"last","nameLocation":"18541:4:27","nodeType":"VariableDeclaration","scope":7851,"src":"18520:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7802,"nodeType":"UserDefinedTypeName","pathNode":{"id":7801,"name":"Checkpoint160","nameLocations":["18520:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"18520:13:27"},"referencedDeclaration":7476,"src":"18520:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"id":7810,"initialValue":{"arguments":[{"id":7805,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18562:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7806,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"18568:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18574:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18568:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7804,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"18548:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18548:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"18520:56:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7811,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"18650:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18655:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"18650:9:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7813,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"18662:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18650:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7819,"nodeType":"IfStatement","src":"18646:91:27","trueBody":{"id":7818,"nodeType":"Block","src":"18667:70:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7815,"name":"CheckpointUnorderedInsertion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"18692:28:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18692:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7817,"nodeType":"RevertStatement","src":"18685:37:27"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7820,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"18800:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18805:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"18800:9:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7822,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"18813:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18800:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7844,"nodeType":"Block","src":"18900:85:27","statements":[{"expression":{"arguments":[{"arguments":[{"id":7839,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"18949:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":7840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"18962:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7838,"name":"Checkpoint160","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"18928:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"type(struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["18943:4:27","18954:6:27"],"names":["_key","_value"],"nodeType":"FunctionCall","src":"18928:41:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}],"expression":{"id":7835,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18918:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},"id":7837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18923:4:27","memberName":"push","nodeType":"MemberAccess","src":"18918:9:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint160_$7476_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,struct Checkpoints.Checkpoint160 storage ref)"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18918:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7843,"nodeType":"ExpressionStatement","src":"18918:52:27"}]},"id":7845,"nodeType":"IfStatement","src":"18796:189:27","trueBody":{"id":7834,"nodeType":"Block","src":"18818:76:27","statements":[{"expression":{"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":7825,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7782,"src":"18850:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7826,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"18856:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18862:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18856:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7824,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"18836:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18836:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18865:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"18836:35:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"18874:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"18836:43:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":7833,"nodeType":"ExpressionStatement","src":"18836:43:27"}]}},{"expression":{"components":[{"expression":{"id":7846,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7803,"src":"19006:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_memory_ptr","typeString":"struct Checkpoints.Checkpoint160 memory"}},"id":7847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19011:6:27","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":7475,"src":"19006:11:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":7848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"19019:5:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":7849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19005:20:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"functionReturnParameters":7792,"id":7850,"nodeType":"Return","src":"18998:27:27"}]}}]},"documentation":{"id":7778,"nodeType":"StructuredDocumentation","src":"18116:165:27","text":" @dev Pushes a (`key`, `value`) pair into an ordered list of checkpoints, either by inserting a new checkpoint,\n or by updating the last one."},"id":7868,"implemented":true,"kind":"function","modifiers":[],"name":"_insert","nameLocation":"18295:7:27","nodeType":"FunctionDefinition","parameters":{"id":7787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7782,"mutability":"mutable","name":"self","nameLocation":"18327:4:27","nodeType":"VariableDeclaration","scope":7868,"src":"18303:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7780,"nodeType":"UserDefinedTypeName","pathNode":{"id":7779,"name":"Checkpoint160","nameLocations":["18303:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"18303:13:27"},"referencedDeclaration":7476,"src":"18303:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7781,"nodeType":"ArrayTypeName","src":"18303:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7784,"mutability":"mutable","name":"key","nameLocation":"18340:3:27","nodeType":"VariableDeclaration","scope":7868,"src":"18333:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7783,"name":"uint96","nodeType":"ElementaryTypeName","src":"18333:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7786,"mutability":"mutable","name":"value","nameLocation":"18353:5:27","nodeType":"VariableDeclaration","scope":7868,"src":"18345:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7785,"name":"uint160","nodeType":"ElementaryTypeName","src":"18345:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18302:57:27"},"returnParameters":{"id":7792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7868,"src":"18377:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7788,"name":"uint160","nodeType":"ElementaryTypeName","src":"18377:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":7791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7868,"src":"18386:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7790,"name":"uint160","nodeType":"ElementaryTypeName","src":"18386:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18376:18:27"},"scope":7988,"src":"18286:870:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7919,"nodeType":"Block","src":"19675:267:27","statements":[{"body":{"id":7915,"nodeType":"Block","src":"19704:211:27","statements":[{"assignments":[7888],"declarations":[{"constant":false,"id":7888,"mutability":"mutable","name":"mid","nameLocation":"19726:3:27","nodeType":"VariableDeclaration","scope":7915,"src":"19718:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7887,"name":"uint256","nodeType":"ElementaryTypeName","src":"19718:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7894,"initialValue":{"arguments":[{"id":7891,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"19745:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7892,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"19750:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7889,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"19732:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19737:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"19732:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19732:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19718:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7896,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7873,"src":"19787:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":7897,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"19793:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7895,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"19773:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19773:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19798:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"19773:29:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7900,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7875,"src":"19805:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"19773:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7913,"nodeType":"Block","src":"19859:46:27","statements":[{"expression":{"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7907,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"19877:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7908,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"19883:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19889:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19883:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19877:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7912,"nodeType":"ExpressionStatement","src":"19877:13:27"}]},"id":7914,"nodeType":"IfStatement","src":"19769:136:27","trueBody":{"id":7906,"nodeType":"Block","src":"19810:43:27","statements":[{"expression":{"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7902,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"19828:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7903,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"19835:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19828:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7905,"nodeType":"ExpressionStatement","src":"19828:10:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7884,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7877,"src":"19692:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7885,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"19698:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19692:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7916,"nodeType":"WhileStatement","src":"19685:230:27"},{"expression":{"id":7917,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"19931:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7883,"id":7918,"nodeType":"Return","src":"19924:11:27"}]},"documentation":{"id":7869,"nodeType":"StructuredDocumentation","src":"19162:342:27","text":" @dev Return the index of the last (most recent) checkpoint with key lower or equal than the search key, or `high`\n if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and exclusive\n `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7920,"implemented":true,"kind":"function","modifiers":[],"name":"_upperBinaryLookup","nameLocation":"19518:18:27","nodeType":"FunctionDefinition","parameters":{"id":7880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7873,"mutability":"mutable","name":"self","nameLocation":"19570:4:27","nodeType":"VariableDeclaration","scope":7920,"src":"19546:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7871,"nodeType":"UserDefinedTypeName","pathNode":{"id":7870,"name":"Checkpoint160","nameLocations":["19546:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"19546:13:27"},"referencedDeclaration":7476,"src":"19546:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7872,"nodeType":"ArrayTypeName","src":"19546:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7875,"mutability":"mutable","name":"key","nameLocation":"19591:3:27","nodeType":"VariableDeclaration","scope":7920,"src":"19584:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7874,"name":"uint96","nodeType":"ElementaryTypeName","src":"19584:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7877,"mutability":"mutable","name":"low","nameLocation":"19612:3:27","nodeType":"VariableDeclaration","scope":7920,"src":"19604:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7876,"name":"uint256","nodeType":"ElementaryTypeName","src":"19604:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7879,"mutability":"mutable","name":"high","nameLocation":"19633:4:27","nodeType":"VariableDeclaration","scope":7920,"src":"19625:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7878,"name":"uint256","nodeType":"ElementaryTypeName","src":"19625:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19536:107:27"},"returnParameters":{"id":7883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7920,"src":"19666:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7881,"name":"uint256","nodeType":"ElementaryTypeName","src":"19666:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19665:9:27"},"scope":7988,"src":"19509:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7971,"nodeType":"Block","src":"20462:267:27","statements":[{"body":{"id":7967,"nodeType":"Block","src":"20491:211:27","statements":[{"assignments":[7940],"declarations":[{"constant":false,"id":7940,"mutability":"mutable","name":"mid","nameLocation":"20513:3:27","nodeType":"VariableDeclaration","scope":7967,"src":"20505:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7939,"name":"uint256","nodeType":"ElementaryTypeName","src":"20505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7946,"initialValue":{"arguments":[{"id":7943,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"20532:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7944,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"20537:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7941,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"20519:4:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20524:7:27","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3730,"src":"20519:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20505:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7948,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"20574:4:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"}},{"id":7949,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"20580:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7947,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[6945,7466,7987],"referencedDeclaration":7987,"src":"20560:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint160_$7476_storage_ptr_$","typeString":"function (struct Checkpoints.Checkpoint160 storage ref[] storage pointer,uint256) pure returns (struct Checkpoints.Checkpoint160 storage pointer)"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20560:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160 storage pointer"}},"id":7951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20585:4:27","memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":7473,"src":"20560:29:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7952,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7927,"src":"20592:3:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"20560:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7965,"nodeType":"Block","src":"20649:43:27","statements":[{"expression":{"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7961,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"20667:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7962,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"20674:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20667:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7964,"nodeType":"ExpressionStatement","src":"20667:10:27"}]},"id":7966,"nodeType":"IfStatement","src":"20556:136:27","trueBody":{"id":7960,"nodeType":"Block","src":"20597:46:27","statements":[{"expression":{"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7954,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"20615:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7955,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7940,"src":"20621:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20627:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20621:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20615:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7959,"nodeType":"ExpressionStatement","src":"20615:13:27"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7936,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7929,"src":"20479:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7937,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"20485:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20479:10:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7968,"nodeType":"WhileStatement","src":"20472:230:27"},{"expression":{"id":7969,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"20718:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7935,"id":7970,"nodeType":"Return","src":"20711:11:27"}]},"documentation":{"id":7921,"nodeType":"StructuredDocumentation","src":"19948:343:27","text":" @dev Return the index of the first (oldest) checkpoint with key is greater or equal than the search key, or\n `high` if there is none. `low` and `high` define a section where to do the search, with inclusive `low` and\n exclusive `high`.\n WARNING: `high` should not be greater than the array's length."},"id":7972,"implemented":true,"kind":"function","modifiers":[],"name":"_lowerBinaryLookup","nameLocation":"20305:18:27","nodeType":"FunctionDefinition","parameters":{"id":7932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7925,"mutability":"mutable","name":"self","nameLocation":"20357:4:27","nodeType":"VariableDeclaration","scope":7972,"src":"20333:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7923,"nodeType":"UserDefinedTypeName","pathNode":{"id":7922,"name":"Checkpoint160","nameLocations":["20333:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"20333:13:27"},"referencedDeclaration":7476,"src":"20333:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7924,"nodeType":"ArrayTypeName","src":"20333:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7927,"mutability":"mutable","name":"key","nameLocation":"20378:3:27","nodeType":"VariableDeclaration","scope":7972,"src":"20371:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7926,"name":"uint96","nodeType":"ElementaryTypeName","src":"20371:6:27","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":7929,"mutability":"mutable","name":"low","nameLocation":"20399:3:27","nodeType":"VariableDeclaration","scope":7972,"src":"20391:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7928,"name":"uint256","nodeType":"ElementaryTypeName","src":"20391:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7931,"mutability":"mutable","name":"high","nameLocation":"20420:4:27","nodeType":"VariableDeclaration","scope":7972,"src":"20412:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7930,"name":"uint256","nodeType":"ElementaryTypeName","src":"20412:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20323:107:27"},"returnParameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7972,"src":"20453:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"20453:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20452:9:27"},"scope":7988,"src":"20296:433:27","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7986,"nodeType":"Block","src":"21012:125:27","statements":[{"AST":{"nativeSrc":"21031:100:27","nodeType":"YulBlock","src":"21031:100:27","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21052:1:27","nodeType":"YulLiteral","src":"21052:1:27","type":"","value":"0"},{"name":"self.slot","nativeSrc":"21055:9:27","nodeType":"YulIdentifier","src":"21055:9:27"}],"functionName":{"name":"mstore","nativeSrc":"21045:6:27","nodeType":"YulIdentifier","src":"21045:6:27"},"nativeSrc":"21045:20:27","nodeType":"YulFunctionCall","src":"21045:20:27"},"nativeSrc":"21045:20:27","nodeType":"YulExpressionStatement","src":"21045:20:27"},{"nativeSrc":"21078:43:27","nodeType":"YulAssignment","src":"21078:43:27","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"21107:1:27","nodeType":"YulLiteral","src":"21107:1:27","type":"","value":"0"},{"kind":"number","nativeSrc":"21110:4:27","nodeType":"YulLiteral","src":"21110:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"21097:9:27","nodeType":"YulIdentifier","src":"21097:9:27"},"nativeSrc":"21097:18:27","nodeType":"YulFunctionCall","src":"21097:18:27"},{"name":"pos","nativeSrc":"21117:3:27","nodeType":"YulIdentifier","src":"21117:3:27"}],"functionName":{"name":"add","nativeSrc":"21093:3:27","nodeType":"YulIdentifier","src":"21093:3:27"},"nativeSrc":"21093:28:27","nodeType":"YulFunctionCall","src":"21093:28:27"},"variableNames":[{"name":"result.slot","nativeSrc":"21078:11:27","nodeType":"YulIdentifier","src":"21078:11:27"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7979,"isOffset":false,"isSlot":false,"src":"21117:3:27","valueSize":1},{"declaration":7983,"isOffset":false,"isSlot":true,"src":"21078:11:27","suffix":"slot","valueSize":1},{"declaration":7977,"isOffset":false,"isSlot":true,"src":"21055:9:27","suffix":"slot","valueSize":1}],"id":7985,"nodeType":"InlineAssembly","src":"21022:109:27"}]},"documentation":{"id":7973,"nodeType":"StructuredDocumentation","src":"20735:132:27","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":7987,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"20881:13:27","nodeType":"FunctionDefinition","parameters":{"id":7980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7977,"mutability":"mutable","name":"self","nameLocation":"20928:4:27","nodeType":"VariableDeclaration","scope":7987,"src":"20904:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"},"typeName":{"baseType":{"id":7975,"nodeType":"UserDefinedTypeName","pathNode":{"id":7974,"name":"Checkpoint160","nameLocations":["20904:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"20904:13:27"},"referencedDeclaration":7476,"src":"20904:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"id":7976,"nodeType":"ArrayTypeName","src":"20904:15:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint160_$7476_storage_$dyn_storage_ptr","typeString":"struct Checkpoints.Checkpoint160[]"}},"visibility":"internal"},{"constant":false,"id":7979,"mutability":"mutable","name":"pos","nameLocation":"20950:3:27","nodeType":"VariableDeclaration","scope":7987,"src":"20942:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7978,"name":"uint256","nodeType":"ElementaryTypeName","src":"20942:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20894:65:27"},"returnParameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"result","nameLocation":"21004:6:27","nodeType":"VariableDeclaration","scope":7987,"src":"20982:28:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"},"typeName":{"id":7982,"nodeType":"UserDefinedTypeName","pathNode":{"id":7981,"name":"Checkpoint160","nameLocations":["20982:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":7476,"src":"20982:13:27"},"referencedDeclaration":7476,"src":"20982:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint160_$7476_storage_ptr","typeString":"struct Checkpoints.Checkpoint160"}},"visibility":"internal"}],"src":"20981:30:27"},"scope":7988,"src":"20872:265:27","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":7989,"src":"668:20471:27","usedErrors":[6424],"usedEvents":[]}],"src":"201:20939:27"},"id":27},"@openzeppelin/contracts/utils/types/Time.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/types/Time.sol","exportedSymbols":{"Math":[4556],"SafeCast":[6311],"Time":[8263]},"id":8264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7990,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../math/Math.sol","id":7992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8264,"sourceUnit":4557,"src":"130:38:28","symbolAliases":[{"foreign":{"id":7991,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"138:4:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../math/SafeCast.sol","id":7994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8264,"sourceUnit":6312,"src":"169:46:28","symbolAliases":[{"foreign":{"id":7993,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"177:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Time","contractDependencies":[],"contractKind":"library","documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"217:422:28","text":" @dev This library provides helpers for manipulating time-related objects.\n It uses the following types:\n - `uint48` for timepoints\n - `uint32` for durations\n While the library doesn't provide specific types for timepoints and duration, it does provide:\n - a `Delay` type to represent duration that can be programmed to change value automatically at a given point\n - additional helper functions"},"fullyImplemented":true,"id":8263,"linearizedBaseContracts":[8263],"name":"Time","nameLocation":"648:4:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7997,"libraryName":{"id":7996,"name":"Time","nameLocations":["665:4:28"],"nodeType":"IdentifierPath","referencedDeclaration":8263,"src":"665:4:28"},"nodeType":"UsingForDirective","src":"659:17:28"},{"body":{"id":8009,"nodeType":"Block","src":"802:58:28","statements":[{"expression":{"arguments":[{"expression":{"id":8005,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"837:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"843:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"837:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8003,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"819:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"828:8:28","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"819:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"819:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8002,"id":8008,"nodeType":"Return","src":"812:41:28"}]},"documentation":{"id":7998,"nodeType":"StructuredDocumentation","src":"682:63:28","text":" @dev Get the block timestamp as a Timepoint."},"id":8010,"implemented":true,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"759:9:28","nodeType":"FunctionDefinition","parameters":{"id":7999,"nodeType":"ParameterList","parameters":[],"src":"768:2:28"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8010,"src":"794:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8000,"name":"uint48","nodeType":"ElementaryTypeName","src":"794:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"793:8:28"},"scope":8263,"src":"750:110:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8022,"nodeType":"Block","src":"985:55:28","statements":[{"expression":{"arguments":[{"expression":{"id":8018,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1020:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:6:28","memberName":"number","nodeType":"MemberAccess","src":"1020:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8016,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"1002:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6311_$","typeString":"type(library SafeCast)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1011:8:28","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"1002:17:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8015,"id":8021,"nodeType":"Return","src":"995:38:28"}]},"documentation":{"id":8011,"nodeType":"StructuredDocumentation","src":"866:60:28","text":" @dev Get the block number as a Timepoint."},"id":8023,"implemented":true,"kind":"function","modifiers":[],"name":"blockNumber","nameLocation":"940:11:28","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[],"src":"951:2:28"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8023,"src":"977:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8013,"name":"uint48","nodeType":"ElementaryTypeName","src":"977:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"976:8:28"},"scope":8263,"src":"931:109:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"Time.Delay","id":8025,"name":"Delay","nameLocation":"2377:5:28","nodeType":"UserDefinedValueTypeDefinition","src":"2372:22:28","underlyingType":{"id":8024,"name":"uint112","nodeType":"ElementaryTypeName","src":"2386:7:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}},{"body":{"id":8039,"nodeType":"Block","src":"2572:44:28","statements":[{"expression":{"arguments":[{"id":8036,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"2600:8:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8034,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"2589:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8025_$","typeString":"type(Time.Delay)"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2595:4:28","memberName":"wrap","nodeType":"MemberAccess","src":"2589:10:28","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"functionReturnParameters":8033,"id":8038,"nodeType":"Return","src":"2582:27:28"}]},"documentation":{"id":8026,"nodeType":"StructuredDocumentation","src":"2400:103:28","text":" @dev Wrap a duration into a Delay to add the one-step \"update in the future\" feature"},"id":8040,"implemented":true,"kind":"function","modifiers":[],"name":"toDelay","nameLocation":"2517:7:28","nodeType":"FunctionDefinition","parameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"duration","nameLocation":"2532:8:28","nodeType":"VariableDeclaration","scope":8040,"src":"2525:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8027,"name":"uint32","nodeType":"ElementaryTypeName","src":"2525:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2524:17:28"},"returnParameters":{"id":8033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8040,"src":"2565:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8031,"nodeType":"UserDefinedTypeName","pathNode":{"id":8030,"name":"Delay","nameLocations":["2565:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"2565:5:28"},"referencedDeclaration":8025,"src":"2565:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"2564:7:28"},"scope":8263,"src":"2508:108:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8078,"nodeType":"Block","src":"2964:180:28","statements":[{"assignments":[8056,8058,8060],"declarations":[{"constant":false,"id":8056,"mutability":"mutable","name":"valueBefore","nameLocation":"2982:11:28","nodeType":"VariableDeclaration","scope":8078,"src":"2975:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8055,"name":"uint32","nodeType":"ElementaryTypeName","src":"2975:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8058,"mutability":"mutable","name":"valueAfter","nameLocation":"3002:10:28","nodeType":"VariableDeclaration","scope":8078,"src":"2995:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8057,"name":"uint32","nodeType":"ElementaryTypeName","src":"2995:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8060,"mutability":"mutable","name":"effect","nameLocation":"3021:6:28","nodeType":"VariableDeclaration","scope":8078,"src":"3014:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8059,"name":"uint48","nodeType":"ElementaryTypeName","src":"3014:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":8064,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8061,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"3031:4:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3036:6:28","memberName":"unpack","nodeType":"MemberAccess","referencedDeclaration":8224,"src":"3031:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8025_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (Time.Delay) pure returns (uint32,uint32,uint48)"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3031:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2974:70:28"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8065,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"3061:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8066,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"3071:9:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3061:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"id":8072,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8056,"src":"3105:11:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8073,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"3118:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8074,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8060,"src":"3130:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3104:33:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"id":8076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3061:76:28","trueExpression":{"components":[{"id":8068,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8058,"src":"3084:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":8069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":8071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3083:18:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(uint32,int_const 0,int_const 0)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8054,"id":8077,"nodeType":"Return","src":"3054:83:28"}]},"documentation":{"id":8041,"nodeType":"StructuredDocumentation","src":"2622:241:28","text":" @dev Get the value at a given timepoint plus the pending value and effect timepoint if there is a scheduled\n change after this timepoint. If the effect timepoint is 0, then the pending value should not be considered."},"id":8079,"implemented":true,"kind":"function","modifiers":[],"name":"_getFullAt","nameLocation":"2877:10:28","nodeType":"FunctionDefinition","parameters":{"id":8047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8044,"mutability":"mutable","name":"self","nameLocation":"2894:4:28","nodeType":"VariableDeclaration","scope":8079,"src":"2888:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8043,"nodeType":"UserDefinedTypeName","pathNode":{"id":8042,"name":"Delay","nameLocations":["2888:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"2888:5:28"},"referencedDeclaration":8025,"src":"2888:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8046,"mutability":"mutable","name":"timepoint","nameLocation":"2907:9:28","nodeType":"VariableDeclaration","scope":8079,"src":"2900:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8045,"name":"uint48","nodeType":"ElementaryTypeName","src":"2900:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2887:30:28"},"returnParameters":{"id":8054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8079,"src":"2940:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8048,"name":"uint32","nodeType":"ElementaryTypeName","src":"2940:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8079,"src":"2948:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8050,"name":"uint32","nodeType":"ElementaryTypeName","src":"2948:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8079,"src":"2956:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8052,"name":"uint48","nodeType":"ElementaryTypeName","src":"2956:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2939:24:28"},"scope":8263,"src":"2868:276:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":8098,"nodeType":"Block","src":"3438:53:28","statements":[{"expression":{"arguments":[{"id":8093,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8083,"src":"3466:4:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8094,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"3472:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3472:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8092,"name":"_getFullAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8079,"src":"3455:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_Delay_$8025_$_t_uint48_$returns$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"function (Time.Delay,uint48) pure returns (uint32,uint32,uint48)"}},"id":8096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8091,"id":8097,"nodeType":"Return","src":"3448:36:28"}]},"documentation":{"id":8080,"nodeType":"StructuredDocumentation","src":"3150:207:28","text":" @dev Get the current value plus the pending value and effect timepoint if there is a scheduled change. If the\n effect timepoint is 0, then the pending value should not be considered."},"id":8099,"implemented":true,"kind":"function","modifiers":[],"name":"getFull","nameLocation":"3371:7:28","nodeType":"FunctionDefinition","parameters":{"id":8084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8083,"mutability":"mutable","name":"self","nameLocation":"3385:4:28","nodeType":"VariableDeclaration","scope":8099,"src":"3379:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8082,"nodeType":"UserDefinedTypeName","pathNode":{"id":8081,"name":"Delay","nameLocations":["3379:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"3379:5:28"},"referencedDeclaration":8025,"src":"3379:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3378:12:28"},"returnParameters":{"id":8091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8099,"src":"3414:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8085,"name":"uint32","nodeType":"ElementaryTypeName","src":"3414:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8099,"src":"3422:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8087,"name":"uint32","nodeType":"ElementaryTypeName","src":"3422:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8099,"src":"3430:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8089,"name":"uint48","nodeType":"ElementaryTypeName","src":"3430:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"3413:24:28"},"scope":8263,"src":"3362:129:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8116,"nodeType":"Block","src":"3604:74:28","statements":[{"assignments":[8109,null,null],"declarations":[{"constant":false,"id":8109,"mutability":"mutable","name":"delay","nameLocation":"3622:5:28","nodeType":"VariableDeclaration","scope":8116,"src":"3615:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8108,"name":"uint32","nodeType":"ElementaryTypeName","src":"3615:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},null,null],"id":8113,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8110,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"3635:4:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3640:7:28","memberName":"getFull","nodeType":"MemberAccess","referencedDeclaration":8099,"src":"3635:12:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8025_$returns$_t_uint32_$_t_uint32_$_t_uint48_$attached_to$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (Time.Delay) view returns (uint32,uint32,uint48)"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3635:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"3614:35:28"},{"expression":{"id":8114,"name":"delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8109,"src":"3666:5:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8107,"id":8115,"nodeType":"Return","src":"3659:12:28"}]},"documentation":{"id":8100,"nodeType":"StructuredDocumentation","src":"3497:46:28","text":" @dev Get the current value."},"id":8117,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3557:3:28","nodeType":"FunctionDefinition","parameters":{"id":8104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"mutability":"mutable","name":"self","nameLocation":"3567:4:28","nodeType":"VariableDeclaration","scope":8117,"src":"3561:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8102,"nodeType":"UserDefinedTypeName","pathNode":{"id":8101,"name":"Delay","nameLocations":["3561:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"3561:5:28"},"referencedDeclaration":8025,"src":"3561:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"3560:12:28"},"returnParameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8117,"src":"3596:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8105,"name":"uint32","nodeType":"ElementaryTypeName","src":"3596:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3595:8:28"},"scope":8263,"src":"3548:130:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8172,"nodeType":"Block","src":"4128:234:28","statements":[{"assignments":[8134],"declarations":[{"constant":false,"id":8134,"mutability":"mutable","name":"value","nameLocation":"4145:5:28","nodeType":"VariableDeclaration","scope":8172,"src":"4138:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8133,"name":"uint32","nodeType":"ElementaryTypeName","src":"4138:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8138,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8135,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"4153:4:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4158:3:28","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":8117,"src":"4153:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_userDefinedValueType$_Delay_$8025_$returns$_t_uint32_$attached_to$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (Time.Delay) view returns (uint32)"}},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4153:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4138:25:28"},{"assignments":[8140],"declarations":[{"constant":false,"id":8140,"mutability":"mutable","name":"setback","nameLocation":"4180:7:28","nodeType":"VariableDeclaration","scope":8172,"src":"4173:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8139,"name":"uint32","nodeType":"ElementaryTypeName","src":"4173:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8156,"initialValue":{"arguments":[{"arguments":[{"id":8145,"name":"minSetback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8125,"src":"4206:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"4218:5:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8147,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"4226:8:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4218:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4256:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4218:39:28","trueExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"4237:5:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8150,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"4245:8:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4237:16:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":8143,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"4197:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4556_$","typeString":"type(library Math)"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4202:3:28","memberName":"max","nodeType":"MemberAccess","referencedDeclaration":3689,"src":"4197:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4190:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8141,"name":"uint32","nodeType":"ElementaryTypeName","src":"4190:6:28","typeDescriptions":{}}},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"4173:86:28"},{"expression":{"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8157,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"4269:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8158,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8010,"src":"4278:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4278:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8160,"name":"setback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8140,"src":"4292:7:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4278:21:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4269:30:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8163,"nodeType":"ExpressionStatement","src":"4269:30:28"},{"expression":{"components":[{"arguments":[{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8134,"src":"4322:5:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8166,"name":"newValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"4329:8:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8167,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"4339:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8164,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"4317:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint48_$returns$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (uint32,uint32,uint48) pure returns (Time.Delay)"}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4317:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},{"id":8169,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8131,"src":"4348:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4316:39:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_userDefinedValueType$_Delay_$8025_$_t_uint48_$","typeString":"tuple(Time.Delay,uint48)"}},"functionReturnParameters":8132,"id":8171,"nodeType":"Return","src":"4309:46:28"}]},"documentation":{"id":8118,"nodeType":"StructuredDocumentation","src":"3684:283:28","text":" @dev Update a Delay object so that it takes a new duration after a timepoint that is automatically computed to\n enforce the old delay at the moment of the update. Returns the updated Delay object and the timestamp when the\n new delay becomes effective."},"id":8173,"implemented":true,"kind":"function","modifiers":[],"name":"withUpdate","nameLocation":"3981:10:28","nodeType":"FunctionDefinition","parameters":{"id":8126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8121,"mutability":"mutable","name":"self","nameLocation":"4007:4:28","nodeType":"VariableDeclaration","scope":8173,"src":"4001:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8120,"nodeType":"UserDefinedTypeName","pathNode":{"id":8119,"name":"Delay","nameLocations":["4001:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"4001:5:28"},"referencedDeclaration":8025,"src":"4001:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8123,"mutability":"mutable","name":"newValue","nameLocation":"4028:8:28","nodeType":"VariableDeclaration","scope":8173,"src":"4021:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8122,"name":"uint32","nodeType":"ElementaryTypeName","src":"4021:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8125,"mutability":"mutable","name":"minSetback","nameLocation":"4053:10:28","nodeType":"VariableDeclaration","scope":8173,"src":"4046:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8124,"name":"uint32","nodeType":"ElementaryTypeName","src":"4046:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3991:78:28"},"returnParameters":{"id":8132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"updatedDelay","nameLocation":"4099:12:28","nodeType":"VariableDeclaration","scope":8173,"src":"4093:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8128,"nodeType":"UserDefinedTypeName","pathNode":{"id":8127,"name":"Delay","nameLocations":["4093:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"4093:5:28"},"referencedDeclaration":8025,"src":"4093:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"},{"constant":false,"id":8131,"mutability":"mutable","name":"effect","nameLocation":"4120:6:28","nodeType":"VariableDeclaration","scope":8173,"src":"4113:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8130,"name":"uint48","nodeType":"ElementaryTypeName","src":"4113:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4092:35:28"},"scope":8263,"src":"3972:390:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8223,"nodeType":"Block","src":"4595:212:28","statements":[{"assignments":[8187],"declarations":[{"constant":false,"id":8187,"mutability":"mutable","name":"raw","nameLocation":"4613:3:28","nodeType":"VariableDeclaration","scope":8223,"src":"4605:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8186,"name":"uint112","nodeType":"ElementaryTypeName","src":"4605:7:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"id":8192,"initialValue":{"arguments":[{"id":8190,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8177,"src":"4632:4:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}],"expression":{"id":8188,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"4619:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8025_$","typeString":"type(Time.Delay)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4625:6:28","memberName":"unwrap","nodeType":"MemberAccess","src":"4619:12:28","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_Delay_$8025_$returns$_t_uint112_$","typeString":"function (Time.Delay) pure returns (uint112)"}},"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4619:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"VariableDeclarationStatement","src":"4605:32:28"},{"expression":{"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8193,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"4648:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8196,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"4668:3:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8194,"name":"uint32","nodeType":"ElementaryTypeName","src":"4661:6:28","typeDescriptions":{}}},"id":8197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4648:24:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8199,"nodeType":"ExpressionStatement","src":"4648:24:28"},{"expression":{"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8200,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"4682:11:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8203,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"4703:3:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4710:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4703:9:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4696:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8201,"name":"uint32","nodeType":"ElementaryTypeName","src":"4696:6:28","typeDescriptions":{}}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4682:31:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8208,"nodeType":"ExpressionStatement","src":"4682:31:28"},{"expression":{"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8209,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"4723:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8187,"src":"4739:3:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4739:9:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"id":8211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8210,"name":"uint48","nodeType":"ElementaryTypeName","src":"4732:6:28","typeDescriptions":{}}},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4723:26:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":8217,"nodeType":"ExpressionStatement","src":"4723:26:28"},{"expression":{"components":[{"id":8218,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"4768:11:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8219,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"4781:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8220,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"4793:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"id":8221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4767:33:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint48_$","typeString":"tuple(uint32,uint32,uint48)"}},"functionReturnParameters":8185,"id":8222,"nodeType":"Return","src":"4760:40:28"}]},"documentation":{"id":8174,"nodeType":"StructuredDocumentation","src":"4368:117:28","text":" @dev Split a delay into its components: valueBefore, valueAfter and effect (transition timepoint)."},"id":8224,"implemented":true,"kind":"function","modifiers":[],"name":"unpack","nameLocation":"4499:6:28","nodeType":"FunctionDefinition","parameters":{"id":8178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"self","nameLocation":"4512:4:28","nodeType":"VariableDeclaration","scope":8224,"src":"4506:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8176,"nodeType":"UserDefinedTypeName","pathNode":{"id":8175,"name":"Delay","nameLocations":["4506:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"4506:5:28"},"referencedDeclaration":8025,"src":"4506:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4505:12:28"},"returnParameters":{"id":8185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8180,"mutability":"mutable","name":"valueBefore","nameLocation":"4548:11:28","nodeType":"VariableDeclaration","scope":8224,"src":"4541:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8179,"name":"uint32","nodeType":"ElementaryTypeName","src":"4541:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8182,"mutability":"mutable","name":"valueAfter","nameLocation":"4568:10:28","nodeType":"VariableDeclaration","scope":8224,"src":"4561:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8181,"name":"uint32","nodeType":"ElementaryTypeName","src":"4561:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8184,"mutability":"mutable","name":"effect","nameLocation":"4587:6:28","nodeType":"VariableDeclaration","scope":8224,"src":"4580:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8183,"name":"uint48","nodeType":"ElementaryTypeName","src":"4580:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4540:54:28"},"scope":8263,"src":"4490:317:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8261,"nodeType":"Block","src":"4980:112:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8241,"name":"effect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"5017:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":8240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5009:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8239,"name":"uint112","nodeType":"ElementaryTypeName","src":"5009:7:28","typeDescriptions":{}}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":8243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5028:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5009:21:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5008:23:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint112","typeString":"uint112"},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8248,"name":"valueBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8227,"src":"5043:11:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8246,"name":"uint112","nodeType":"ElementaryTypeName","src":"5035:7:28","typeDescriptions":{}}},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":8250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"5035:26:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"id":8252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5034:28:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:54:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":8256,"name":"valueAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"5073:10:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":8255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5065:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8254,"name":"uint112","nodeType":"ElementaryTypeName","src":"5065:7:28","typeDescriptions":{}}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5065:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"5008:76:28","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint112","typeString":"uint112"}],"expression":{"id":8237,"name":"Delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"4997:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_Delay_$8025_$","typeString":"type(Time.Delay)"}},"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5003:4:28","memberName":"wrap","nodeType":"MemberAccess","src":"4997:10:28","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint112_$returns$_t_userDefinedValueType$_Delay_$8025_$","typeString":"function (uint112) pure returns (Time.Delay)"}},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:88:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"functionReturnParameters":8236,"id":8260,"nodeType":"Return","src":"4990:95:28"}]},"documentation":{"id":8225,"nodeType":"StructuredDocumentation","src":"4813:64:28","text":" @dev pack the components into a Delay object."},"id":8262,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"4891:4:28","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8227,"mutability":"mutable","name":"valueBefore","nameLocation":"4903:11:28","nodeType":"VariableDeclaration","scope":8262,"src":"4896:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8226,"name":"uint32","nodeType":"ElementaryTypeName","src":"4896:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8229,"mutability":"mutable","name":"valueAfter","nameLocation":"4923:10:28","nodeType":"VariableDeclaration","scope":8262,"src":"4916:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8228,"name":"uint32","nodeType":"ElementaryTypeName","src":"4916:6:28","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8231,"mutability":"mutable","name":"effect","nameLocation":"4942:6:28","nodeType":"VariableDeclaration","scope":8262,"src":"4935:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8230,"name":"uint48","nodeType":"ElementaryTypeName","src":"4935:6:28","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4895:54:28"},"returnParameters":{"id":8236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8262,"src":"4973:5:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"},"typeName":{"id":8234,"nodeType":"UserDefinedTypeName","pathNode":{"id":8233,"name":"Delay","nameLocations":["4973:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":8025,"src":"4973:5:28"},"referencedDeclaration":8025,"src":"4973:5:28","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_Delay_$8025","typeString":"Time.Delay"}},"visibility":"internal"}],"src":"4972:7:28"},"scope":8263,"src":"4882:210:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8264,"src":"640:4454:28","usedErrors":[],"usedEvents":[]}],"src":"104:4991:28"},"id":28},"contracts/MyToken.sol":{"ast":{"absolutePath":"contracts/MyToken.sol","exportedSymbols":{"AccessControl":[295],"Checkpoints":[7988],"Context":[2167],"ECDSA":[3165],"EIP712":[3392],"ERC165":[3490],"ERC20":[1711],"ERC20Permit":[1943],"ERC20Votes":[2075],"IAccessControl":[378],"IERC20":[1789],"IERC20Errors":[1101],"IERC20Metadata":[2101],"IERC20Permit":[2137],"MyToken":[8359],"Nonces":[2235],"Votes":[1008]},"id":8360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8265,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8360,"sourceUnit":1712,"src":"58:55:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8360,"sourceUnit":1944,"src":"114:72:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":8268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8360,"sourceUnit":2076,"src":"187:71:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8360,"sourceUnit":296,"src":"259:58:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8270,"name":"ERC20","nameLocations":["339:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"339:5:29"},"id":8271,"nodeType":"InheritanceSpecifier","src":"339:5:29"},{"baseName":{"id":8272,"name":"ERC20Permit","nameLocations":["346:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1943,"src":"346:11:29"},"id":8273,"nodeType":"InheritanceSpecifier","src":"346:11:29"},{"baseName":{"id":8274,"name":"ERC20Votes","nameLocations":["359:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":2075,"src":"359:10:29"},"id":8275,"nodeType":"InheritanceSpecifier","src":"359:10:29"},{"baseName":{"id":8276,"name":"AccessControl","nameLocations":["371:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"371:13:29"},"id":8277,"nodeType":"InheritanceSpecifier","src":"371:13:29"}],"canonicalName":"MyToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8359,"internalFunctionIDs":{"985":1,"999":2},"linearizedBaseContracts":[8359,295,3490,3502,378,2075,1008,1044,461,1059,1943,2235,3392,1033,2137,1711,1101,2101,1789,2167],"name":"MyToken","nameLocation":"328:7:29","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":8282,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"415:11:29","nodeType":"VariableDeclaration","scope":8359,"src":"391:62:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"391:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"439:13:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8279,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"429:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"429:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":8304,"nodeType":"Block","src":"521:104:29","statements":[{"expression":{"arguments":[{"id":8293,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"542:18:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"562:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"566:6:29","memberName":"sender","nodeType":"MemberAccess","src":"562:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8292,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"531:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"531:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8297,"nodeType":"ExpressionStatement","src":"531:42:29"},{"expression":{"arguments":[{"id":8299,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"594:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"607:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"611:6:29","memberName":"sender","nodeType":"MemberAccess","src":"607:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8298,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"583:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"583:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8303,"nodeType":"ExpressionStatement","src":"583:35:29"}]},"id":8305,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79546f6b656e","id":8285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"480:9:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"},{"hexValue":"4d544b","id":8286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"491:5:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e","typeString":"literal_string \"MTK\""},"value":"MTK"}],"id":8287,"kind":"baseConstructorSpecifier","modifierName":{"id":8284,"name":"ERC20","nameLocations":["474:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"474:5:29"},"nodeType":"ModifierInvocation","src":"474:23:29"},{"arguments":[{"hexValue":"4d79546f6b656e","id":8289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"510:9:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"}],"id":8290,"kind":"baseConstructorSpecifier","modifierName":{"id":8288,"name":"ERC20Permit","nameLocations":["498:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1943,"src":"498:11:29"},"nodeType":"ModifierInvocation","src":"498:22:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[],"src":"471:2:29"},"returnParameters":{"id":8291,"nodeType":"ParameterList","parameters":[],"src":"521:0:29"},"scope":8359,"src":"460:165:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8320,"nodeType":"Block","src":"702:34:29","statements":[{"expression":{"arguments":[{"id":8316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8307,"src":"718:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8317,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8309,"src":"722:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8315,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"712:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"712:17:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8319,"nodeType":"ExpressionStatement","src":"712:17:29"}]},"functionSelector":"40c10f19","id":8321,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8312,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"689:11:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8313,"kind":"modifierInvocation","modifierName":{"id":8311,"name":"onlyRole","nameLocations":["680:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"680:8:29"},"nodeType":"ModifierInvocation","src":"680:21:29"}],"name":"mint","nameLocation":"640:4:29","nodeType":"FunctionDefinition","parameters":{"id":8310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8307,"mutability":"mutable","name":"to","nameLocation":"653:2:29","nodeType":"VariableDeclaration","scope":8321,"src":"645:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8306,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8309,"mutability":"mutable","name":"amount","nameLocation":"665:6:29","nodeType":"VariableDeclaration","scope":8321,"src":"657:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8308,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:28:29"},"returnParameters":{"id":8314,"nodeType":"ParameterList","parameters":[],"src":"702:0:29"},"scope":8359,"src":"631:105:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1518,2030],"body":{"id":8341,"nodeType":"Block","src":"925:47:29","statements":[{"expression":{"arguments":[{"id":8336,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"949:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8337,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8325,"src":"955:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8327,"src":"959:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8333,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"935:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$8359_$","typeString":"type(contract super MyToken)"}},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"941:7:29","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":2030,"src":"935:13:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"935:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8340,"nodeType":"ExpressionStatement","src":"935:30:29"}]},"id":8342,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"819:7:29","nodeType":"FunctionDefinition","overrides":{"id":8331,"nodeType":"OverrideSpecifier","overrides":[{"id":8329,"name":"ERC20","nameLocations":["902:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"902:5:29"},{"id":8330,"name":"ERC20Votes","nameLocations":["909:10:29"],"nodeType":"IdentifierPath","referencedDeclaration":2075,"src":"909:10:29"}],"src":"893:27:29"},"parameters":{"id":8328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8323,"mutability":"mutable","name":"from","nameLocation":"835:4:29","nodeType":"VariableDeclaration","scope":8342,"src":"827:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8322,"name":"address","nodeType":"ElementaryTypeName","src":"827:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8325,"mutability":"mutable","name":"to","nameLocation":"849:2:29","nodeType":"VariableDeclaration","scope":8342,"src":"841:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8324,"name":"address","nodeType":"ElementaryTypeName","src":"841:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8327,"mutability":"mutable","name":"value","nameLocation":"861:5:29","nodeType":"VariableDeclaration","scope":8342,"src":"853:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8326,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"826:41:29"},"returnParameters":{"id":8332,"nodeType":"ParameterList","parameters":[],"src":"925:0:29"},"scope":8359,"src":"810:162:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1932,2194],"body":{"id":8357,"nodeType":"Block","src":"1105:43:29","statements":[{"expression":{"arguments":[{"id":8354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8344,"src":"1135:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8352,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1122:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$8359_$","typeString":"type(contract super MyToken)"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1128:6:29","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1932,"src":"1122:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8351,"id":8356,"nodeType":"Return","src":"1115:26:29"}]},"functionSelector":"7ecebe00","id":8358,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"987:6:29","nodeType":"FunctionDefinition","overrides":{"id":8348,"nodeType":"OverrideSpecifier","overrides":[{"id":8346,"name":"ERC20Permit","nameLocations":["1054:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":1943,"src":"1054:11:29"},{"id":8347,"name":"Nonces","nameLocations":["1067:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":2235,"src":"1067:6:29"}],"src":"1045:29:29"},"parameters":{"id":8345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8344,"mutability":"mutable","name":"owner","nameLocation":"1002:5:29","nodeType":"VariableDeclaration","scope":8358,"src":"994:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8343,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:29"},"returnParameters":{"id":8351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8358,"src":"1092:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1091:9:29"},"scope":8359,"src":"978:170:29","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":8360,"src":"319:831:29","usedErrors":[305,308,386,512,519,1071,1076,1081,1090,1095,1100,1820,1827,1963,2177,2249,2251,2828,2833,2838,4566,6424],"usedEvents":[317,326,335,395,404,1013,1723,1732]}],"src":"32:1118:29"},"id":29},"contracts/TokenizedBallot.sol":{"ast":{"absolutePath":"contracts/TokenizedBallot.sol","exportedSymbols":{"IMyToken":[8371],"TokenizedBallot":[8530]},"id":8531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8361,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"33:31:30"},{"abstract":false,"baseContracts":[],"canonicalName":"IMyToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8371,"linearizedBaseContracts":[8371],"name":"IMyToken","nameLocation":"76:8:30","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3a46b1a8","id":8370,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"100:12:30","nodeType":"FunctionDefinition","parameters":{"id":8366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8370,"src":"113:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8362,"name":"address","nodeType":"ElementaryTypeName","src":"113:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8370,"src":"122:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8364,"name":"uint256","nodeType":"ElementaryTypeName","src":"122:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"112:18:30"},"returnParameters":{"id":8369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8370,"src":"154:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8367,"name":"uint256","nodeType":"ElementaryTypeName","src":"154:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"153:9:30"},"scope":8371,"src":"91:72:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8531,"src":"66:155:30","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"TokenizedBallot","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8530,"linearizedBaseContracts":[8530],"name":"TokenizedBallot","nameLocation":"232:15:30","nodeType":"ContractDefinition","nodes":[{"canonicalName":"TokenizedBallot.Proposal","id":8376,"members":[{"constant":false,"id":8373,"mutability":"mutable","name":"name","nameLocation":"288:4:30","nodeType":"VariableDeclaration","scope":8376,"src":"280:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"280:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8375,"mutability":"mutable","name":"voteCount","nameLocation":"307:9:30","nodeType":"VariableDeclaration","scope":8376,"src":"302:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8374,"name":"uint","nodeType":"ElementaryTypeName","src":"302:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"261:8:30","nodeType":"StructDefinition","scope":8530,"src":"254:69:30","visibility":"public"},{"constant":false,"functionSelector":"55a373d6","id":8379,"mutability":"mutable","name":"tokenContract","nameLocation":"345:13:30","nodeType":"VariableDeclaration","scope":8530,"src":"329:29:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"},"typeName":{"id":8378,"nodeType":"UserDefinedTypeName","pathNode":{"id":8377,"name":"IMyToken","nameLocations":["329:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":8371,"src":"329:8:30"},"referencedDeclaration":8371,"src":"329:8:30","typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"}},"visibility":"public"},{"constant":false,"functionSelector":"013cf08b","id":8383,"mutability":"mutable","name":"proposals","nameLocation":"382:9:30","nodeType":"VariableDeclaration","scope":8530,"src":"364:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal[]"},"typeName":{"baseType":{"id":8381,"nodeType":"UserDefinedTypeName","pathNode":{"id":8380,"name":"Proposal","nameLocations":["364:8:30"],"nodeType":"IdentifierPath","referencedDeclaration":8376,"src":"364:8:30"},"referencedDeclaration":8376,"src":"364:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_storage_ptr","typeString":"struct TokenizedBallot.Proposal"}},"id":8382,"nodeType":"ArrayTypeName","src":"364:10:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage_ptr","typeString":"struct TokenizedBallot.Proposal[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2a8cd29e","id":8385,"mutability":"mutable","name":"targetBlockNumber","nameLocation":"412:17:30","nodeType":"VariableDeclaration","scope":8530,"src":"397:32:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8384,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9e90d0d9","id":8389,"mutability":"mutable","name":"votePowerSpent","nameLocation":"468:14:30","nodeType":"VariableDeclaration","scope":8530,"src":"435:47:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8388,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8386,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"435:25:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8387,"name":"uint","nodeType":"ElementaryTypeName","src":"455:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"body":{"id":8433,"nodeType":"Block","src":"584:315:30","statements":[{"expression":{"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8399,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"594:13:30","typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8401,"name":"_tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8394,"src":"619:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8400,"name":"IMyToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"610:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMyToken_$8371_$","typeString":"type(contract IMyToken)"}},"id":8402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"610:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"}},"src":"594:40:30","typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"}},"id":8404,"nodeType":"ExpressionStatement","src":"594:40:30"},{"expression":{"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8405,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"644:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8406,"name":"_targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8396,"src":"664:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"644:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8408,"nodeType":"ExpressionStatement","src":"644:38:30"},{"body":{"id":8431,"nodeType":"Block","src":"803:90:30","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":8424,"name":"_proposalNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"848:14:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8426,"indexExpression":{"id":8425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"863:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"848:17:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":8427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"878:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8423,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"832:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$8376_storage_ptr_$","typeString":"type(struct TokenizedBallot.Proposal storage pointer)"}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["842:4:30","867:9:30"],"names":["name","voteCount"],"nodeType":"FunctionCall","src":"832:49:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_memory_ptr","typeString":"struct TokenizedBallot.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$8376_memory_ptr","typeString":"struct TokenizedBallot.Proposal memory"}],"expression":{"id":8420,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"817:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"827:4:30","memberName":"push","nodeType":"MemberAccess","src":"817:14:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$8376_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage_ptr_$","typeString":"function (struct TokenizedBallot.Proposal storage ref[] storage pointer,struct TokenizedBallot.Proposal storage ref)"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:65:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8430,"nodeType":"ExpressionStatement","src":"817:65:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"771:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8414,"name":"_proposalNames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"775:14:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"790:6:30","memberName":"length","nodeType":"MemberAccess","src":"775:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"771:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8432,"initializationExpression":{"assignments":[8410],"declarations":[{"constant":false,"id":8410,"mutability":"mutable","name":"i","nameLocation":"764:1:30","nodeType":"VariableDeclaration","scope":8432,"src":"759:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8409,"name":"uint","nodeType":"ElementaryTypeName","src":"759:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8412,"initialValue":{"hexValue":"30","id":8411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"759:10:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"798:3:30","subExpression":{"id":8417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"798:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8419,"nodeType":"ExpressionStatement","src":"798:3:30"},"nodeType":"ForStatement","src":"754:139:30"}]},"id":8434,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"_proposalNames","nameLocation":"518:14:30","nodeType":"VariableDeclaration","scope":8434,"src":"501:31:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"501:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8391,"nodeType":"ArrayTypeName","src":"501:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8394,"mutability":"mutable","name":"_tokenContract","nameLocation":"541:14:30","nodeType":"VariableDeclaration","scope":8434,"src":"533:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8393,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8396,"mutability":"mutable","name":"_targetBlockNumber","nameLocation":"564:18:30","nodeType":"VariableDeclaration","scope":8434,"src":"556:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8395,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"500:83:30"},"returnParameters":{"id":8398,"nodeType":"ParameterList","parameters":[],"src":"584:0:30"},"scope":8530,"src":"489:410:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8472,"nodeType":"Block","src":"962:550:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":8444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1313:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1317:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1313:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8446,"name":"targetBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"1325:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8442,"name":"tokenContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8379,"src":"1286:13:30","typeDescriptions":{"typeIdentifier":"t_contract$_IMyToken_$8371","typeString":"contract IMyToken"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1300:12:30","memberName":"getPastVotes","nodeType":"MemberAccess","referencedDeclaration":8370,"src":"1286:26:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":8448,"name":"votePowerSpent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"1346:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8451,"indexExpression":{"expression":{"id":8449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1361:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1365:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1361:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1346:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1286:86:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8453,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"1376:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1286:96:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820766f74696e6720706f776572","id":8455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1384:25:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c","typeString":"literal_string \"Not enough voting power\""},"value":"Not enough voting power"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c","typeString":"literal_string \"Not enough voting power\""}],"id":8441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1278:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:132:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8457,"nodeType":"ExpressionStatement","src":"1278:132:30"},{"expression":{"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8458,"name":"votePowerSpent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"1420:14:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8461,"indexExpression":{"expression":{"id":8459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1435:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1439:6:30","memberName":"sender","nodeType":"MemberAccess","src":"1435:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1420:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"1450:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1420:36:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8464,"nodeType":"ExpressionStatement","src":"1420:36:30"},{"expression":{"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8465,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1466:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8467,"indexExpression":{"id":8466,"name":"proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"1476:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1466:19:30","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_storage","typeString":"struct TokenizedBallot.Proposal storage ref"}},"id":8468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1486:9:30","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8375,"src":"1466:29:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8469,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"1499:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1466:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8471,"nodeType":"ExpressionStatement","src":"1466:39:30"}]},"functionSelector":"b384abef","id":8473,"implemented":true,"kind":"function","modifiers":[],"name":"vote","nameLocation":"914:4:30","nodeType":"FunctionDefinition","parameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8436,"mutability":"mutable","name":"proposal","nameLocation":"927:8:30","nodeType":"VariableDeclaration","scope":8473,"src":"919:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8435,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8438,"mutability":"mutable","name":"amount","nameLocation":"945:6:30","nodeType":"VariableDeclaration","scope":8473,"src":"937:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8437,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"918:34:30"},"returnParameters":{"id":8440,"nodeType":"ParameterList","parameters":[],"src":"962:0:30"},"scope":8530,"src":"905:607:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8514,"nodeType":"Block","src":"1589:278:30","statements":[{"assignments":[8479],"declarations":[{"constant":false,"id":8479,"mutability":"mutable","name":"winningVoteCount","nameLocation":"1604:16:30","nodeType":"VariableDeclaration","scope":8514,"src":"1599:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8478,"name":"uint","nodeType":"ElementaryTypeName","src":"1599:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8481,"initialValue":{"hexValue":"30","id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1623:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1599:25:30"},{"body":{"id":8512,"nodeType":"Block","src":"1678:183:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8493,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1696:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8495,"indexExpression":{"id":8494,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"1706:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1696:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_storage","typeString":"struct TokenizedBallot.Proposal storage ref"}},"id":8496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1709:9:30","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8375,"src":"1696:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8497,"name":"winningVoteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"1721:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:41:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8511,"nodeType":"IfStatement","src":"1692:159:30","trueBody":{"id":8510,"nodeType":"Block","src":"1739:112:30","statements":[{"expression":{"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8499,"name":"winningVoteCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"1757:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":8500,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1776:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8502,"indexExpression":{"id":8501,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"1786:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1776:12:30","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_storage","typeString":"struct TokenizedBallot.Proposal storage ref"}},"id":8503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1789:9:30","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":8375,"src":"1776:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1757:41:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8505,"nodeType":"ExpressionStatement","src":"1757:41:30"},{"expression":{"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8506,"name":"winningProposal_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8476,"src":"1816:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8507,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"1835:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1816:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8509,"nodeType":"ExpressionStatement","src":"1816:20:30"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8486,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"1651:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8487,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1655:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:6:30","memberName":"length","nodeType":"MemberAccess","src":"1655:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1651:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8513,"initializationExpression":{"assignments":[8483],"declarations":[{"constant":false,"id":8483,"mutability":"mutable","name":"p","nameLocation":"1644:1:30","nodeType":"VariableDeclaration","scope":8513,"src":"1639:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8482,"name":"uint","nodeType":"ElementaryTypeName","src":"1639:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8485,"initialValue":{"hexValue":"30","id":8484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1648:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1639:10:30"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1673:3:30","subExpression":{"id":8490,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"1673:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8492,"nodeType":"ExpressionStatement","src":"1673:3:30"},"nodeType":"ForStatement","src":"1634:227:30"}]},"functionSelector":"609ff1bd","id":8515,"implemented":true,"kind":"function","modifiers":[],"name":"winningProposal","nameLocation":"1527:15:30","nodeType":"FunctionDefinition","parameters":{"id":8474,"nodeType":"ParameterList","parameters":[],"src":"1542:2:30"},"returnParameters":{"id":8477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8476,"mutability":"mutable","name":"winningProposal_","nameLocation":"1571:16:30","nodeType":"VariableDeclaration","scope":8515,"src":"1566:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8475,"name":"uint","nodeType":"ElementaryTypeName","src":"1566:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1565:23:30"},"scope":8530,"src":"1518:349:30","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8528,"nodeType":"Block","src":"1939:64:30","statements":[{"expression":{"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8520,"name":"winnerName_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"1949:11:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":8521,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8383,"src":"1963:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$8376_storage_$dyn_storage","typeString":"struct TokenizedBallot.Proposal storage ref[] storage ref"}},"id":8524,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8522,"name":"winningProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8515,"src":"1973:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1973:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1963:28:30","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$8376_storage","typeString":"struct TokenizedBallot.Proposal storage ref"}},"id":8525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1992:4:30","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8373,"src":"1963:33:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1949:47:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8527,"nodeType":"ExpressionStatement","src":"1949:47:30"}]},"functionSelector":"e2ba53f0","id":8529,"implemented":true,"kind":"function","modifiers":[],"name":"winnerName","nameLocation":"1882:10:30","nodeType":"FunctionDefinition","parameters":{"id":8516,"nodeType":"ParameterList","parameters":[],"src":"1892:2:30"},"returnParameters":{"id":8519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8518,"mutability":"mutable","name":"winnerName_","nameLocation":"1926:11:30","nodeType":"VariableDeclaration","scope":8529,"src":"1918:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1918:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1917:21:30"},"scope":8530,"src":"1873:130:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8531,"src":"223:1782:30","usedErrors":[],"usedEvents":[]}],"src":"33:1972:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\",\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/Votes.sol":{"Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is a base abstract contract that tracks voting units, which are a measure of voting power that can be transferred, and provides a system of vote delegation, where an account can delegate its voting units to a sort of \\\"representative\\\" that will pool delegated voting units from different accounts and can then use it to vote in decisions. In fact, voting units _must_ be delegated in order to count as actual votes, and an account has to delegate those votes to itself if it wishes to participate in decisions and does not have a trusted representative. This contract is often combined with a token contract such that voting units correspond to token units. For an example, see {ERC721Votes}. The full history of delegate votes is tracked on-chain so that governance protocols can consider votes as distributed at a particular block number to protect against flash loans and double voting. The opt-in delegate system makes the cost of this history tracking optional. When using this module the derived contract must implement {_getVotingUnits} (for example, make it return {ERC721-balanceOf}), and can use {_transferVotingUnits} to track a change in the distribution of those units (in the previous example, it would be included in {ERC721-_update}).\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/Votes.sol\":\"Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^208^ - 1, while COMP is limited to 2^96^ - 1. NOTE: This contract does not provide interface compatibility with Compound's COMP token. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cfec0fdf9ffd764137a8d2e0ca2307a36b05be155fbb680fced6c37e5277843964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xEC 0xF 0xDF SWAP16 REVERT PUSH23 0x4137A8D2E0CA2307A36B05BE155FBB680FCED6C37E5277 DUP5 CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1255:3053:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201d2aedc0cb0fa896656ea0fe50229c9af49c2a90d8c22c903759c3543a7d46ba64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0x2A 0xED 0xC0 0xCB 0xF 0xA8 SWAP7 PUSH6 0x6EA0FE50229C SWAP11 DELEGATECALL SWAP13 0x2A SWAP1 0xD8 0xC2 0x2C SWAP1 CALLDATACOPY MSIZE 0xC3 SLOAD GASPRICE PUSH30 0x46BA64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"764:33927:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/Checkpoints.sol":{"Checkpoints":{"abi":[{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8e569f0219aede161eae172442433c5ffd3d324df540222b5d9bf1c595eccc64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP15 JUMP SWAP16 MUL NOT 0xAE 0xDE AND 0x1E 0xAE OR 0x24 TIMESTAMP NUMBER EXTCODECOPY PUSH0 REVERT RETURNDATASIZE ORIGIN 0x4D CREATE2 BLOCKHASH 0x22 0x2B TSTORE SWAP12 CALL 0xC5 SWAP6 0xEC 0xCC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"668:20471:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8e569f0219aede161eae172442433c5ffd3d324df540222b5d9bf1c595eccc64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP15 JUMP SWAP16 MUL NOT 0xAE 0xDE AND 0x1E 0xAE OR 0x24 TIMESTAMP NUMBER EXTCODECOPY PUSH0 REVERT RETURNDATASIZE ORIGIN 0x4D CREATE2 BLOCKHASH 0x22 0x2B TSTORE SWAP12 CALL 0xC5 SWAP6 0xEC 0xCC PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"668:20471:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library defines the `Trace*` struct, for checkpointing values as they change at different points in time, and later looking up past values by block number. See {Votes} as an example. To create a history of checkpoints define a variable type `Checkpoints.Trace*` in your contract, and store a new checkpoint for the current transaction block using the {push} function.\",\"errors\":{\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":\"Checkpoints\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/types/Time.sol":{"Time":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220744d9bb72144385edfc7dde59f38ad15d8191ee27bd4410502d0398962e6ebf264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x4D9BB72144385EDFC7DDE59F38AD15D8191EE27BD4 COINBASE SDIV MUL 0xD0 CODECOPY DUP10 PUSH3 0xE6EBF2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"640:4454:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides helpers for manipulating time-related objects. It uses the following types: - `uint48` for timepoints - `uint32` for durations While the library doesn't provide specific types for timepoints and duration, it does provide: - a `Delay` type to represent duration that can be programmed to change value automatically at a given point - additional helper functions\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/types/Time.sol\":\"Time\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]}},\"version\":1}"}},"contracts/MyToken.sol":{"MyToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"CheckpointUnorderedInsertion","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"uint256","name":"increasedSupply","type":"uint256"},{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"ERC20ExceededSafeSupply","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"},{"internalType":"uint48","name":"clock","type":"uint48"}],"name":"ERC5805FutureLookup","type":"error"},{"inputs":[],"name":"ERC6372InconsistentClock","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"inputs":[{"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"VotesExpiredSignature","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousVotes","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newVotes","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint48","name":"_key","type":"uint48"},{"internalType":"uint208","name":"_value","type":"uint208"}],"internalType":"struct Checkpoints.Checkpoint208","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1248":{"entryPoint":null,"id":1248,"parameterSlots":2,"returnSlots":0},"@_1838":{"entryPoint":null,"id":1838,"parameterSlots":1,"returnSlots":0},"@_3262":{"entryPoint":null,"id":3262,"parameterSlots":2,"returnSlots":0},"@_8305":{"entryPoint":null,"id":8305,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3309":{"entryPoint":618,"id":3309,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":711,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_2149":{"entryPoint":1197,"id":2149,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2539":{"entryPoint":1080,"id":2539,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":1090,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_2393":{"entryPoint":530,"id":2393,"parameterSlots":2,"returnSlots":1},"@toShortString_2295":{"entryPoint":971,"id":2295,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2166,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2183,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2466,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1363,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2455,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1205,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2276,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1684,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2505,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1519,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2293,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1384,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1263,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1559,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2482,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1400,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1764,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1413,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1569,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1612,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:8813:31","nodeType":"YulBlock","src":"0:8813:31","statements":[{"body":{"nativeSrc":"66:40:31","nodeType":"YulBlock","src":"66:40:31","statements":[{"nativeSrc":"77:22:31","nodeType":"YulAssignment","src":"77:22:31","value":{"arguments":[{"name":"value","nativeSrc":"93:5:31","nodeType":"YulIdentifier","src":"93:5:31"}],"functionName":{"name":"mload","nativeSrc":"87:5:31","nodeType":"YulIdentifier","src":"87:5:31"},"nativeSrc":"87:12:31","nodeType":"YulFunctionCall","src":"87:12:31"},"variableNames":[{"name":"length","nativeSrc":"77:6:31","nodeType":"YulIdentifier","src":"77:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:31","nodeType":"YulTypedName","src":"49:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:31","nodeType":"YulTypedName","src":"59:6:31","type":""}],"src":"7:99:31"},{"body":{"nativeSrc":"140:152:31","nodeType":"YulBlock","src":"140:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:31","nodeType":"YulLiteral","src":"157:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:31","nodeType":"YulLiteral","src":"160:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:31","nodeType":"YulIdentifier","src":"150:6:31"},"nativeSrc":"150:88:31","nodeType":"YulFunctionCall","src":"150:88:31"},"nativeSrc":"150:88:31","nodeType":"YulExpressionStatement","src":"150:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:31","nodeType":"YulLiteral","src":"254:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:31","nodeType":"YulLiteral","src":"257:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:31","nodeType":"YulIdentifier","src":"247:6:31"},"nativeSrc":"247:15:31","nodeType":"YulFunctionCall","src":"247:15:31"},"nativeSrc":"247:15:31","nodeType":"YulExpressionStatement","src":"247:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:31","nodeType":"YulLiteral","src":"278:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:31","nodeType":"YulLiteral","src":"281:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:31","nodeType":"YulIdentifier","src":"271:6:31"},"nativeSrc":"271:15:31","nodeType":"YulFunctionCall","src":"271:15:31"},"nativeSrc":"271:15:31","nodeType":"YulExpressionStatement","src":"271:15:31"}]},"name":"panic_error_0x41","nativeSrc":"112:180:31","nodeType":"YulFunctionDefinition","src":"112:180:31"},{"body":{"nativeSrc":"326:152:31","nodeType":"YulBlock","src":"326:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:31","nodeType":"YulLiteral","src":"343:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:31","nodeType":"YulLiteral","src":"346:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:31","nodeType":"YulIdentifier","src":"336:6:31"},"nativeSrc":"336:88:31","nodeType":"YulFunctionCall","src":"336:88:31"},"nativeSrc":"336:88:31","nodeType":"YulExpressionStatement","src":"336:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:31","nodeType":"YulLiteral","src":"440:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:31","nodeType":"YulLiteral","src":"443:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:31","nodeType":"YulIdentifier","src":"433:6:31"},"nativeSrc":"433:15:31","nodeType":"YulFunctionCall","src":"433:15:31"},"nativeSrc":"433:15:31","nodeType":"YulExpressionStatement","src":"433:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:31","nodeType":"YulLiteral","src":"464:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:31","nodeType":"YulLiteral","src":"467:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:31","nodeType":"YulIdentifier","src":"457:6:31"},"nativeSrc":"457:15:31","nodeType":"YulFunctionCall","src":"457:15:31"},"nativeSrc":"457:15:31","nodeType":"YulExpressionStatement","src":"457:15:31"}]},"name":"panic_error_0x22","nativeSrc":"298:180:31","nodeType":"YulFunctionDefinition","src":"298:180:31"},{"body":{"nativeSrc":"535:269:31","nodeType":"YulBlock","src":"535:269:31","statements":[{"nativeSrc":"545:22:31","nodeType":"YulAssignment","src":"545:22:31","value":{"arguments":[{"name":"data","nativeSrc":"559:4:31","nodeType":"YulIdentifier","src":"559:4:31"},{"kind":"number","nativeSrc":"565:1:31","nodeType":"YulLiteral","src":"565:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:31","nodeType":"YulIdentifier","src":"555:3:31"},"nativeSrc":"555:12:31","nodeType":"YulFunctionCall","src":"555:12:31"},"variableNames":[{"name":"length","nativeSrc":"545:6:31","nodeType":"YulIdentifier","src":"545:6:31"}]},{"nativeSrc":"576:38:31","nodeType":"YulVariableDeclaration","src":"576:38:31","value":{"arguments":[{"name":"data","nativeSrc":"606:4:31","nodeType":"YulIdentifier","src":"606:4:31"},{"kind":"number","nativeSrc":"612:1:31","nodeType":"YulLiteral","src":"612:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:31","nodeType":"YulIdentifier","src":"602:3:31"},"nativeSrc":"602:12:31","nodeType":"YulFunctionCall","src":"602:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:31","nodeType":"YulTypedName","src":"580:18:31","type":""}]},{"body":{"nativeSrc":"653:51:31","nodeType":"YulBlock","src":"653:51:31","statements":[{"nativeSrc":"667:27:31","nodeType":"YulAssignment","src":"667:27:31","value":{"arguments":[{"name":"length","nativeSrc":"681:6:31","nodeType":"YulIdentifier","src":"681:6:31"},{"kind":"number","nativeSrc":"689:4:31","nodeType":"YulLiteral","src":"689:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:31","nodeType":"YulIdentifier","src":"677:3:31"},"nativeSrc":"677:17:31","nodeType":"YulFunctionCall","src":"677:17:31"},"variableNames":[{"name":"length","nativeSrc":"667:6:31","nodeType":"YulIdentifier","src":"667:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:31","nodeType":"YulIdentifier","src":"633:18:31"}],"functionName":{"name":"iszero","nativeSrc":"626:6:31","nodeType":"YulIdentifier","src":"626:6:31"},"nativeSrc":"626:26:31","nodeType":"YulFunctionCall","src":"626:26:31"},"nativeSrc":"623:81:31","nodeType":"YulIf","src":"623:81:31"},{"body":{"nativeSrc":"756:42:31","nodeType":"YulBlock","src":"756:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:31","nodeType":"YulIdentifier","src":"770:16:31"},"nativeSrc":"770:18:31","nodeType":"YulFunctionCall","src":"770:18:31"},"nativeSrc":"770:18:31","nodeType":"YulExpressionStatement","src":"770:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:31","nodeType":"YulIdentifier","src":"720:18:31"},{"arguments":[{"name":"length","nativeSrc":"743:6:31","nodeType":"YulIdentifier","src":"743:6:31"},{"kind":"number","nativeSrc":"751:2:31","nodeType":"YulLiteral","src":"751:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:31","nodeType":"YulIdentifier","src":"740:2:31"},"nativeSrc":"740:14:31","nodeType":"YulFunctionCall","src":"740:14:31"}],"functionName":{"name":"eq","nativeSrc":"717:2:31","nodeType":"YulIdentifier","src":"717:2:31"},"nativeSrc":"717:38:31","nodeType":"YulFunctionCall","src":"717:38:31"},"nativeSrc":"714:84:31","nodeType":"YulIf","src":"714:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:31","nodeType":"YulTypedName","src":"519:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:31","nodeType":"YulTypedName","src":"528:6:31","type":""}],"src":"484:320:31"},{"body":{"nativeSrc":"864:87:31","nodeType":"YulBlock","src":"864:87:31","statements":[{"nativeSrc":"874:11:31","nodeType":"YulAssignment","src":"874:11:31","value":{"name":"ptr","nativeSrc":"882:3:31","nodeType":"YulIdentifier","src":"882:3:31"},"variableNames":[{"name":"data","nativeSrc":"874:4:31","nodeType":"YulIdentifier","src":"874:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:31","nodeType":"YulLiteral","src":"902:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:31","nodeType":"YulIdentifier","src":"905:3:31"}],"functionName":{"name":"mstore","nativeSrc":"895:6:31","nodeType":"YulIdentifier","src":"895:6:31"},"nativeSrc":"895:14:31","nodeType":"YulFunctionCall","src":"895:14:31"},"nativeSrc":"895:14:31","nodeType":"YulExpressionStatement","src":"895:14:31"},{"nativeSrc":"918:26:31","nodeType":"YulAssignment","src":"918:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:31","nodeType":"YulLiteral","src":"936:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:31","nodeType":"YulLiteral","src":"939:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:31","nodeType":"YulIdentifier","src":"926:9:31"},"nativeSrc":"926:18:31","nodeType":"YulFunctionCall","src":"926:18:31"},"variableNames":[{"name":"data","nativeSrc":"918:4:31","nodeType":"YulIdentifier","src":"918:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:31","nodeType":"YulTypedName","src":"851:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:31","nodeType":"YulTypedName","src":"859:4:31","type":""}],"src":"810:141:31"},{"body":{"nativeSrc":"1001:49:31","nodeType":"YulBlock","src":"1001:49:31","statements":[{"nativeSrc":"1011:33:31","nodeType":"YulAssignment","src":"1011:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:31","nodeType":"YulIdentifier","src":"1029:5:31"},{"kind":"number","nativeSrc":"1036:2:31","nodeType":"YulLiteral","src":"1036:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:31","nodeType":"YulIdentifier","src":"1025:3:31"},"nativeSrc":"1025:14:31","nodeType":"YulFunctionCall","src":"1025:14:31"},{"kind":"number","nativeSrc":"1041:2:31","nodeType":"YulLiteral","src":"1041:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:31","nodeType":"YulIdentifier","src":"1021:3:31"},"nativeSrc":"1021:23:31","nodeType":"YulFunctionCall","src":"1021:23:31"},"variableNames":[{"name":"result","nativeSrc":"1011:6:31","nodeType":"YulIdentifier","src":"1011:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:31","nodeType":"YulTypedName","src":"984:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:31","nodeType":"YulTypedName","src":"994:6:31","type":""}],"src":"957:93:31"},{"body":{"nativeSrc":"1109:54:31","nodeType":"YulBlock","src":"1109:54:31","statements":[{"nativeSrc":"1119:37:31","nodeType":"YulAssignment","src":"1119:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:31","nodeType":"YulIdentifier","src":"1144:4:31"},{"name":"value","nativeSrc":"1150:5:31","nodeType":"YulIdentifier","src":"1150:5:31"}],"functionName":{"name":"shl","nativeSrc":"1140:3:31","nodeType":"YulIdentifier","src":"1140:3:31"},"nativeSrc":"1140:16:31","nodeType":"YulFunctionCall","src":"1140:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:31","nodeType":"YulIdentifier","src":"1119:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:31","nodeType":"YulTypedName","src":"1084:4:31","type":""},{"name":"value","nativeSrc":"1090:5:31","nodeType":"YulTypedName","src":"1090:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:31","nodeType":"YulTypedName","src":"1100:8:31","type":""}],"src":"1056:107:31"},{"body":{"nativeSrc":"1245:317:31","nodeType":"YulBlock","src":"1245:317:31","statements":[{"nativeSrc":"1255:35:31","nodeType":"YulVariableDeclaration","src":"1255:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:31","nodeType":"YulIdentifier","src":"1276:10:31"},{"kind":"number","nativeSrc":"1288:1:31","nodeType":"YulLiteral","src":"1288:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:31","nodeType":"YulIdentifier","src":"1272:3:31"},"nativeSrc":"1272:18:31","nodeType":"YulFunctionCall","src":"1272:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:31","nodeType":"YulTypedName","src":"1259:9:31","type":""}]},{"nativeSrc":"1299:109:31","nodeType":"YulVariableDeclaration","src":"1299:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:31","nodeType":"YulIdentifier","src":"1330:9:31"},{"kind":"number","nativeSrc":"1341:66:31","nodeType":"YulLiteral","src":"1341:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:31","nodeType":"YulIdentifier","src":"1311:18:31"},"nativeSrc":"1311:97:31","nodeType":"YulFunctionCall","src":"1311:97:31"},"variables":[{"name":"mask","nativeSrc":"1303:4:31","nodeType":"YulTypedName","src":"1303:4:31","type":""}]},{"nativeSrc":"1417:51:31","nodeType":"YulAssignment","src":"1417:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:31","nodeType":"YulIdentifier","src":"1448:9:31"},{"name":"toInsert","nativeSrc":"1459:8:31","nodeType":"YulIdentifier","src":"1459:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:31","nodeType":"YulIdentifier","src":"1429:18:31"},"nativeSrc":"1429:39:31","nodeType":"YulFunctionCall","src":"1429:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:31","nodeType":"YulIdentifier","src":"1417:8:31"}]},{"nativeSrc":"1477:30:31","nodeType":"YulAssignment","src":"1477:30:31","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:31","nodeType":"YulIdentifier","src":"1490:5:31"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:31","nodeType":"YulIdentifier","src":"1501:4:31"}],"functionName":{"name":"not","nativeSrc":"1497:3:31","nodeType":"YulIdentifier","src":"1497:3:31"},"nativeSrc":"1497:9:31","nodeType":"YulFunctionCall","src":"1497:9:31"}],"functionName":{"name":"and","nativeSrc":"1486:3:31","nodeType":"YulIdentifier","src":"1486:3:31"},"nativeSrc":"1486:21:31","nodeType":"YulFunctionCall","src":"1486:21:31"},"variableNames":[{"name":"value","nativeSrc":"1477:5:31","nodeType":"YulIdentifier","src":"1477:5:31"}]},{"nativeSrc":"1516:40:31","nodeType":"YulAssignment","src":"1516:40:31","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:31","nodeType":"YulIdentifier","src":"1529:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:31","nodeType":"YulIdentifier","src":"1540:8:31"},{"name":"mask","nativeSrc":"1550:4:31","nodeType":"YulIdentifier","src":"1550:4:31"}],"functionName":{"name":"and","nativeSrc":"1536:3:31","nodeType":"YulIdentifier","src":"1536:3:31"},"nativeSrc":"1536:19:31","nodeType":"YulFunctionCall","src":"1536:19:31"}],"functionName":{"name":"or","nativeSrc":"1526:2:31","nodeType":"YulIdentifier","src":"1526:2:31"},"nativeSrc":"1526:30:31","nodeType":"YulFunctionCall","src":"1526:30:31"},"variableNames":[{"name":"result","nativeSrc":"1516:6:31","nodeType":"YulIdentifier","src":"1516:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:31","nodeType":"YulTypedName","src":"1206:5:31","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:31","nodeType":"YulTypedName","src":"1213:10:31","type":""},{"name":"toInsert","nativeSrc":"1225:8:31","nodeType":"YulTypedName","src":"1225:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:31","nodeType":"YulTypedName","src":"1238:6:31","type":""}],"src":"1169:393:31"},{"body":{"nativeSrc":"1613:32:31","nodeType":"YulBlock","src":"1613:32:31","statements":[{"nativeSrc":"1623:16:31","nodeType":"YulAssignment","src":"1623:16:31","value":{"name":"value","nativeSrc":"1634:5:31","nodeType":"YulIdentifier","src":"1634:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:31","nodeType":"YulIdentifier","src":"1623:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:31","nodeType":"YulTypedName","src":"1595:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:31","nodeType":"YulTypedName","src":"1605:7:31","type":""}],"src":"1568:77:31"},{"body":{"nativeSrc":"1683:28:31","nodeType":"YulBlock","src":"1683:28:31","statements":[{"nativeSrc":"1693:12:31","nodeType":"YulAssignment","src":"1693:12:31","value":{"name":"value","nativeSrc":"1700:5:31","nodeType":"YulIdentifier","src":"1700:5:31"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:31","nodeType":"YulIdentifier","src":"1693:3:31"}]}]},"name":"identity","nativeSrc":"1651:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:31","nodeType":"YulTypedName","src":"1669:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:31","nodeType":"YulTypedName","src":"1679:3:31","type":""}],"src":"1651:60:31"},{"body":{"nativeSrc":"1777:82:31","nodeType":"YulBlock","src":"1777:82:31","statements":[{"nativeSrc":"1787:66:31","nodeType":"YulAssignment","src":"1787:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:31","nodeType":"YulIdentifier","src":"1845:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:31","nodeType":"YulIdentifier","src":"1827:17:31"},"nativeSrc":"1827:24:31","nodeType":"YulFunctionCall","src":"1827:24:31"}],"functionName":{"name":"identity","nativeSrc":"1818:8:31","nodeType":"YulIdentifier","src":"1818:8:31"},"nativeSrc":"1818:34:31","nodeType":"YulFunctionCall","src":"1818:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:31","nodeType":"YulIdentifier","src":"1800:17:31"},"nativeSrc":"1800:53:31","nodeType":"YulFunctionCall","src":"1800:53:31"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:31","nodeType":"YulIdentifier","src":"1787:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:31","nodeType":"YulTypedName","src":"1757:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:31","nodeType":"YulTypedName","src":"1767:9:31","type":""}],"src":"1717:142:31"},{"body":{"nativeSrc":"1912:28:31","nodeType":"YulBlock","src":"1912:28:31","statements":[{"nativeSrc":"1922:12:31","nodeType":"YulAssignment","src":"1922:12:31","value":{"name":"value","nativeSrc":"1929:5:31","nodeType":"YulIdentifier","src":"1929:5:31"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:31","nodeType":"YulIdentifier","src":"1922:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:31","nodeType":"YulTypedName","src":"1898:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:31","nodeType":"YulTypedName","src":"1908:3:31","type":""}],"src":"1865:75:31"},{"body":{"nativeSrc":"2022:193:31","nodeType":"YulBlock","src":"2022:193:31","statements":[{"nativeSrc":"2032:63:31","nodeType":"YulVariableDeclaration","src":"2032:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:31","nodeType":"YulIdentifier","src":"2087:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:31","nodeType":"YulIdentifier","src":"2056:30:31"},"nativeSrc":"2056:39:31","nodeType":"YulFunctionCall","src":"2056:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:31","nodeType":"YulTypedName","src":"2036:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:31","nodeType":"YulIdentifier","src":"2111:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:31","nodeType":"YulIdentifier","src":"2151:4:31"}],"functionName":{"name":"sload","nativeSrc":"2145:5:31","nodeType":"YulIdentifier","src":"2145:5:31"},"nativeSrc":"2145:11:31","nodeType":"YulFunctionCall","src":"2145:11:31"},{"name":"offset","nativeSrc":"2158:6:31","nodeType":"YulIdentifier","src":"2158:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:31","nodeType":"YulIdentifier","src":"2190:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:31","nodeType":"YulIdentifier","src":"2166:23:31"},"nativeSrc":"2166:41:31","nodeType":"YulFunctionCall","src":"2166:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:31","nodeType":"YulIdentifier","src":"2117:27:31"},"nativeSrc":"2117:91:31","nodeType":"YulFunctionCall","src":"2117:91:31"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:31","nodeType":"YulIdentifier","src":"2104:6:31"},"nativeSrc":"2104:105:31","nodeType":"YulFunctionCall","src":"2104:105:31"},"nativeSrc":"2104:105:31","nodeType":"YulExpressionStatement","src":"2104:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:31","nodeType":"YulTypedName","src":"1999:4:31","type":""},{"name":"offset","nativeSrc":"2005:6:31","nodeType":"YulTypedName","src":"2005:6:31","type":""},{"name":"value_0","nativeSrc":"2013:7:31","nodeType":"YulTypedName","src":"2013:7:31","type":""}],"src":"1946:269:31"},{"body":{"nativeSrc":"2270:24:31","nodeType":"YulBlock","src":"2270:24:31","statements":[{"nativeSrc":"2280:8:31","nodeType":"YulAssignment","src":"2280:8:31","value":{"kind":"number","nativeSrc":"2287:1:31","nodeType":"YulLiteral","src":"2287:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:31","nodeType":"YulIdentifier","src":"2280:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:31","nodeType":"YulTypedName","src":"2266:3:31","type":""}],"src":"2221:73:31"},{"body":{"nativeSrc":"2353:136:31","nodeType":"YulBlock","src":"2353:136:31","statements":[{"nativeSrc":"2363:46:31","nodeType":"YulVariableDeclaration","src":"2363:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:31","nodeType":"YulIdentifier","src":"2377:30:31"},"nativeSrc":"2377:32:31","nodeType":"YulFunctionCall","src":"2377:32:31"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:31","nodeType":"YulTypedName","src":"2367:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:31","nodeType":"YulIdentifier","src":"2462:4:31"},{"name":"offset","nativeSrc":"2468:6:31","nodeType":"YulIdentifier","src":"2468:6:31"},{"name":"zero_0","nativeSrc":"2476:6:31","nodeType":"YulIdentifier","src":"2476:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:31","nodeType":"YulIdentifier","src":"2418:43:31"},"nativeSrc":"2418:65:31","nodeType":"YulFunctionCall","src":"2418:65:31"},"nativeSrc":"2418:65:31","nodeType":"YulExpressionStatement","src":"2418:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:31","nodeType":"YulTypedName","src":"2339:4:31","type":""},{"name":"offset","nativeSrc":"2345:6:31","nodeType":"YulTypedName","src":"2345:6:31","type":""}],"src":"2300:189:31"},{"body":{"nativeSrc":"2545:136:31","nodeType":"YulBlock","src":"2545:136:31","statements":[{"body":{"nativeSrc":"2612:63:31","nodeType":"YulBlock","src":"2612:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:31","nodeType":"YulIdentifier","src":"2656:5:31"},{"kind":"number","nativeSrc":"2663:1:31","nodeType":"YulLiteral","src":"2663:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:31","nodeType":"YulIdentifier","src":"2626:29:31"},"nativeSrc":"2626:39:31","nodeType":"YulFunctionCall","src":"2626:39:31"},"nativeSrc":"2626:39:31","nodeType":"YulExpressionStatement","src":"2626:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:31","nodeType":"YulIdentifier","src":"2565:5:31"},{"name":"end","nativeSrc":"2572:3:31","nodeType":"YulIdentifier","src":"2572:3:31"}],"functionName":{"name":"lt","nativeSrc":"2562:2:31","nodeType":"YulIdentifier","src":"2562:2:31"},"nativeSrc":"2562:14:31","nodeType":"YulFunctionCall","src":"2562:14:31"},"nativeSrc":"2555:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:31","nodeType":"YulBlock","src":"2577:26:31","statements":[{"nativeSrc":"2579:22:31","nodeType":"YulAssignment","src":"2579:22:31","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:31","nodeType":"YulIdentifier","src":"2592:5:31"},{"kind":"number","nativeSrc":"2599:1:31","nodeType":"YulLiteral","src":"2599:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:31","nodeType":"YulIdentifier","src":"2588:3:31"},"nativeSrc":"2588:13:31","nodeType":"YulFunctionCall","src":"2588:13:31"},"variableNames":[{"name":"start","nativeSrc":"2579:5:31","nodeType":"YulIdentifier","src":"2579:5:31"}]}]},"pre":{"nativeSrc":"2559:2:31","nodeType":"YulBlock","src":"2559:2:31","statements":[]},"src":"2555:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:31","nodeType":"YulTypedName","src":"2533:5:31","type":""},{"name":"end","nativeSrc":"2540:3:31","nodeType":"YulTypedName","src":"2540:3:31","type":""}],"src":"2495:186:31"},{"body":{"nativeSrc":"2766:464:31","nodeType":"YulBlock","src":"2766:464:31","statements":[{"body":{"nativeSrc":"2792:431:31","nodeType":"YulBlock","src":"2792:431:31","statements":[{"nativeSrc":"2806:54:31","nodeType":"YulVariableDeclaration","src":"2806:54:31","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:31","nodeType":"YulIdentifier","src":"2854:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:31","nodeType":"YulIdentifier","src":"2822:31:31"},"nativeSrc":"2822:38:31","nodeType":"YulFunctionCall","src":"2822:38:31"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:31","nodeType":"YulTypedName","src":"2810:8:31","type":""}]},{"nativeSrc":"2873:63:31","nodeType":"YulVariableDeclaration","src":"2873:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:31","nodeType":"YulIdentifier","src":"2896:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:31","nodeType":"YulIdentifier","src":"2924:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:31","nodeType":"YulIdentifier","src":"2906:17:31"},"nativeSrc":"2906:29:31","nodeType":"YulFunctionCall","src":"2906:29:31"}],"functionName":{"name":"add","nativeSrc":"2892:3:31","nodeType":"YulIdentifier","src":"2892:3:31"},"nativeSrc":"2892:44:31","nodeType":"YulFunctionCall","src":"2892:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:31","nodeType":"YulTypedName","src":"2877:11:31","type":""}]},{"body":{"nativeSrc":"3093:27:31","nodeType":"YulBlock","src":"3093:27:31","statements":[{"nativeSrc":"3095:23:31","nodeType":"YulAssignment","src":"3095:23:31","value":{"name":"dataArea","nativeSrc":"3110:8:31","nodeType":"YulIdentifier","src":"3110:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:31","nodeType":"YulIdentifier","src":"3095:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:31","nodeType":"YulIdentifier","src":"3077:10:31"},{"kind":"number","nativeSrc":"3089:2:31","nodeType":"YulLiteral","src":"3089:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:31","nodeType":"YulIdentifier","src":"3074:2:31"},"nativeSrc":"3074:18:31","nodeType":"YulFunctionCall","src":"3074:18:31"},"nativeSrc":"3071:49:31","nodeType":"YulIf","src":"3071:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:31","nodeType":"YulIdentifier","src":"3162:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:31","nodeType":"YulIdentifier","src":"3179:8:31"},{"arguments":[{"name":"len","nativeSrc":"3207:3:31","nodeType":"YulIdentifier","src":"3207:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:31","nodeType":"YulIdentifier","src":"3189:17:31"},"nativeSrc":"3189:22:31","nodeType":"YulFunctionCall","src":"3189:22:31"}],"functionName":{"name":"add","nativeSrc":"3175:3:31","nodeType":"YulIdentifier","src":"3175:3:31"},"nativeSrc":"3175:37:31","nodeType":"YulFunctionCall","src":"3175:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:31","nodeType":"YulIdentifier","src":"3133:28:31"},"nativeSrc":"3133:80:31","nodeType":"YulFunctionCall","src":"3133:80:31"},"nativeSrc":"3133:80:31","nodeType":"YulExpressionStatement","src":"3133:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:31","nodeType":"YulIdentifier","src":"2783:3:31"},{"kind":"number","nativeSrc":"2788:2:31","nodeType":"YulLiteral","src":"2788:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:31","nodeType":"YulIdentifier","src":"2780:2:31"},"nativeSrc":"2780:11:31","nodeType":"YulFunctionCall","src":"2780:11:31"},"nativeSrc":"2777:446:31","nodeType":"YulIf","src":"2777:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:31","nodeType":"YulTypedName","src":"2742:5:31","type":""},{"name":"len","nativeSrc":"2749:3:31","nodeType":"YulTypedName","src":"2749:3:31","type":""},{"name":"startIndex","nativeSrc":"2754:10:31","nodeType":"YulTypedName","src":"2754:10:31","type":""}],"src":"2687:543:31"},{"body":{"nativeSrc":"3299:54:31","nodeType":"YulBlock","src":"3299:54:31","statements":[{"nativeSrc":"3309:37:31","nodeType":"YulAssignment","src":"3309:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:31","nodeType":"YulIdentifier","src":"3334:4:31"},{"name":"value","nativeSrc":"3340:5:31","nodeType":"YulIdentifier","src":"3340:5:31"}],"functionName":{"name":"shr","nativeSrc":"3330:3:31","nodeType":"YulIdentifier","src":"3330:3:31"},"nativeSrc":"3330:16:31","nodeType":"YulFunctionCall","src":"3330:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:31","nodeType":"YulIdentifier","src":"3309:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:31","nodeType":"YulTypedName","src":"3274:4:31","type":""},{"name":"value","nativeSrc":"3280:5:31","nodeType":"YulTypedName","src":"3280:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:31","nodeType":"YulTypedName","src":"3290:8:31","type":""}],"src":"3236:117:31"},{"body":{"nativeSrc":"3410:118:31","nodeType":"YulBlock","src":"3410:118:31","statements":[{"nativeSrc":"3420:68:31","nodeType":"YulVariableDeclaration","src":"3420:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:31","nodeType":"YulLiteral","src":"3469:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:31","nodeType":"YulIdentifier","src":"3472:5:31"}],"functionName":{"name":"mul","nativeSrc":"3465:3:31","nodeType":"YulIdentifier","src":"3465:3:31"},"nativeSrc":"3465:13:31","nodeType":"YulFunctionCall","src":"3465:13:31"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:31","nodeType":"YulLiteral","src":"3484:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:31","nodeType":"YulIdentifier","src":"3480:3:31"},"nativeSrc":"3480:6:31","nodeType":"YulFunctionCall","src":"3480:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:31","nodeType":"YulIdentifier","src":"3436:28:31"},"nativeSrc":"3436:51:31","nodeType":"YulFunctionCall","src":"3436:51:31"}],"functionName":{"name":"not","nativeSrc":"3432:3:31","nodeType":"YulIdentifier","src":"3432:3:31"},"nativeSrc":"3432:56:31","nodeType":"YulFunctionCall","src":"3432:56:31"},"variables":[{"name":"mask","nativeSrc":"3424:4:31","nodeType":"YulTypedName","src":"3424:4:31","type":""}]},{"nativeSrc":"3497:25:31","nodeType":"YulAssignment","src":"3497:25:31","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:31","nodeType":"YulIdentifier","src":"3511:4:31"},{"name":"mask","nativeSrc":"3517:4:31","nodeType":"YulIdentifier","src":"3517:4:31"}],"functionName":{"name":"and","nativeSrc":"3507:3:31","nodeType":"YulIdentifier","src":"3507:3:31"},"nativeSrc":"3507:15:31","nodeType":"YulFunctionCall","src":"3507:15:31"},"variableNames":[{"name":"result","nativeSrc":"3497:6:31","nodeType":"YulIdentifier","src":"3497:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:31","nodeType":"YulTypedName","src":"3387:4:31","type":""},{"name":"bytes","nativeSrc":"3393:5:31","nodeType":"YulTypedName","src":"3393:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:31","nodeType":"YulTypedName","src":"3403:6:31","type":""}],"src":"3359:169:31"},{"body":{"nativeSrc":"3614:214:31","nodeType":"YulBlock","src":"3614:214:31","statements":[{"nativeSrc":"3747:37:31","nodeType":"YulAssignment","src":"3747:37:31","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:31","nodeType":"YulIdentifier","src":"3774:4:31"},{"name":"len","nativeSrc":"3780:3:31","nodeType":"YulIdentifier","src":"3780:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:31","nodeType":"YulIdentifier","src":"3755:18:31"},"nativeSrc":"3755:29:31","nodeType":"YulFunctionCall","src":"3755:29:31"},"variableNames":[{"name":"data","nativeSrc":"3747:4:31","nodeType":"YulIdentifier","src":"3747:4:31"}]},{"nativeSrc":"3793:29:31","nodeType":"YulAssignment","src":"3793:29:31","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:31","nodeType":"YulIdentifier","src":"3804:4:31"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:31","nodeType":"YulLiteral","src":"3814:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:31","nodeType":"YulIdentifier","src":"3817:3:31"}],"functionName":{"name":"mul","nativeSrc":"3810:3:31","nodeType":"YulIdentifier","src":"3810:3:31"},"nativeSrc":"3810:11:31","nodeType":"YulFunctionCall","src":"3810:11:31"}],"functionName":{"name":"or","nativeSrc":"3801:2:31","nodeType":"YulIdentifier","src":"3801:2:31"},"nativeSrc":"3801:21:31","nodeType":"YulFunctionCall","src":"3801:21:31"},"variableNames":[{"name":"used","nativeSrc":"3793:4:31","nodeType":"YulIdentifier","src":"3793:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:31","nodeType":"YulTypedName","src":"3595:4:31","type":""},{"name":"len","nativeSrc":"3601:3:31","nodeType":"YulTypedName","src":"3601:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:31","nodeType":"YulTypedName","src":"3609:4:31","type":""}],"src":"3533:295:31"},{"body":{"nativeSrc":"3925:1303:31","nodeType":"YulBlock","src":"3925:1303:31","statements":[{"nativeSrc":"3936:51:31","nodeType":"YulVariableDeclaration","src":"3936:51:31","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:31","nodeType":"YulIdentifier","src":"3983:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:31","nodeType":"YulIdentifier","src":"3950:32:31"},"nativeSrc":"3950:37:31","nodeType":"YulFunctionCall","src":"3950:37:31"},"variables":[{"name":"newLen","nativeSrc":"3940:6:31","nodeType":"YulTypedName","src":"3940:6:31","type":""}]},{"body":{"nativeSrc":"4072:22:31","nodeType":"YulBlock","src":"4072:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:31","nodeType":"YulIdentifier","src":"4074:16:31"},"nativeSrc":"4074:18:31","nodeType":"YulFunctionCall","src":"4074:18:31"},"nativeSrc":"4074:18:31","nodeType":"YulExpressionStatement","src":"4074:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:31","nodeType":"YulIdentifier","src":"4044:6:31"},{"kind":"number","nativeSrc":"4052:18:31","nodeType":"YulLiteral","src":"4052:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:31","nodeType":"YulIdentifier","src":"4041:2:31"},"nativeSrc":"4041:30:31","nodeType":"YulFunctionCall","src":"4041:30:31"},"nativeSrc":"4038:56:31","nodeType":"YulIf","src":"4038:56:31"},{"nativeSrc":"4104:52:31","nodeType":"YulVariableDeclaration","src":"4104:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:31","nodeType":"YulIdentifier","src":"4150:4:31"}],"functionName":{"name":"sload","nativeSrc":"4144:5:31","nodeType":"YulIdentifier","src":"4144:5:31"},"nativeSrc":"4144:11:31","nodeType":"YulFunctionCall","src":"4144:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:31","nodeType":"YulIdentifier","src":"4118:25:31"},"nativeSrc":"4118:38:31","nodeType":"YulFunctionCall","src":"4118:38:31"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:31","nodeType":"YulTypedName","src":"4108:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:31","nodeType":"YulIdentifier","src":"4249:4:31"},{"name":"oldLen","nativeSrc":"4255:6:31","nodeType":"YulIdentifier","src":"4255:6:31"},{"name":"newLen","nativeSrc":"4263:6:31","nodeType":"YulIdentifier","src":"4263:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:31","nodeType":"YulIdentifier","src":"4203:45:31"},"nativeSrc":"4203:67:31","nodeType":"YulFunctionCall","src":"4203:67:31"},"nativeSrc":"4203:67:31","nodeType":"YulExpressionStatement","src":"4203:67:31"},{"nativeSrc":"4280:18:31","nodeType":"YulVariableDeclaration","src":"4280:18:31","value":{"kind":"number","nativeSrc":"4297:1:31","nodeType":"YulLiteral","src":"4297:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:31","nodeType":"YulTypedName","src":"4284:9:31","type":""}]},{"nativeSrc":"4308:17:31","nodeType":"YulAssignment","src":"4308:17:31","value":{"kind":"number","nativeSrc":"4321:4:31","nodeType":"YulLiteral","src":"4321:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:31","nodeType":"YulIdentifier","src":"4308:9:31"}]},{"cases":[{"body":{"nativeSrc":"4372:611:31","nodeType":"YulBlock","src":"4372:611:31","statements":[{"nativeSrc":"4386:37:31","nodeType":"YulVariableDeclaration","src":"4386:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:31","nodeType":"YulIdentifier","src":"4405:6:31"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:31","nodeType":"YulLiteral","src":"4417:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:31","nodeType":"YulIdentifier","src":"4413:3:31"},"nativeSrc":"4413:9:31","nodeType":"YulFunctionCall","src":"4413:9:31"}],"functionName":{"name":"and","nativeSrc":"4401:3:31","nodeType":"YulIdentifier","src":"4401:3:31"},"nativeSrc":"4401:22:31","nodeType":"YulFunctionCall","src":"4401:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:31","nodeType":"YulTypedName","src":"4390:7:31","type":""}]},{"nativeSrc":"4437:51:31","nodeType":"YulVariableDeclaration","src":"4437:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:31","nodeType":"YulIdentifier","src":"4483:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:31","nodeType":"YulIdentifier","src":"4451:31:31"},"nativeSrc":"4451:37:31","nodeType":"YulFunctionCall","src":"4451:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:31","nodeType":"YulTypedName","src":"4441:6:31","type":""}]},{"nativeSrc":"4501:10:31","nodeType":"YulVariableDeclaration","src":"4501:10:31","value":{"kind":"number","nativeSrc":"4510:1:31","nodeType":"YulLiteral","src":"4510:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:31","nodeType":"YulTypedName","src":"4505:1:31","type":""}]},{"body":{"nativeSrc":"4569:163:31","nodeType":"YulBlock","src":"4569:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:31","nodeType":"YulIdentifier","src":"4594:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:31","nodeType":"YulIdentifier","src":"4612:3:31"},{"name":"srcOffset","nativeSrc":"4617:9:31","nodeType":"YulIdentifier","src":"4617:9:31"}],"functionName":{"name":"add","nativeSrc":"4608:3:31","nodeType":"YulIdentifier","src":"4608:3:31"},"nativeSrc":"4608:19:31","nodeType":"YulFunctionCall","src":"4608:19:31"}],"functionName":{"name":"mload","nativeSrc":"4602:5:31","nodeType":"YulIdentifier","src":"4602:5:31"},"nativeSrc":"4602:26:31","nodeType":"YulFunctionCall","src":"4602:26:31"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:31","nodeType":"YulIdentifier","src":"4587:6:31"},"nativeSrc":"4587:42:31","nodeType":"YulFunctionCall","src":"4587:42:31"},"nativeSrc":"4587:42:31","nodeType":"YulExpressionStatement","src":"4587:42:31"},{"nativeSrc":"4646:24:31","nodeType":"YulAssignment","src":"4646:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:31","nodeType":"YulIdentifier","src":"4660:6:31"},{"kind":"number","nativeSrc":"4668:1:31","nodeType":"YulLiteral","src":"4668:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:31","nodeType":"YulIdentifier","src":"4656:3:31"},"nativeSrc":"4656:14:31","nodeType":"YulFunctionCall","src":"4656:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:31","nodeType":"YulIdentifier","src":"4646:6:31"}]},{"nativeSrc":"4687:31:31","nodeType":"YulAssignment","src":"4687:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:31","nodeType":"YulIdentifier","src":"4704:9:31"},{"kind":"number","nativeSrc":"4715:2:31","nodeType":"YulLiteral","src":"4715:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:31","nodeType":"YulIdentifier","src":"4700:3:31"},"nativeSrc":"4700:18:31","nodeType":"YulFunctionCall","src":"4700:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:31","nodeType":"YulIdentifier","src":"4687:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:31","nodeType":"YulIdentifier","src":"4535:1:31"},{"name":"loopEnd","nativeSrc":"4538:7:31","nodeType":"YulIdentifier","src":"4538:7:31"}],"functionName":{"name":"lt","nativeSrc":"4532:2:31","nodeType":"YulIdentifier","src":"4532:2:31"},"nativeSrc":"4532:14:31","nodeType":"YulFunctionCall","src":"4532:14:31"},"nativeSrc":"4524:208:31","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:31","nodeType":"YulBlock","src":"4547:21:31","statements":[{"nativeSrc":"4549:17:31","nodeType":"YulAssignment","src":"4549:17:31","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:31","nodeType":"YulIdentifier","src":"4558:1:31"},{"kind":"number","nativeSrc":"4561:4:31","nodeType":"YulLiteral","src":"4561:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:31","nodeType":"YulIdentifier","src":"4554:3:31"},"nativeSrc":"4554:12:31","nodeType":"YulFunctionCall","src":"4554:12:31"},"variableNames":[{"name":"i","nativeSrc":"4549:1:31","nodeType":"YulIdentifier","src":"4549:1:31"}]}]},"pre":{"nativeSrc":"4528:3:31","nodeType":"YulBlock","src":"4528:3:31","statements":[]},"src":"4524:208:31"},{"body":{"nativeSrc":"4768:156:31","nodeType":"YulBlock","src":"4768:156:31","statements":[{"nativeSrc":"4786:43:31","nodeType":"YulVariableDeclaration","src":"4786:43:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:31","nodeType":"YulIdentifier","src":"4813:3:31"},{"name":"srcOffset","nativeSrc":"4818:9:31","nodeType":"YulIdentifier","src":"4818:9:31"}],"functionName":{"name":"add","nativeSrc":"4809:3:31","nodeType":"YulIdentifier","src":"4809:3:31"},"nativeSrc":"4809:19:31","nodeType":"YulFunctionCall","src":"4809:19:31"}],"functionName":{"name":"mload","nativeSrc":"4803:5:31","nodeType":"YulIdentifier","src":"4803:5:31"},"nativeSrc":"4803:26:31","nodeType":"YulFunctionCall","src":"4803:26:31"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:31","nodeType":"YulTypedName","src":"4790:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:31","nodeType":"YulIdentifier","src":"4853:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:31","nodeType":"YulIdentifier","src":"4880:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:31","nodeType":"YulIdentifier","src":"4895:6:31"},{"kind":"number","nativeSrc":"4903:4:31","nodeType":"YulLiteral","src":"4903:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:31","nodeType":"YulIdentifier","src":"4891:3:31"},"nativeSrc":"4891:17:31","nodeType":"YulFunctionCall","src":"4891:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:31","nodeType":"YulIdentifier","src":"4861:18:31"},"nativeSrc":"4861:48:31","nodeType":"YulFunctionCall","src":"4861:48:31"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:31","nodeType":"YulIdentifier","src":"4846:6:31"},"nativeSrc":"4846:64:31","nodeType":"YulFunctionCall","src":"4846:64:31"},"nativeSrc":"4846:64:31","nodeType":"YulExpressionStatement","src":"4846:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:31","nodeType":"YulIdentifier","src":"4751:7:31"},{"name":"newLen","nativeSrc":"4760:6:31","nodeType":"YulIdentifier","src":"4760:6:31"}],"functionName":{"name":"lt","nativeSrc":"4748:2:31","nodeType":"YulIdentifier","src":"4748:2:31"},"nativeSrc":"4748:19:31","nodeType":"YulFunctionCall","src":"4748:19:31"},"nativeSrc":"4745:179:31","nodeType":"YulIf","src":"4745:179:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:31","nodeType":"YulIdentifier","src":"4944:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:31","nodeType":"YulIdentifier","src":"4958:6:31"},{"kind":"number","nativeSrc":"4966:1:31","nodeType":"YulLiteral","src":"4966:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:31","nodeType":"YulIdentifier","src":"4954:3:31"},"nativeSrc":"4954:14:31","nodeType":"YulFunctionCall","src":"4954:14:31"},{"kind":"number","nativeSrc":"4970:1:31","nodeType":"YulLiteral","src":"4970:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:31","nodeType":"YulIdentifier","src":"4950:3:31"},"nativeSrc":"4950:22:31","nodeType":"YulFunctionCall","src":"4950:22:31"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:31","nodeType":"YulIdentifier","src":"4937:6:31"},"nativeSrc":"4937:36:31","nodeType":"YulFunctionCall","src":"4937:36:31"},"nativeSrc":"4937:36:31","nodeType":"YulExpressionStatement","src":"4937:36:31"}]},"nativeSrc":"4365:618:31","nodeType":"YulCase","src":"4365:618:31","value":{"kind":"number","nativeSrc":"4370:1:31","nodeType":"YulLiteral","src":"4370:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:31","nodeType":"YulBlock","src":"5000:222:31","statements":[{"nativeSrc":"5014:14:31","nodeType":"YulVariableDeclaration","src":"5014:14:31","value":{"kind":"number","nativeSrc":"5027:1:31","nodeType":"YulLiteral","src":"5027:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:31","nodeType":"YulTypedName","src":"5018:5:31","type":""}]},{"body":{"nativeSrc":"5051:67:31","nodeType":"YulBlock","src":"5051:67:31","statements":[{"nativeSrc":"5069:35:31","nodeType":"YulAssignment","src":"5069:35:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:31","nodeType":"YulIdentifier","src":"5088:3:31"},{"name":"srcOffset","nativeSrc":"5093:9:31","nodeType":"YulIdentifier","src":"5093:9:31"}],"functionName":{"name":"add","nativeSrc":"5084:3:31","nodeType":"YulIdentifier","src":"5084:3:31"},"nativeSrc":"5084:19:31","nodeType":"YulFunctionCall","src":"5084:19:31"}],"functionName":{"name":"mload","nativeSrc":"5078:5:31","nodeType":"YulIdentifier","src":"5078:5:31"},"nativeSrc":"5078:26:31","nodeType":"YulFunctionCall","src":"5078:26:31"},"variableNames":[{"name":"value","nativeSrc":"5069:5:31","nodeType":"YulIdentifier","src":"5069:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:31","nodeType":"YulIdentifier","src":"5044:6:31"},"nativeSrc":"5041:77:31","nodeType":"YulIf","src":"5041:77:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:31","nodeType":"YulIdentifier","src":"5138:4:31"},{"arguments":[{"name":"value","nativeSrc":"5197:5:31","nodeType":"YulIdentifier","src":"5197:5:31"},{"name":"newLen","nativeSrc":"5204:6:31","nodeType":"YulIdentifier","src":"5204:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:31","nodeType":"YulIdentifier","src":"5144:52:31"},"nativeSrc":"5144:67:31","nodeType":"YulFunctionCall","src":"5144:67:31"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:31","nodeType":"YulIdentifier","src":"5131:6:31"},"nativeSrc":"5131:81:31","nodeType":"YulFunctionCall","src":"5131:81:31"},"nativeSrc":"5131:81:31","nodeType":"YulExpressionStatement","src":"5131:81:31"}]},"nativeSrc":"4992:230:31","nodeType":"YulCase","src":"4992:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:31","nodeType":"YulIdentifier","src":"4345:6:31"},{"kind":"number","nativeSrc":"4353:2:31","nodeType":"YulLiteral","src":"4353:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:31","nodeType":"YulIdentifier","src":"4342:2:31"},"nativeSrc":"4342:14:31","nodeType":"YulFunctionCall","src":"4342:14:31"},"nativeSrc":"4335:887:31","nodeType":"YulSwitch","src":"4335:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:31","nodeType":"YulTypedName","src":"3914:4:31","type":""},{"name":"src","nativeSrc":"3920:3:31","nodeType":"YulTypedName","src":"3920:3:31","type":""}],"src":"3833:1395:31"},{"body":{"nativeSrc":"5279:32:31","nodeType":"YulBlock","src":"5279:32:31","statements":[{"nativeSrc":"5289:16:31","nodeType":"YulAssignment","src":"5289:16:31","value":{"name":"value","nativeSrc":"5300:5:31","nodeType":"YulIdentifier","src":"5300:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:31","nodeType":"YulIdentifier","src":"5289:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5234:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:31","nodeType":"YulTypedName","src":"5261:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:31","nodeType":"YulTypedName","src":"5271:7:31","type":""}],"src":"5234:77:31"},{"body":{"nativeSrc":"5382:53:31","nodeType":"YulBlock","src":"5382:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5399:3:31","nodeType":"YulIdentifier","src":"5399:3:31"},{"arguments":[{"name":"value","nativeSrc":"5422:5:31","nodeType":"YulIdentifier","src":"5422:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5404:17:31","nodeType":"YulIdentifier","src":"5404:17:31"},"nativeSrc":"5404:24:31","nodeType":"YulFunctionCall","src":"5404:24:31"}],"functionName":{"name":"mstore","nativeSrc":"5392:6:31","nodeType":"YulIdentifier","src":"5392:6:31"},"nativeSrc":"5392:37:31","nodeType":"YulFunctionCall","src":"5392:37:31"},"nativeSrc":"5392:37:31","nodeType":"YulExpressionStatement","src":"5392:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5317:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5370:5:31","nodeType":"YulTypedName","src":"5370:5:31","type":""},{"name":"pos","nativeSrc":"5377:3:31","nodeType":"YulTypedName","src":"5377:3:31","type":""}],"src":"5317:118:31"},{"body":{"nativeSrc":"5506:53:31","nodeType":"YulBlock","src":"5506:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5523:3:31","nodeType":"YulIdentifier","src":"5523:3:31"},{"arguments":[{"name":"value","nativeSrc":"5546:5:31","nodeType":"YulIdentifier","src":"5546:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5528:17:31","nodeType":"YulIdentifier","src":"5528:17:31"},"nativeSrc":"5528:24:31","nodeType":"YulFunctionCall","src":"5528:24:31"}],"functionName":{"name":"mstore","nativeSrc":"5516:6:31","nodeType":"YulIdentifier","src":"5516:6:31"},"nativeSrc":"5516:37:31","nodeType":"YulFunctionCall","src":"5516:37:31"},"nativeSrc":"5516:37:31","nodeType":"YulExpressionStatement","src":"5516:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5441:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5494:5:31","nodeType":"YulTypedName","src":"5494:5:31","type":""},{"name":"pos","nativeSrc":"5501:3:31","nodeType":"YulTypedName","src":"5501:3:31","type":""}],"src":"5441:118:31"},{"body":{"nativeSrc":"5610:81:31","nodeType":"YulBlock","src":"5610:81:31","statements":[{"nativeSrc":"5620:65:31","nodeType":"YulAssignment","src":"5620:65:31","value":{"arguments":[{"name":"value","nativeSrc":"5635:5:31","nodeType":"YulIdentifier","src":"5635:5:31"},{"kind":"number","nativeSrc":"5642:42:31","nodeType":"YulLiteral","src":"5642:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5631:3:31","nodeType":"YulIdentifier","src":"5631:3:31"},"nativeSrc":"5631:54:31","nodeType":"YulFunctionCall","src":"5631:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5620:7:31","nodeType":"YulIdentifier","src":"5620:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5565:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5592:5:31","nodeType":"YulTypedName","src":"5592:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5602:7:31","nodeType":"YulTypedName","src":"5602:7:31","type":""}],"src":"5565:126:31"},{"body":{"nativeSrc":"5742:51:31","nodeType":"YulBlock","src":"5742:51:31","statements":[{"nativeSrc":"5752:35:31","nodeType":"YulAssignment","src":"5752:35:31","value":{"arguments":[{"name":"value","nativeSrc":"5781:5:31","nodeType":"YulIdentifier","src":"5781:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5763:17:31","nodeType":"YulIdentifier","src":"5763:17:31"},"nativeSrc":"5763:24:31","nodeType":"YulFunctionCall","src":"5763:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5752:7:31","nodeType":"YulIdentifier","src":"5752:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"5697:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5724:5:31","nodeType":"YulTypedName","src":"5724:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5734:7:31","nodeType":"YulTypedName","src":"5734:7:31","type":""}],"src":"5697:96:31"},{"body":{"nativeSrc":"5864:53:31","nodeType":"YulBlock","src":"5864:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5881:3:31","nodeType":"YulIdentifier","src":"5881:3:31"},{"arguments":[{"name":"value","nativeSrc":"5904:5:31","nodeType":"YulIdentifier","src":"5904:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5886:17:31","nodeType":"YulIdentifier","src":"5886:17:31"},"nativeSrc":"5886:24:31","nodeType":"YulFunctionCall","src":"5886:24:31"}],"functionName":{"name":"mstore","nativeSrc":"5874:6:31","nodeType":"YulIdentifier","src":"5874:6:31"},"nativeSrc":"5874:37:31","nodeType":"YulFunctionCall","src":"5874:37:31"},"nativeSrc":"5874:37:31","nodeType":"YulExpressionStatement","src":"5874:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5799:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5852:5:31","nodeType":"YulTypedName","src":"5852:5:31","type":""},{"name":"pos","nativeSrc":"5859:3:31","nodeType":"YulTypedName","src":"5859:3:31","type":""}],"src":"5799:118:31"},{"body":{"nativeSrc":"6133:454:31","nodeType":"YulBlock","src":"6133:454:31","statements":[{"nativeSrc":"6143:27:31","nodeType":"YulAssignment","src":"6143:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"6155:9:31","nodeType":"YulIdentifier","src":"6155:9:31"},{"kind":"number","nativeSrc":"6166:3:31","nodeType":"YulLiteral","src":"6166:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6151:3:31","nodeType":"YulIdentifier","src":"6151:3:31"},"nativeSrc":"6151:19:31","nodeType":"YulFunctionCall","src":"6151:19:31"},"variableNames":[{"name":"tail","nativeSrc":"6143:4:31","nodeType":"YulIdentifier","src":"6143:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6224:6:31","nodeType":"YulIdentifier","src":"6224:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6237:9:31","nodeType":"YulIdentifier","src":"6237:9:31"},{"kind":"number","nativeSrc":"6248:1:31","nodeType":"YulLiteral","src":"6248:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6233:3:31","nodeType":"YulIdentifier","src":"6233:3:31"},"nativeSrc":"6233:17:31","nodeType":"YulFunctionCall","src":"6233:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6180:43:31","nodeType":"YulIdentifier","src":"6180:43:31"},"nativeSrc":"6180:71:31","nodeType":"YulFunctionCall","src":"6180:71:31"},"nativeSrc":"6180:71:31","nodeType":"YulExpressionStatement","src":"6180:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6305:6:31","nodeType":"YulIdentifier","src":"6305:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6318:9:31","nodeType":"YulIdentifier","src":"6318:9:31"},{"kind":"number","nativeSrc":"6329:2:31","nodeType":"YulLiteral","src":"6329:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6314:3:31","nodeType":"YulIdentifier","src":"6314:3:31"},"nativeSrc":"6314:18:31","nodeType":"YulFunctionCall","src":"6314:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6261:43:31","nodeType":"YulIdentifier","src":"6261:43:31"},"nativeSrc":"6261:72:31","nodeType":"YulFunctionCall","src":"6261:72:31"},"nativeSrc":"6261:72:31","nodeType":"YulExpressionStatement","src":"6261:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6387:6:31","nodeType":"YulIdentifier","src":"6387:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6400:9:31","nodeType":"YulIdentifier","src":"6400:9:31"},{"kind":"number","nativeSrc":"6411:2:31","nodeType":"YulLiteral","src":"6411:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6396:3:31","nodeType":"YulIdentifier","src":"6396:3:31"},"nativeSrc":"6396:18:31","nodeType":"YulFunctionCall","src":"6396:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6343:43:31","nodeType":"YulIdentifier","src":"6343:43:31"},"nativeSrc":"6343:72:31","nodeType":"YulFunctionCall","src":"6343:72:31"},"nativeSrc":"6343:72:31","nodeType":"YulExpressionStatement","src":"6343:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"6469:6:31","nodeType":"YulIdentifier","src":"6469:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6482:9:31","nodeType":"YulIdentifier","src":"6482:9:31"},{"kind":"number","nativeSrc":"6493:2:31","nodeType":"YulLiteral","src":"6493:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6478:3:31","nodeType":"YulIdentifier","src":"6478:3:31"},"nativeSrc":"6478:18:31","nodeType":"YulFunctionCall","src":"6478:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6425:43:31","nodeType":"YulIdentifier","src":"6425:43:31"},"nativeSrc":"6425:72:31","nodeType":"YulFunctionCall","src":"6425:72:31"},"nativeSrc":"6425:72:31","nodeType":"YulExpressionStatement","src":"6425:72:31"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"6551:6:31","nodeType":"YulIdentifier","src":"6551:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6564:9:31","nodeType":"YulIdentifier","src":"6564:9:31"},{"kind":"number","nativeSrc":"6575:3:31","nodeType":"YulLiteral","src":"6575:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6560:3:31","nodeType":"YulIdentifier","src":"6560:3:31"},"nativeSrc":"6560:19:31","nodeType":"YulFunctionCall","src":"6560:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6507:43:31","nodeType":"YulIdentifier","src":"6507:43:31"},"nativeSrc":"6507:73:31","nodeType":"YulFunctionCall","src":"6507:73:31"},"nativeSrc":"6507:73:31","nodeType":"YulExpressionStatement","src":"6507:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"5923:664:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6073:9:31","nodeType":"YulTypedName","src":"6073:9:31","type":""},{"name":"value4","nativeSrc":"6085:6:31","nodeType":"YulTypedName","src":"6085:6:31","type":""},{"name":"value3","nativeSrc":"6093:6:31","nodeType":"YulTypedName","src":"6093:6:31","type":""},{"name":"value2","nativeSrc":"6101:6:31","nodeType":"YulTypedName","src":"6101:6:31","type":""},{"name":"value1","nativeSrc":"6109:6:31","nodeType":"YulTypedName","src":"6109:6:31","type":""},{"name":"value0","nativeSrc":"6117:6:31","nodeType":"YulTypedName","src":"6117:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6128:4:31","nodeType":"YulTypedName","src":"6128:4:31","type":""}],"src":"5923:664:31"},{"body":{"nativeSrc":"6689:73:31","nodeType":"YulBlock","src":"6689:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6706:3:31","nodeType":"YulIdentifier","src":"6706:3:31"},{"name":"length","nativeSrc":"6711:6:31","nodeType":"YulIdentifier","src":"6711:6:31"}],"functionName":{"name":"mstore","nativeSrc":"6699:6:31","nodeType":"YulIdentifier","src":"6699:6:31"},"nativeSrc":"6699:19:31","nodeType":"YulFunctionCall","src":"6699:19:31"},"nativeSrc":"6699:19:31","nodeType":"YulExpressionStatement","src":"6699:19:31"},{"nativeSrc":"6727:29:31","nodeType":"YulAssignment","src":"6727:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"6746:3:31","nodeType":"YulIdentifier","src":"6746:3:31"},{"kind":"number","nativeSrc":"6751:4:31","nodeType":"YulLiteral","src":"6751:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6742:3:31","nodeType":"YulIdentifier","src":"6742:3:31"},"nativeSrc":"6742:14:31","nodeType":"YulFunctionCall","src":"6742:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"6727:11:31","nodeType":"YulIdentifier","src":"6727:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6593:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6661:3:31","nodeType":"YulTypedName","src":"6661:3:31","type":""},{"name":"length","nativeSrc":"6666:6:31","nodeType":"YulTypedName","src":"6666:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6677:11:31","nodeType":"YulTypedName","src":"6677:11:31","type":""}],"src":"6593:169:31"},{"body":{"nativeSrc":"6830:184:31","nodeType":"YulBlock","src":"6830:184:31","statements":[{"nativeSrc":"6840:10:31","nodeType":"YulVariableDeclaration","src":"6840:10:31","value":{"kind":"number","nativeSrc":"6849:1:31","nodeType":"YulLiteral","src":"6849:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6844:1:31","nodeType":"YulTypedName","src":"6844:1:31","type":""}]},{"body":{"nativeSrc":"6909:63:31","nodeType":"YulBlock","src":"6909:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6934:3:31","nodeType":"YulIdentifier","src":"6934:3:31"},{"name":"i","nativeSrc":"6939:1:31","nodeType":"YulIdentifier","src":"6939:1:31"}],"functionName":{"name":"add","nativeSrc":"6930:3:31","nodeType":"YulIdentifier","src":"6930:3:31"},"nativeSrc":"6930:11:31","nodeType":"YulFunctionCall","src":"6930:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6953:3:31","nodeType":"YulIdentifier","src":"6953:3:31"},{"name":"i","nativeSrc":"6958:1:31","nodeType":"YulIdentifier","src":"6958:1:31"}],"functionName":{"name":"add","nativeSrc":"6949:3:31","nodeType":"YulIdentifier","src":"6949:3:31"},"nativeSrc":"6949:11:31","nodeType":"YulFunctionCall","src":"6949:11:31"}],"functionName":{"name":"mload","nativeSrc":"6943:5:31","nodeType":"YulIdentifier","src":"6943:5:31"},"nativeSrc":"6943:18:31","nodeType":"YulFunctionCall","src":"6943:18:31"}],"functionName":{"name":"mstore","nativeSrc":"6923:6:31","nodeType":"YulIdentifier","src":"6923:6:31"},"nativeSrc":"6923:39:31","nodeType":"YulFunctionCall","src":"6923:39:31"},"nativeSrc":"6923:39:31","nodeType":"YulExpressionStatement","src":"6923:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6870:1:31","nodeType":"YulIdentifier","src":"6870:1:31"},{"name":"length","nativeSrc":"6873:6:31","nodeType":"YulIdentifier","src":"6873:6:31"}],"functionName":{"name":"lt","nativeSrc":"6867:2:31","nodeType":"YulIdentifier","src":"6867:2:31"},"nativeSrc":"6867:13:31","nodeType":"YulFunctionCall","src":"6867:13:31"},"nativeSrc":"6859:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"6881:19:31","nodeType":"YulBlock","src":"6881:19:31","statements":[{"nativeSrc":"6883:15:31","nodeType":"YulAssignment","src":"6883:15:31","value":{"arguments":[{"name":"i","nativeSrc":"6892:1:31","nodeType":"YulIdentifier","src":"6892:1:31"},{"kind":"number","nativeSrc":"6895:2:31","nodeType":"YulLiteral","src":"6895:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6888:3:31","nodeType":"YulIdentifier","src":"6888:3:31"},"nativeSrc":"6888:10:31","nodeType":"YulFunctionCall","src":"6888:10:31"},"variableNames":[{"name":"i","nativeSrc":"6883:1:31","nodeType":"YulIdentifier","src":"6883:1:31"}]}]},"pre":{"nativeSrc":"6863:3:31","nodeType":"YulBlock","src":"6863:3:31","statements":[]},"src":"6859:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6992:3:31","nodeType":"YulIdentifier","src":"6992:3:31"},{"name":"length","nativeSrc":"6997:6:31","nodeType":"YulIdentifier","src":"6997:6:31"}],"functionName":{"name":"add","nativeSrc":"6988:3:31","nodeType":"YulIdentifier","src":"6988:3:31"},"nativeSrc":"6988:16:31","nodeType":"YulFunctionCall","src":"6988:16:31"},{"kind":"number","nativeSrc":"7006:1:31","nodeType":"YulLiteral","src":"7006:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6981:6:31","nodeType":"YulIdentifier","src":"6981:6:31"},"nativeSrc":"6981:27:31","nodeType":"YulFunctionCall","src":"6981:27:31"},"nativeSrc":"6981:27:31","nodeType":"YulExpressionStatement","src":"6981:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6768:246:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6812:3:31","nodeType":"YulTypedName","src":"6812:3:31","type":""},{"name":"dst","nativeSrc":"6817:3:31","nodeType":"YulTypedName","src":"6817:3:31","type":""},{"name":"length","nativeSrc":"6822:6:31","nodeType":"YulTypedName","src":"6822:6:31","type":""}],"src":"6768:246:31"},{"body":{"nativeSrc":"7068:54:31","nodeType":"YulBlock","src":"7068:54:31","statements":[{"nativeSrc":"7078:38:31","nodeType":"YulAssignment","src":"7078:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7096:5:31","nodeType":"YulIdentifier","src":"7096:5:31"},{"kind":"number","nativeSrc":"7103:2:31","nodeType":"YulLiteral","src":"7103:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7092:3:31","nodeType":"YulIdentifier","src":"7092:3:31"},"nativeSrc":"7092:14:31","nodeType":"YulFunctionCall","src":"7092:14:31"},{"arguments":[{"kind":"number","nativeSrc":"7112:2:31","nodeType":"YulLiteral","src":"7112:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7108:3:31","nodeType":"YulIdentifier","src":"7108:3:31"},"nativeSrc":"7108:7:31","nodeType":"YulFunctionCall","src":"7108:7:31"}],"functionName":{"name":"and","nativeSrc":"7088:3:31","nodeType":"YulIdentifier","src":"7088:3:31"},"nativeSrc":"7088:28:31","nodeType":"YulFunctionCall","src":"7088:28:31"},"variableNames":[{"name":"result","nativeSrc":"7078:6:31","nodeType":"YulIdentifier","src":"7078:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"7020:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7051:5:31","nodeType":"YulTypedName","src":"7051:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7061:6:31","nodeType":"YulTypedName","src":"7061:6:31","type":""}],"src":"7020:102:31"},{"body":{"nativeSrc":"7220:285:31","nodeType":"YulBlock","src":"7220:285:31","statements":[{"nativeSrc":"7230:53:31","nodeType":"YulVariableDeclaration","src":"7230:53:31","value":{"arguments":[{"name":"value","nativeSrc":"7277:5:31","nodeType":"YulIdentifier","src":"7277:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7244:32:31","nodeType":"YulIdentifier","src":"7244:32:31"},"nativeSrc":"7244:39:31","nodeType":"YulFunctionCall","src":"7244:39:31"},"variables":[{"name":"length","nativeSrc":"7234:6:31","nodeType":"YulTypedName","src":"7234:6:31","type":""}]},{"nativeSrc":"7292:78:31","nodeType":"YulAssignment","src":"7292:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"7358:3:31","nodeType":"YulIdentifier","src":"7358:3:31"},{"name":"length","nativeSrc":"7363:6:31","nodeType":"YulIdentifier","src":"7363:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7299:58:31","nodeType":"YulIdentifier","src":"7299:58:31"},"nativeSrc":"7299:71:31","nodeType":"YulFunctionCall","src":"7299:71:31"},"variableNames":[{"name":"pos","nativeSrc":"7292:3:31","nodeType":"YulIdentifier","src":"7292:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7418:5:31","nodeType":"YulIdentifier","src":"7418:5:31"},{"kind":"number","nativeSrc":"7425:4:31","nodeType":"YulLiteral","src":"7425:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7414:3:31","nodeType":"YulIdentifier","src":"7414:3:31"},"nativeSrc":"7414:16:31","nodeType":"YulFunctionCall","src":"7414:16:31"},{"name":"pos","nativeSrc":"7432:3:31","nodeType":"YulIdentifier","src":"7432:3:31"},{"name":"length","nativeSrc":"7437:6:31","nodeType":"YulIdentifier","src":"7437:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7379:34:31","nodeType":"YulIdentifier","src":"7379:34:31"},"nativeSrc":"7379:65:31","nodeType":"YulFunctionCall","src":"7379:65:31"},"nativeSrc":"7379:65:31","nodeType":"YulExpressionStatement","src":"7379:65:31"},{"nativeSrc":"7453:46:31","nodeType":"YulAssignment","src":"7453:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"7464:3:31","nodeType":"YulIdentifier","src":"7464:3:31"},{"arguments":[{"name":"length","nativeSrc":"7491:6:31","nodeType":"YulIdentifier","src":"7491:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7469:21:31","nodeType":"YulIdentifier","src":"7469:21:31"},"nativeSrc":"7469:29:31","nodeType":"YulFunctionCall","src":"7469:29:31"}],"functionName":{"name":"add","nativeSrc":"7460:3:31","nodeType":"YulIdentifier","src":"7460:3:31"},"nativeSrc":"7460:39:31","nodeType":"YulFunctionCall","src":"7460:39:31"},"variableNames":[{"name":"end","nativeSrc":"7453:3:31","nodeType":"YulIdentifier","src":"7453:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7128:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7201:5:31","nodeType":"YulTypedName","src":"7201:5:31","type":""},{"name":"pos","nativeSrc":"7208:3:31","nodeType":"YulTypedName","src":"7208:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7216:3:31","nodeType":"YulTypedName","src":"7216:3:31","type":""}],"src":"7128:377:31"},{"body":{"nativeSrc":"7629:195:31","nodeType":"YulBlock","src":"7629:195:31","statements":[{"nativeSrc":"7639:26:31","nodeType":"YulAssignment","src":"7639:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"7651:9:31","nodeType":"YulIdentifier","src":"7651:9:31"},{"kind":"number","nativeSrc":"7662:2:31","nodeType":"YulLiteral","src":"7662:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7647:3:31","nodeType":"YulIdentifier","src":"7647:3:31"},"nativeSrc":"7647:18:31","nodeType":"YulFunctionCall","src":"7647:18:31"},"variableNames":[{"name":"tail","nativeSrc":"7639:4:31","nodeType":"YulIdentifier","src":"7639:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7686:9:31","nodeType":"YulIdentifier","src":"7686:9:31"},{"kind":"number","nativeSrc":"7697:1:31","nodeType":"YulLiteral","src":"7697:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7682:3:31","nodeType":"YulIdentifier","src":"7682:3:31"},"nativeSrc":"7682:17:31","nodeType":"YulFunctionCall","src":"7682:17:31"},{"arguments":[{"name":"tail","nativeSrc":"7705:4:31","nodeType":"YulIdentifier","src":"7705:4:31"},{"name":"headStart","nativeSrc":"7711:9:31","nodeType":"YulIdentifier","src":"7711:9:31"}],"functionName":{"name":"sub","nativeSrc":"7701:3:31","nodeType":"YulIdentifier","src":"7701:3:31"},"nativeSrc":"7701:20:31","nodeType":"YulFunctionCall","src":"7701:20:31"}],"functionName":{"name":"mstore","nativeSrc":"7675:6:31","nodeType":"YulIdentifier","src":"7675:6:31"},"nativeSrc":"7675:47:31","nodeType":"YulFunctionCall","src":"7675:47:31"},"nativeSrc":"7675:47:31","nodeType":"YulExpressionStatement","src":"7675:47:31"},{"nativeSrc":"7731:86:31","nodeType":"YulAssignment","src":"7731:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"7803:6:31","nodeType":"YulIdentifier","src":"7803:6:31"},{"name":"tail","nativeSrc":"7812:4:31","nodeType":"YulIdentifier","src":"7812:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7739:63:31","nodeType":"YulIdentifier","src":"7739:63:31"},"nativeSrc":"7739:78:31","nodeType":"YulFunctionCall","src":"7739:78:31"},"variableNames":[{"name":"tail","nativeSrc":"7731:4:31","nodeType":"YulIdentifier","src":"7731:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7511:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7601:9:31","nodeType":"YulTypedName","src":"7601:9:31","type":""},{"name":"value0","nativeSrc":"7613:6:31","nodeType":"YulTypedName","src":"7613:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7624:4:31","nodeType":"YulTypedName","src":"7624:4:31","type":""}],"src":"7511:313:31"},{"body":{"nativeSrc":"7888:40:31","nodeType":"YulBlock","src":"7888:40:31","statements":[{"nativeSrc":"7899:22:31","nodeType":"YulAssignment","src":"7899:22:31","value":{"arguments":[{"name":"value","nativeSrc":"7915:5:31","nodeType":"YulIdentifier","src":"7915:5:31"}],"functionName":{"name":"mload","nativeSrc":"7909:5:31","nodeType":"YulIdentifier","src":"7909:5:31"},"nativeSrc":"7909:12:31","nodeType":"YulFunctionCall","src":"7909:12:31"},"variableNames":[{"name":"length","nativeSrc":"7899:6:31","nodeType":"YulIdentifier","src":"7899:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7830:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7871:5:31","nodeType":"YulTypedName","src":"7871:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7881:6:31","nodeType":"YulTypedName","src":"7881:6:31","type":""}],"src":"7830:98:31"},{"body":{"nativeSrc":"7990:60:31","nodeType":"YulBlock","src":"7990:60:31","statements":[{"nativeSrc":"8000:11:31","nodeType":"YulAssignment","src":"8000:11:31","value":{"name":"ptr","nativeSrc":"8008:3:31","nodeType":"YulIdentifier","src":"8008:3:31"},"variableNames":[{"name":"data","nativeSrc":"8000:4:31","nodeType":"YulIdentifier","src":"8000:4:31"}]},{"nativeSrc":"8021:22:31","nodeType":"YulAssignment","src":"8021:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"8033:3:31","nodeType":"YulIdentifier","src":"8033:3:31"},{"kind":"number","nativeSrc":"8038:4:31","nodeType":"YulLiteral","src":"8038:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8029:3:31","nodeType":"YulIdentifier","src":"8029:3:31"},"nativeSrc":"8029:14:31","nodeType":"YulFunctionCall","src":"8029:14:31"},"variableNames":[{"name":"data","nativeSrc":"8021:4:31","nodeType":"YulIdentifier","src":"8021:4:31"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"7934:116:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7977:3:31","nodeType":"YulTypedName","src":"7977:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7985:4:31","nodeType":"YulTypedName","src":"7985:4:31","type":""}],"src":"7934:116:31"},{"body":{"nativeSrc":"8111:99:31","nodeType":"YulBlock","src":"8111:99:31","statements":[{"nativeSrc":"8122:42:31","nodeType":"YulVariableDeclaration","src":"8122:42:31","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8159:3:31","nodeType":"YulIdentifier","src":"8159:3:31"}],"functionName":{"name":"mload","nativeSrc":"8153:5:31","nodeType":"YulIdentifier","src":"8153:5:31"},"nativeSrc":"8153:10:31","nodeType":"YulFunctionCall","src":"8153:10:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8135:17:31","nodeType":"YulIdentifier","src":"8135:17:31"},"nativeSrc":"8135:29:31","nodeType":"YulFunctionCall","src":"8135:29:31"},"variables":[{"name":"value","nativeSrc":"8126:5:31","nodeType":"YulTypedName","src":"8126:5:31","type":""}]},{"nativeSrc":"8174:29:31","nodeType":"YulAssignment","src":"8174:29:31","value":{"name":"value","nativeSrc":"8198:5:31","nodeType":"YulIdentifier","src":"8198:5:31"},"variableNames":[{"name":"returnValue","nativeSrc":"8174:11:31","nodeType":"YulIdentifier","src":"8174:11:31"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"8056:154:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8091:3:31","nodeType":"YulTypedName","src":"8091:3:31","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"8099:11:31","nodeType":"YulTypedName","src":"8099:11:31","type":""}],"src":"8056:154:31"},{"body":{"nativeSrc":"8306:504:31","nodeType":"YulBlock","src":"8306:504:31","statements":[{"nativeSrc":"8317:52:31","nodeType":"YulVariableDeclaration","src":"8317:52:31","value":{"arguments":[{"name":"array","nativeSrc":"8363:5:31","nodeType":"YulIdentifier","src":"8363:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8331:31:31","nodeType":"YulIdentifier","src":"8331:31:31"},"nativeSrc":"8331:38:31","nodeType":"YulFunctionCall","src":"8331:38:31"},"variables":[{"name":"length","nativeSrc":"8321:6:31","nodeType":"YulTypedName","src":"8321:6:31","type":""}]},{"nativeSrc":"8378:21:31","nodeType":"YulVariableDeclaration","src":"8378:21:31","value":{"name":"array","nativeSrc":"8394:5:31","nodeType":"YulIdentifier","src":"8394:5:31"},"variables":[{"name":"dataArea","nativeSrc":"8382:8:31","nodeType":"YulTypedName","src":"8382:8:31","type":""}]},{"nativeSrc":"8409:52:31","nodeType":"YulAssignment","src":"8409:52:31","value":{"arguments":[{"name":"array","nativeSrc":"8455:5:31","nodeType":"YulIdentifier","src":"8455:5:31"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"8421:33:31","nodeType":"YulIdentifier","src":"8421:33:31"},"nativeSrc":"8421:40:31","nodeType":"YulFunctionCall","src":"8421:40:31"},"variableNames":[{"name":"dataArea","nativeSrc":"8409:8:31","nodeType":"YulIdentifier","src":"8409:8:31"}]},{"nativeSrc":"8471:44:31","nodeType":"YulAssignment","src":"8471:44:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"8506:8:31","nodeType":"YulIdentifier","src":"8506:8:31"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"8480:25:31","nodeType":"YulIdentifier","src":"8480:25:31"},"nativeSrc":"8480:35:31","nodeType":"YulFunctionCall","src":"8480:35:31"},"variableNames":[{"name":"value","nativeSrc":"8471:5:31","nodeType":"YulIdentifier","src":"8471:5:31"}]},{"body":{"nativeSrc":"8543:260:31","nodeType":"YulBlock","src":"8543:260:31","statements":[{"nativeSrc":"8557:236:31","nodeType":"YulAssignment","src":"8557:236:31","value":{"arguments":[{"name":"value","nativeSrc":"8587:5:31","nodeType":"YulIdentifier","src":"8587:5:31"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8654:1:31","nodeType":"YulLiteral","src":"8654:1:31","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"8661:2:31","nodeType":"YulLiteral","src":"8661:2:31","type":"","value":"32"},{"name":"length","nativeSrc":"8665:6:31","nodeType":"YulIdentifier","src":"8665:6:31"}],"functionName":{"name":"sub","nativeSrc":"8657:3:31","nodeType":"YulIdentifier","src":"8657:3:31"},"nativeSrc":"8657:15:31","nodeType":"YulFunctionCall","src":"8657:15:31"}],"functionName":{"name":"mul","nativeSrc":"8650:3:31","nodeType":"YulIdentifier","src":"8650:3:31"},"nativeSrc":"8650:23:31","nodeType":"YulFunctionCall","src":"8650:23:31"},{"kind":"number","nativeSrc":"8695:66:31","nodeType":"YulLiteral","src":"8695:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8610:18:31","nodeType":"YulIdentifier","src":"8610:18:31"},"nativeSrc":"8610:169:31","nodeType":"YulFunctionCall","src":"8610:169:31"}],"functionName":{"name":"and","nativeSrc":"8566:3:31","nodeType":"YulIdentifier","src":"8566:3:31"},"nativeSrc":"8566:227:31","nodeType":"YulFunctionCall","src":"8566:227:31"},"variableNames":[{"name":"value","nativeSrc":"8557:5:31","nodeType":"YulIdentifier","src":"8557:5:31"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8531:6:31","nodeType":"YulIdentifier","src":"8531:6:31"},{"kind":"number","nativeSrc":"8539:2:31","nodeType":"YulLiteral","src":"8539:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8528:2:31","nodeType":"YulIdentifier","src":"8528:2:31"},"nativeSrc":"8528:14:31","nodeType":"YulFunctionCall","src":"8528:14:31"},"nativeSrc":"8525:278:31","nodeType":"YulIf","src":"8525:278:31"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"8216:594:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"8290:5:31","nodeType":"YulTypedName","src":"8290:5:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8300:5:31","nodeType":"YulTypedName","src":"8300:5:31","type":""}],"src":"8216:594:31"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10F SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP POP POP PUSH3 0x128 PUSH1 0x5 DUP4 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x146 PUSH1 0x6 DUP3 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x185 PUSH3 0x26A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1D8 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x20B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xA39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x238 JUMPI PUSH3 0x230 DUP4 PUSH3 0x3CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x264 JUMP JUMPDEST DUP3 PUSH3 0x24A DUP4 PUSH3 0x438 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x25B SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2AC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DB DUP4 DUP4 PUSH3 0x442 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3C0 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x35C PUSH3 0x4AD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x41B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x412 SWAP2 SWAP1 PUSH3 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x429 SWAP1 PUSH3 0x9C9 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x537 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x54D JUMPI PUSH3 0x54C PUSH3 0x4EF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5B7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x578 JUMP JUMPDEST PUSH3 0x5C3 DUP7 DUP4 PUSH3 0x578 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x610 PUSH3 0x60A PUSH3 0x604 DUP5 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x5E5 JUMP JUMPDEST PUSH3 0x5DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62C DUP4 PUSH3 0x5EF JUMP JUMPDEST PUSH3 0x644 PUSH3 0x63B DUP3 PUSH3 0x617 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x585 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x65B PUSH3 0x64C JUMP JUMPDEST PUSH3 0x668 DUP2 DUP5 DUP5 PUSH3 0x621 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x690 JUMPI PUSH3 0x684 PUSH1 0x0 DUP3 PUSH3 0x651 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x66E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6A9 DUP2 PUSH3 0x553 JUMP JUMPDEST PUSH3 0x6B4 DUP5 PUSH3 0x568 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6DC PUSH3 0x6D3 DUP6 PUSH3 0x568 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x66D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x704 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6E4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x71F DUP4 DUP4 PUSH3 0x6F1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x73A DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x756 JUMPI PUSH3 0x755 PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST PUSH3 0x762 DUP3 SLOAD PUSH3 0x51E JUMP JUMPDEST PUSH3 0x76F DUP3 DUP3 DUP6 PUSH3 0x694 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7A7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x792 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x79E DUP6 DUP3 PUSH3 0x711 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x80E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7B7 DUP7 PUSH3 0x553 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7E1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7BA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x801 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7FD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6F1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82B DUP2 PUSH3 0x816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x83C DUP2 PUSH3 0x5DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x86F DUP3 PUSH3 0x842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x881 DUP2 PUSH3 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x89E PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8AD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8BC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8CB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x831 JUMP JUMPDEST PUSH3 0x8DA PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x876 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x915 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93F DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH3 0x94B DUP2 DUP6 PUSH3 0x8E4 JUMP JUMPDEST SWAP4 POP PUSH3 0x95D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8F5 JUMP JUMPDEST PUSH3 0x968 DUP2 PUSH3 0x921 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x98F DUP2 DUP5 PUSH3 0x932 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C0 DUP3 MLOAD PUSH3 0x816 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9D6 DUP3 PUSH3 0x997 JUMP JUMPDEST DUP3 PUSH3 0x9E2 DUP5 PUSH3 0x9A2 JUMP JUMPDEST SWAP1 POP PUSH3 0x9EF DUP2 PUSH3 0x9B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA32 JUMPI PUSH3 0xA2D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x578 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x40C0 PUSH3 0xA94 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x19CD ADD MSTORE PUSH1 0x0 PUSH2 0x1992 ADD MSTORE PUSH1 0x0 PUSH2 0x1E3F ADD MSTORE PUSH1 0x0 PUSH2 0x1E1E ADD MSTORE PUSH1 0x0 PUSH2 0x147F ADD MSTORE PUSH1 0x0 PUSH2 0x14D5 ADD MSTORE PUSH1 0x0 PUSH2 0x14FE ADD MSTORE PUSH2 0x40C0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x68B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x605 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x56B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4CF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4BF5D7E9 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x41B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x395 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x273 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x342F JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3794 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x537 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x37E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x555 PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x603 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x3829 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x629 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x659 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x675 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x39C4 JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x3A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x72E JUMPI POP PUSH2 0x72D DUP3 PUSH2 0x1169 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x744 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x770 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x792 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D2 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7DF DUP2 DUP6 DUP6 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FF PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x80C DUP6 DUP3 DUP6 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x817 DUP6 DUP6 DUP6 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 PUSH2 0x1389 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x878 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x885 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x1532 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x953 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP3 SWAP2 SWAP1 PUSH2 0x3AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AC PUSH2 0x95F DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x167F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x9FB DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0xA05 DUP4 DUP4 PUSH2 0x1779 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA14 PUSH2 0x17FB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0xA24 PUSH2 0xD3D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1D DUP2 DUP4 PUSH2 0x180B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2C DUP3 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP3 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xBA1 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x19C4 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0x3B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC42 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xC92 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP3 SWAP2 SWAP1 PUSH2 0x3AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAE PUSH2 0xC9E DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0xA PUSH2 0x167F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD47 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD5B SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD87 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x19FF JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE5C PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE69 DUP2 DUP6 DUP6 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF1B PUSH2 0xF13 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1A67 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF27 DUP2 DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0xF31 DUP2 DUP9 PUSH2 0x180B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF7F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xFAE DUP13 PUSH2 0x1B09 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFE7 DUP3 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFF7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106B JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP3 SWAP2 SWAP1 PUSH2 0x3BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1076 DUP11 DUP11 DUP11 PUSH2 0x11DB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x10AF DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x10C2 DUP4 DUP4 PUSH2 0x1532 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1157 PUSH2 0x3181 JUMP JUMPDEST PUSH2 0x1161 DUP4 DUP4 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP5 DUP5 PUSH2 0x10C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x127B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x126B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1262 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127A DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1BC1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1365 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1370 DUP4 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1381 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x1DA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP4 DUP4 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1470 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140D PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14F7 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1524 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x152F JUMP JUMPDEST PUSH2 0x152C PUSH2 0x1DF9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP4 DUP4 PUSH2 0xCD2 JUMP JUMPDEST ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15B7 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP3 SWAP2 SWAP1 PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 PUSH2 0x16A6 DUP5 PUSH2 0x1E8F JUMP JUMPDEST DUP5 PUSH2 0x16B1 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP PUSH2 0x16C0 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x16F5 JUMPI DUP1 SWAP2 POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1718 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x176A JUMPI PUSH2 0x173B DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x176D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E2 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 NUMBER PUSH2 0x1625 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1816 DUP4 PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x191A DUP2 DUP4 PUSH2 0x1915 DUP7 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1970 PUSH2 0x196B PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x22A1 JUMP JUMPDEST PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1982 DUP3 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19BF PUSH1 0x5 PUSH32 0x0 PUSH2 0x2353 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19FA PUSH1 0x6 PUSH32 0x0 PUSH2 0x2353 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1A5C JUMPI PUSH2 0x1A2D DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7A PUSH2 0x1A74 PUSH2 0x147B JUMP JUMPDEST DUP4 PUSH2 0x2403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1A93 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2444 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1AA3 DUP3 DUP3 PUSH2 0x2538 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC DUP4 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1B04 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFB SWAP3 SWAP2 SWAP1 PUSH2 0x3D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B68 PUSH2 0x3181 JUMP JUMPDEST PUSH2 0x1BB9 DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D92 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DA3 DUP4 DUP4 DUP4 PUSH2 0x2771 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DB2 DUP3 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1DF5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP3 SWAP2 SWAP1 PUSH2 0x3D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E74 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1EA1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1EAE DUP5 PUSH2 0x2822 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EC8 JUMPI PUSH2 0x1EC7 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EE1 JUMPI PUSH2 0x1EE0 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EFA JUMPI PUSH2 0x1EF9 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F2C JUMPI PUSH2 0x1F2B PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F5E JUMPI PUSH2 0x1F5D PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1F7F DUP2 DUP3 DUP6 DUP2 PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2903 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x200B JUMPI PUSH1 0x0 PUSH2 0x1FB4 DUP5 DUP5 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1FC9 DUP8 DUP4 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1FF5 JUMPI DUP1 SWAP3 POP PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2002 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1FA0 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2064 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x229C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F3 PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2942 PUSH2 0x20EE DUP7 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2177 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 PUSH2 0x220C PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A06 PUSH2 0x2207 DUP7 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2290 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2302 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F9 SWAP3 SWAP2 SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x2370 JUMPI PUSH2 0x2369 DUP4 PUSH2 0x2A1C JUMP JUMPDEST SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x237C SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23A8 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2484 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x252E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x24A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x251F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x252E JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2698 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2579 JUMPI PUSH2 0x2578 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25D7 JUMPI PUSH2 0x25D6 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x262F JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2655 JUMPI PUSH2 0x2654 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2697 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x3181 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x26C0 JUMPI PUSH2 0x26BF PUSH2 0x3F2A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x277C DUP4 DUP4 DUP4 PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2812 JUMPI PUSH1 0x0 PUSH2 0x27BA PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C6 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x280F JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2806 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x281D DUP4 DUP4 DUP4 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2844 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x285F JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x287A JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2895 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28B0 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28CB JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28E6 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2912 JUMPI DUP2 PUSH2 0x2914 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x292D SWAP2 SWAP1 PUSH2 0x3F59 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x293A SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2950 SWAP2 SWAP1 PUSH2 0x3F8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x29BE JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B5 SWAP3 SWAP2 SWAP1 PUSH2 0x4013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29FA PUSH2 0x29D4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x29EA PUSH2 0x29E0 DUP9 PUSH2 0x19FF JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2D93 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A14 SWAP2 SWAP1 PUSH2 0x403C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A29 DUP4 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x3B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A7A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AE2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AD6 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2B6E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BFE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2C4B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D26 JUMPI PUSH2 0x2D23 PUSH1 0xA PUSH2 0x2A06 PUSH2 0x2D1E DUP5 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D73 JUMPI PUSH2 0x2D70 PUSH1 0xA PUSH2 0x2942 PUSH2 0x2D6B DUP5 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2D8E PUSH2 0x2D7F DUP5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x2D88 DUP5 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0x2028 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DA4 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3091 JUMPI PUSH1 0x0 PUSH2 0x2E2D DUP8 PUSH1 0x1 DUP5 PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2FA0 JUMPI DUP5 PUSH2 0x2F4E DUP9 PUSH1 0x1 DUP6 PUSH2 0x2F49 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3080 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x3179 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F9 DUP2 PUSH2 0x31C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3216 DUP2 PUSH2 0x31F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH2 0x3231 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3240 DUP5 DUP3 DUP6 ADD PUSH2 0x3207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x325E DUP2 PUSH2 0x3249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3279 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3255 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x329E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E1 DUP3 PUSH2 0x327F JUMP JUMPDEST PUSH2 0x32EB DUP2 DUP6 PUSH2 0x328A JUMP JUMPDEST SWAP4 POP PUSH2 0x32FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x329B JUMP JUMPDEST PUSH2 0x3304 DUP2 PUSH2 0x32C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3329 DUP2 DUP5 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x335C DUP3 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x336C DUP2 PUSH2 0x3351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3389 DUP2 PUSH2 0x3363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A2 DUP2 PUSH2 0x338F JUMP JUMPDEST DUP2 EQ PUSH2 0x33AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33BF DUP2 PUSH2 0x3399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DB PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33EA DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33FB DUP6 DUP3 DUP7 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x340E DUP2 PUSH2 0x338F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3429 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3448 JUMPI PUSH2 0x3447 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3456 DUP7 DUP3 DUP8 ADD PUSH2 0x337A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3467 DUP7 DUP3 DUP8 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3478 DUP7 DUP3 DUP8 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3495 DUP2 PUSH2 0x3482 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B2 DUP2 PUSH2 0x348C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34CE JUMPI PUSH2 0x34CD PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34DC DUP5 DUP3 DUP6 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x3482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3509 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3526 JUMPI PUSH2 0x3525 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3534 DUP6 DUP3 DUP7 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3545 DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3565 DUP2 PUSH2 0x354F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x355C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359C JUMPI PUSH2 0x359B PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35AA DUP5 DUP3 DUP6 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35BC DUP2 PUSH2 0x3351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F6 DUP2 PUSH2 0x35DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364C DUP2 PUSH2 0x3617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3687 DUP2 PUSH2 0x338F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3699 DUP4 DUP4 PUSH2 0x367E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36BD DUP3 PUSH2 0x3652 JUMP JUMPDEST PUSH2 0x36C7 DUP2 DUP6 PUSH2 0x365D JUMP JUMPDEST SWAP4 POP PUSH2 0x36D2 DUP4 PUSH2 0x366E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3703 JUMPI DUP2 MLOAD PUSH2 0x36EA DUP9 DUP3 PUSH2 0x368D JUMP JUMPDEST SWAP8 POP PUSH2 0x36F5 DUP4 PUSH2 0x36A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3725 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3737 DUP2 DUP10 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x374B DUP2 DUP9 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x375A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3767 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3774 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x34E5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3786 DUP2 DUP5 PUSH2 0x36B2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37AA JUMPI PUSH2 0x37A9 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP5 DUP3 DUP6 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37DC DUP2 PUSH2 0x37C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3806 DUP2 PUSH2 0x354F JUMP JUMPDEST DUP2 EQ PUSH2 0x3811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3823 DUP2 PUSH2 0x37FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3846 JUMPI PUSH2 0x3845 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3854 DUP10 DUP3 DUP11 ADD PUSH2 0x337A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3865 DUP10 DUP3 DUP11 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3876 DUP10 DUP3 DUP11 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3887 DUP10 DUP3 DUP11 ADD PUSH2 0x3814 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3898 DUP10 DUP3 DUP11 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x38A9 DUP10 DUP3 DUP11 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x38D5 JUMPI PUSH2 0x38D4 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E3 DUP11 DUP3 DUP12 ADD PUSH2 0x337A JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x38F4 DUP11 DUP3 DUP12 ADD PUSH2 0x337A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3905 DUP11 DUP3 DUP12 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3916 DUP11 DUP3 DUP12 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3927 DUP11 DUP3 DUP12 ADD PUSH2 0x3814 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3938 DUP11 DUP3 DUP12 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3949 DUP11 DUP3 DUP12 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x396F JUMPI PUSH2 0x396E PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397D DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x398E DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A1 DUP2 PUSH2 0x35DD JUMP JUMPDEST DUP2 EQ PUSH2 0x39AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39BE DUP2 PUSH2 0x3998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39DB JUMPI PUSH2 0x39DA PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39E9 DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39FA DUP6 DUP3 DUP7 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0D DUP2 PUSH2 0x37C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A42 DUP2 PUSH2 0x3A13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A5E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3A04 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3A71 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3A39 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3AEC JUMPI PUSH2 0x3AEB PUSH2 0x3A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3B14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B5F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3B6C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3B79 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3B86 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3BA4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3BB1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3BBE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3BCB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3BD8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3BE5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C2E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3C3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3C48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7F PUSH2 0x3C7A PUSH2 0x3C75 DUP5 PUSH2 0x3C50 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8F DUP2 PUSH2 0x3C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C86 JUMP JUMPDEST PUSH2 0x3CB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CF8 DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D03 DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D1B JUMPI PUSH2 0x3D1A PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2C DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D37 DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3D77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D93 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3DA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DBC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DC9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DD6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DE3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3DF0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3E4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E77 PUSH2 0x3E72 PUSH2 0x3E6D DUP5 PUSH2 0x3E52 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E87 DUP2 PUSH2 0x3E5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E7E JUMP JUMPDEST PUSH2 0x3EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3ECB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3ED8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355C JUMP JUMPDEST PUSH2 0x3EE5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3EF2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F64 DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6F DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F7F JUMPI PUSH2 0x3F7E PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 DUP3 PUSH2 0x3A13 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP4 PUSH2 0x3A13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FD2 JUMPI PUSH2 0x3FD1 PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD PUSH2 0x3FF8 PUSH2 0x3FF3 DUP5 PUSH2 0x3FD8 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x400D DUP2 PUSH2 0x3FE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4004 JUMP JUMPDEST PUSH2 0x4035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4047 DUP3 PUSH2 0x3A13 JUMP JUMPDEST SWAP2 POP PUSH2 0x4052 DUP4 PUSH2 0x3A13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4084 JUMPI PUSH2 0x4083 PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SIGNEXTEND DUP13 0xBC 0xE7 CALLER 0xE3 LT 0xDB 0xE6 0xB5 TLOAD PUSH10 0x5F6C2D6B6578448BF5CE PUSH30 0x5AA2C8796DD1297B64736F6C634300081800330000000000000000000000 ","sourceMap":"319:831:29:-:0;;;460:165;;;;;;;;;;1574:52:10;;;;;;;;;;;;;;;;;1613:4;3328:431:20;;;;;;;;;;;;;;;;;1896:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:20;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:10;531:42:29::2;2232:4:0;542:18:29::0;::::2;562:10;531;;;:42;;:::i;:::-;;583:35;429:24;607:10;583;;;:35;;:::i;:::-;;319:831:::0;;2914:340:16;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:16:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:17:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;7:99:31:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;319:831:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_550":{"entryPoint":2570,"id":550,"parameterSlots":0,"returnSlots":1},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":3658,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1942":{"entryPoint":2158,"id":1942,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_8282":{"entryPoint":4226,"id":8282,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3379":{"entryPoint":6537,"id":3379,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3391":{"entryPoint":6596,"id":3391,"parameterSlots":0,"returnSlots":1},"@_add_985":{"entryPoint":10758,"id":985,"parameterSlots":2,"returnSlots":1},"@_approve_1602":{"entryPoint":4571,"id":1602,"parameterSlots":3,"returnSlots":0},"@_approve_1662":{"entryPoint":7105,"id":1662,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3309":{"entryPoint":7673,"id":3309,"parameterSlots":0,"returnSlots":1},"@_checkRole_114":{"entryPoint":7592,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":4981,"id":93,"parameterSlots":1,"returnSlots":0},"@_checkpoints_936":{"entryPoint":7008,"id":936,"parameterSlots":2,"returnSlots":1},"@_delegate_766":{"entryPoint":6155,"id":766,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3288":{"entryPoint":5243,"id":3288,"parameterSlots":0,"returnSlots":1},"@_getVotingUnits_2044":{"entryPoint":8214,"id":2044,"parameterSlots":1,"returnSlots":1},"@_grantRole_256":{"entryPoint":5001,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3325":{"entryPoint":6759,"id":3325,"parameterSlots":1,"returnSlots":1},"@_insert_7347":{"entryPoint":11776,"id":7347,"parameterSlots":3,"returnSlots":2},"@_maxSupply_1976":{"entryPoint":11445,"id":1976,"parameterSlots":0,"returnSlots":1},"@_mint_1551":{"entryPoint":6009,"id":1551,"parameterSlots":2,"returnSlots":0},"@_moveDelegateVotes_899":{"entryPoint":8232,"id":899,"parameterSlots":3,"returnSlots":0},"@_msgSender_2149":{"entryPoint":4563,"id":2149,"parameterSlots":0,"returnSlots":1},"@_numCheckpoints_917":{"entryPoint":6431,"id":917,"parameterSlots":1,"returnSlots":1},"@_push_971":{"entryPoint":10694,"id":971,"parameterSlots":3,"returnSlots":2},"@_revokeRole_294":{"entryPoint":5426,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1710":{"entryPoint":4589,"id":1710,"parameterSlots":3,"returnSlots":0},"@_subtract_999":{"entryPoint":10562,"id":999,"parameterSlots":2,"returnSlots":1},"@_throwError_3164":{"entryPoint":9528,"id":3164,"parameterSlots":2,"returnSlots":0},"@_transferVotingUnits_821":{"entryPoint":11481,"id":821,"parameterSlots":3,"returnSlots":0},"@_transfer_1441":{"entryPoint":4737,"id":1441,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_7466":{"entryPoint":8072,"id":7466,"parameterSlots":2,"returnSlots":1},"@_update_1518":{"entryPoint":10896,"id":1518,"parameterSlots":3,"returnSlots":0},"@_update_2030":{"entryPoint":10097,"id":2030,"parameterSlots":3,"returnSlots":0},"@_update_8342":{"entryPoint":7576,"id":8342,"parameterSlots":3,"returnSlots":0},"@_upperBinaryLookup_7399":{"entryPoint":8093,"id":7399,"parameterSlots":4,"returnSlots":1},"@_useCheckedNonce_2234":{"entryPoint":6833,"id":2234,"parameterSlots":2,"returnSlots":0},"@_useNonce_2209":{"entryPoint":6921,"id":2209,"parameterSlots":1,"returnSlots":1},"@allowance_1338":{"entryPoint":4296,"id":1338,"parameterSlots":2,"returnSlots":1},"@approve_1362":{"entryPoint":1991,"id":1362,"parameterSlots":2,"returnSlots":1},"@at_7256":{"entryPoint":9884,"id":7256,"parameterSlots":2,"returnSlots":1},"@average_3730":{"entryPoint":10524,"id":3730,"parameterSlots":2,"returnSlots":1},"@balanceOf_1297":{"entryPoint":2867,"id":1297,"parameterSlots":1,"returnSlots":1},"@blockNumber_8023":{"entryPoint":6139,"id":8023,"parameterSlots":0,"returnSlots":1},"@byteLength_2353":{"entryPoint":11696,"id":2353,"parameterSlots":1,"returnSlots":1},"@checkpoints_2074":{"entryPoint":4431,"id":2074,"parameterSlots":2,"returnSlots":1},"@clock_530":{"entryPoint":3389,"id":530,"parameterSlots":0,"returnSlots":1},"@decimals_1275":{"entryPoint":2149,"id":1275,"parameterSlots":0,"returnSlots":1},"@delegateBySig_731":{"entryPoint":3700,"id":731,"parameterSlots":6,"returnSlots":0},"@delegate_674":{"entryPoint":2823,"id":674,"parameterSlots":1,"returnSlots":0},"@delegates_657":{"entryPoint":2718,"id":657,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3367":{"entryPoint":2957,"id":3367,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_633":{"entryPoint":3127,"id":633,"parameterSlots":1,"returnSlots":1},"@getPastVotes_601":{"entryPoint":2296,"id":601,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_128":{"entryPoint":2083,"id":128,"parameterSlots":1,"returnSlots":1},"@getVotes_565":{"entryPoint":3550,"id":565,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":2115,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":3282,"id":80,"parameterSlots":2,"returnSlots":1},"@latest_7175":{"entryPoint":6655,"id":7175,"parameterSlots":1,"returnSlots":1},"@length_7238":{"entryPoint":8865,"id":7238,"parameterSlots":1,"returnSlots":1},"@log2_4212":{"entryPoint":10274,"id":4212,"parameterSlots":1,"returnSlots":1},"@min_3707":{"entryPoint":10499,"id":3707,"parameterSlots":2,"returnSlots":1},"@mint_8321":{"entryPoint":2513,"id":8321,"parameterSlots":2,"returnSlots":0},"@name_1257":{"entryPoint":1845,"id":1257,"parameterSlots":0,"returnSlots":1},"@nonces_1932":{"entryPoint":6519,"id":1932,"parameterSlots":1,"returnSlots":1},"@nonces_2194":{"entryPoint":8970,"id":2194,"parameterSlots":1,"returnSlots":1},"@nonces_8358":{"entryPoint":2939,"id":8358,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_2057":{"entryPoint":2849,"id":2057,"parameterSlots":1,"returnSlots":1},"@permit_1915":{"entryPoint":3898,"id":1915,"parameterSlots":7,"returnSlots":0},"@push_6978":{"entryPoint":11667,"id":6978,"parameterSlots":3,"returnSlots":2},"@recover_3115":{"entryPoint":6785,"id":3115,"parameterSlots":4,"returnSlots":1},"@renounceRole_189":{"entryPoint":2173,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":4262,"id":166,"parameterSlots":2,"returnSlots":0},"@sqrt_4045":{"entryPoint":7823,"id":4045,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3489":{"entryPoint":4457,"id":3489,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1723,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_1266":{"entryPoint":3404,"id":1266,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2420":{"entryPoint":9043,"id":2420,"parameterSlots":2,"returnSlots":1},"@toString_2321":{"entryPoint":10780,"id":2321,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3465":{"entryPoint":9219,"id":3465,"parameterSlots":2,"returnSlots":1},"@toUint208_4751":{"entryPoint":10584,"id":4751,"parameterSlots":1,"returnSlots":1},"@toUint32_5367":{"entryPoint":8882,"id":5367,"parameterSlots":1,"returnSlots":1},"@toUint48_5311":{"entryPoint":5669,"id":5311,"parameterSlots":1,"returnSlots":1},"@totalSupply_1284":{"entryPoint":2026,"id":1284,"parameterSlots":0,"returnSlots":1},"@transferFrom_1394":{"entryPoint":2036,"id":1394,"parameterSlots":3,"returnSlots":1},"@transfer_1321":{"entryPoint":3665,"id":1321,"parameterSlots":2,"returnSlots":1},"@tryRecover_3079":{"entryPoint":9284,"id":3079,"parameterSlots":4,"returnSlots":3},"@upperLookupRecent_7145":{"entryPoint":5759,"id":7145,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":12807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":14767,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":14356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":14680,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":13359,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":14518,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":13253,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":14377,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":14788,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":13496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":13583,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":12828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":14228,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":14002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12885,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":13891,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13541,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack":{"entryPoint":16388,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack":{"entryPoint":15998,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack":{"entryPoint":15494,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":13014,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Checkpoint208_$6955_memory_ptr_to_t_struct$_Checkpoint208_$6955_memory_ptr_fromStack":{"entryPoint":14920,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint208_to_t_uint208":{"entryPoint":14905,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":13317,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13805,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48":{"entryPoint":14852,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint48_to_t_uint48_fromStack":{"entryPoint":14291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":13660,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15344,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":15742,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":15701,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15385,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14096,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":13556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15247,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15178,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":15783,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":16054,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":16403,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":16013,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":15509,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint208_$6955_memory_ptr__to_t_struct$_Checkpoint208_$6955_memory_ptr__fromStack_reversed":{"entryPoint":14967,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":13332,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15913,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed":{"entryPoint":15090,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":13820,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":14306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":13675,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13934,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13906,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12927,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13989,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13917,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12938,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint208":{"entryPoint":16444,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15649,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":16217,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint208":{"entryPoint":16266,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15597,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13137,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12873,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":13847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13442,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":12740,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_208_by_1":{"entryPoint":16344,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_32_by_1":{"entryPoint":15954,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_48_by_1":{"entryPoint":15440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13105,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint208":{"entryPoint":14867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13199,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13789,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint48":{"entryPoint":14273,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":13647,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_208_by_1_to_t_uint8":{"entryPoint":16354,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_32_by_1_to_t_uint8":{"entryPoint":15964,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_48_by_1_to_t_uint8":{"entryPoint":15460,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":12955,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":15041,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":15450,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":15550,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15866,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16123,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":14994,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16170,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":15131,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12735,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12997,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":13155,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13452,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":12784,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13209,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":14744,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":14333,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:26825:31","nodeType":"YulBlock","src":"0:26825:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"378:105:31","nodeType":"YulBlock","src":"378:105:31","statements":[{"nativeSrc":"388:89:31","nodeType":"YulAssignment","src":"388:89:31","value":{"arguments":[{"name":"value","nativeSrc":"403:5:31","nodeType":"YulIdentifier","src":"403:5:31"},{"kind":"number","nativeSrc":"410:66:31","nodeType":"YulLiteral","src":"410:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:31","nodeType":"YulIdentifier","src":"399:3:31"},"nativeSrc":"399:78:31","nodeType":"YulFunctionCall","src":"399:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:31","nodeType":"YulIdentifier","src":"388:7:31"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:31","nodeType":"YulTypedName","src":"360:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:31","nodeType":"YulTypedName","src":"370:7:31","type":""}],"src":"334:149:31"},{"body":{"nativeSrc":"531:78:31","nodeType":"YulBlock","src":"531:78:31","statements":[{"body":{"nativeSrc":"587:16:31","nodeType":"YulBlock","src":"587:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:31","nodeType":"YulLiteral","src":"596:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:31","nodeType":"YulLiteral","src":"599:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:31","nodeType":"YulIdentifier","src":"589:6:31"},"nativeSrc":"589:12:31","nodeType":"YulFunctionCall","src":"589:12:31"},"nativeSrc":"589:12:31","nodeType":"YulExpressionStatement","src":"589:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:31","nodeType":"YulIdentifier","src":"554:5:31"},{"arguments":[{"name":"value","nativeSrc":"578:5:31","nodeType":"YulIdentifier","src":"578:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:31","nodeType":"YulIdentifier","src":"561:16:31"},"nativeSrc":"561:23:31","nodeType":"YulFunctionCall","src":"561:23:31"}],"functionName":{"name":"eq","nativeSrc":"551:2:31","nodeType":"YulIdentifier","src":"551:2:31"},"nativeSrc":"551:34:31","nodeType":"YulFunctionCall","src":"551:34:31"}],"functionName":{"name":"iszero","nativeSrc":"544:6:31","nodeType":"YulIdentifier","src":"544:6:31"},"nativeSrc":"544:42:31","nodeType":"YulFunctionCall","src":"544:42:31"},"nativeSrc":"541:62:31","nodeType":"YulIf","src":"541:62:31"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:31","nodeType":"YulTypedName","src":"524:5:31","type":""}],"src":"489:120:31"},{"body":{"nativeSrc":"666:86:31","nodeType":"YulBlock","src":"666:86:31","statements":[{"nativeSrc":"676:29:31","nodeType":"YulAssignment","src":"676:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:31","nodeType":"YulIdentifier","src":"698:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:31","nodeType":"YulIdentifier","src":"685:12:31"},"nativeSrc":"685:20:31","nodeType":"YulFunctionCall","src":"685:20:31"},"variableNames":[{"name":"value","nativeSrc":"676:5:31","nodeType":"YulIdentifier","src":"676:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:31","nodeType":"YulIdentifier","src":"740:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:31","nodeType":"YulIdentifier","src":"714:25:31"},"nativeSrc":"714:32:31","nodeType":"YulFunctionCall","src":"714:32:31"},"nativeSrc":"714:32:31","nodeType":"YulExpressionStatement","src":"714:32:31"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:31","nodeType":"YulTypedName","src":"644:6:31","type":""},{"name":"end","nativeSrc":"652:3:31","nodeType":"YulTypedName","src":"652:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:31","nodeType":"YulTypedName","src":"660:5:31","type":""}],"src":"615:137:31"},{"body":{"nativeSrc":"823:262:31","nodeType":"YulBlock","src":"823:262:31","statements":[{"body":{"nativeSrc":"869:83:31","nodeType":"YulBlock","src":"869:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:31","nodeType":"YulIdentifier","src":"871:77:31"},"nativeSrc":"871:79:31","nodeType":"YulFunctionCall","src":"871:79:31"},"nativeSrc":"871:79:31","nodeType":"YulExpressionStatement","src":"871:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:31","nodeType":"YulIdentifier","src":"844:7:31"},{"name":"headStart","nativeSrc":"853:9:31","nodeType":"YulIdentifier","src":"853:9:31"}],"functionName":{"name":"sub","nativeSrc":"840:3:31","nodeType":"YulIdentifier","src":"840:3:31"},"nativeSrc":"840:23:31","nodeType":"YulFunctionCall","src":"840:23:31"},{"kind":"number","nativeSrc":"865:2:31","nodeType":"YulLiteral","src":"865:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:31","nodeType":"YulIdentifier","src":"836:3:31"},"nativeSrc":"836:32:31","nodeType":"YulFunctionCall","src":"836:32:31"},"nativeSrc":"833:119:31","nodeType":"YulIf","src":"833:119:31"},{"nativeSrc":"962:116:31","nodeType":"YulBlock","src":"962:116:31","statements":[{"nativeSrc":"977:15:31","nodeType":"YulVariableDeclaration","src":"977:15:31","value":{"kind":"number","nativeSrc":"991:1:31","nodeType":"YulLiteral","src":"991:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:31","nodeType":"YulTypedName","src":"981:6:31","type":""}]},{"nativeSrc":"1006:62:31","nodeType":"YulAssignment","src":"1006:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:31","nodeType":"YulIdentifier","src":"1040:9:31"},{"name":"offset","nativeSrc":"1051:6:31","nodeType":"YulIdentifier","src":"1051:6:31"}],"functionName":{"name":"add","nativeSrc":"1036:3:31","nodeType":"YulIdentifier","src":"1036:3:31"},"nativeSrc":"1036:22:31","nodeType":"YulFunctionCall","src":"1036:22:31"},{"name":"dataEnd","nativeSrc":"1060:7:31","nodeType":"YulIdentifier","src":"1060:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:31","nodeType":"YulIdentifier","src":"1016:19:31"},"nativeSrc":"1016:52:31","nodeType":"YulFunctionCall","src":"1016:52:31"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:31","nodeType":"YulIdentifier","src":"1006:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:31","nodeType":"YulTypedName","src":"793:9:31","type":""},{"name":"dataEnd","nativeSrc":"804:7:31","nodeType":"YulTypedName","src":"804:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:31","nodeType":"YulTypedName","src":"816:6:31","type":""}],"src":"758:327:31"},{"body":{"nativeSrc":"1133:48:31","nodeType":"YulBlock","src":"1133:48:31","statements":[{"nativeSrc":"1143:32:31","nodeType":"YulAssignment","src":"1143:32:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:31","nodeType":"YulIdentifier","src":"1168:5:31"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:31","nodeType":"YulIdentifier","src":"1161:6:31"},"nativeSrc":"1161:13:31","nodeType":"YulFunctionCall","src":"1161:13:31"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:31","nodeType":"YulIdentifier","src":"1154:6:31"},"nativeSrc":"1154:21:31","nodeType":"YulFunctionCall","src":"1154:21:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:31","nodeType":"YulIdentifier","src":"1143:7:31"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:31","nodeType":"YulTypedName","src":"1115:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:31","nodeType":"YulTypedName","src":"1125:7:31","type":""}],"src":"1091:90:31"},{"body":{"nativeSrc":"1246:50:31","nodeType":"YulBlock","src":"1246:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:31","nodeType":"YulIdentifier","src":"1263:3:31"},{"arguments":[{"name":"value","nativeSrc":"1283:5:31","nodeType":"YulIdentifier","src":"1283:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:31","nodeType":"YulIdentifier","src":"1268:14:31"},"nativeSrc":"1268:21:31","nodeType":"YulFunctionCall","src":"1268:21:31"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:31","nodeType":"YulIdentifier","src":"1256:6:31"},"nativeSrc":"1256:34:31","nodeType":"YulFunctionCall","src":"1256:34:31"},"nativeSrc":"1256:34:31","nodeType":"YulExpressionStatement","src":"1256:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:31","nodeType":"YulTypedName","src":"1234:5:31","type":""},{"name":"pos","nativeSrc":"1241:3:31","nodeType":"YulTypedName","src":"1241:3:31","type":""}],"src":"1187:109:31"},{"body":{"nativeSrc":"1394:118:31","nodeType":"YulBlock","src":"1394:118:31","statements":[{"nativeSrc":"1404:26:31","nodeType":"YulAssignment","src":"1404:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:31","nodeType":"YulIdentifier","src":"1416:9:31"},{"kind":"number","nativeSrc":"1427:2:31","nodeType":"YulLiteral","src":"1427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:31","nodeType":"YulIdentifier","src":"1412:3:31"},"nativeSrc":"1412:18:31","nodeType":"YulFunctionCall","src":"1412:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:31","nodeType":"YulIdentifier","src":"1404:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:31","nodeType":"YulIdentifier","src":"1478:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:31","nodeType":"YulIdentifier","src":"1491:9:31"},{"kind":"number","nativeSrc":"1502:1:31","nodeType":"YulLiteral","src":"1502:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:31","nodeType":"YulIdentifier","src":"1487:3:31"},"nativeSrc":"1487:17:31","nodeType":"YulFunctionCall","src":"1487:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:31","nodeType":"YulIdentifier","src":"1440:37:31"},"nativeSrc":"1440:65:31","nodeType":"YulFunctionCall","src":"1440:65:31"},"nativeSrc":"1440:65:31","nodeType":"YulExpressionStatement","src":"1440:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:31","nodeType":"YulTypedName","src":"1366:9:31","type":""},{"name":"value0","nativeSrc":"1378:6:31","nodeType":"YulTypedName","src":"1378:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:31","nodeType":"YulTypedName","src":"1389:4:31","type":""}],"src":"1302:210:31"},{"body":{"nativeSrc":"1577:40:31","nodeType":"YulBlock","src":"1577:40:31","statements":[{"nativeSrc":"1588:22:31","nodeType":"YulAssignment","src":"1588:22:31","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:31","nodeType":"YulIdentifier","src":"1604:5:31"}],"functionName":{"name":"mload","nativeSrc":"1598:5:31","nodeType":"YulIdentifier","src":"1598:5:31"},"nativeSrc":"1598:12:31","nodeType":"YulFunctionCall","src":"1598:12:31"},"variableNames":[{"name":"length","nativeSrc":"1588:6:31","nodeType":"YulIdentifier","src":"1588:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:31","nodeType":"YulTypedName","src":"1560:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:31","nodeType":"YulTypedName","src":"1570:6:31","type":""}],"src":"1518:99:31"},{"body":{"nativeSrc":"1719:73:31","nodeType":"YulBlock","src":"1719:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:31","nodeType":"YulIdentifier","src":"1736:3:31"},{"name":"length","nativeSrc":"1741:6:31","nodeType":"YulIdentifier","src":"1741:6:31"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:31","nodeType":"YulIdentifier","src":"1729:6:31"},"nativeSrc":"1729:19:31","nodeType":"YulFunctionCall","src":"1729:19:31"},"nativeSrc":"1729:19:31","nodeType":"YulExpressionStatement","src":"1729:19:31"},{"nativeSrc":"1757:29:31","nodeType":"YulAssignment","src":"1757:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:31","nodeType":"YulIdentifier","src":"1776:3:31"},{"kind":"number","nativeSrc":"1781:4:31","nodeType":"YulLiteral","src":"1781:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:31","nodeType":"YulIdentifier","src":"1772:3:31"},"nativeSrc":"1772:14:31","nodeType":"YulFunctionCall","src":"1772:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:31","nodeType":"YulIdentifier","src":"1757:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:31","nodeType":"YulTypedName","src":"1691:3:31","type":""},{"name":"length","nativeSrc":"1696:6:31","nodeType":"YulTypedName","src":"1696:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:31","nodeType":"YulTypedName","src":"1707:11:31","type":""}],"src":"1623:169:31"},{"body":{"nativeSrc":"1860:184:31","nodeType":"YulBlock","src":"1860:184:31","statements":[{"nativeSrc":"1870:10:31","nodeType":"YulVariableDeclaration","src":"1870:10:31","value":{"kind":"number","nativeSrc":"1879:1:31","nodeType":"YulLiteral","src":"1879:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:31","nodeType":"YulTypedName","src":"1874:1:31","type":""}]},{"body":{"nativeSrc":"1939:63:31","nodeType":"YulBlock","src":"1939:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:31","nodeType":"YulIdentifier","src":"1964:3:31"},{"name":"i","nativeSrc":"1969:1:31","nodeType":"YulIdentifier","src":"1969:1:31"}],"functionName":{"name":"add","nativeSrc":"1960:3:31","nodeType":"YulIdentifier","src":"1960:3:31"},"nativeSrc":"1960:11:31","nodeType":"YulFunctionCall","src":"1960:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:31","nodeType":"YulIdentifier","src":"1983:3:31"},{"name":"i","nativeSrc":"1988:1:31","nodeType":"YulIdentifier","src":"1988:1:31"}],"functionName":{"name":"add","nativeSrc":"1979:3:31","nodeType":"YulIdentifier","src":"1979:3:31"},"nativeSrc":"1979:11:31","nodeType":"YulFunctionCall","src":"1979:11:31"}],"functionName":{"name":"mload","nativeSrc":"1973:5:31","nodeType":"YulIdentifier","src":"1973:5:31"},"nativeSrc":"1973:18:31","nodeType":"YulFunctionCall","src":"1973:18:31"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:31","nodeType":"YulIdentifier","src":"1953:6:31"},"nativeSrc":"1953:39:31","nodeType":"YulFunctionCall","src":"1953:39:31"},"nativeSrc":"1953:39:31","nodeType":"YulExpressionStatement","src":"1953:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:31","nodeType":"YulIdentifier","src":"1900:1:31"},{"name":"length","nativeSrc":"1903:6:31","nodeType":"YulIdentifier","src":"1903:6:31"}],"functionName":{"name":"lt","nativeSrc":"1897:2:31","nodeType":"YulIdentifier","src":"1897:2:31"},"nativeSrc":"1897:13:31","nodeType":"YulFunctionCall","src":"1897:13:31"},"nativeSrc":"1889:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:31","nodeType":"YulBlock","src":"1911:19:31","statements":[{"nativeSrc":"1913:15:31","nodeType":"YulAssignment","src":"1913:15:31","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:31","nodeType":"YulIdentifier","src":"1922:1:31"},{"kind":"number","nativeSrc":"1925:2:31","nodeType":"YulLiteral","src":"1925:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:31","nodeType":"YulIdentifier","src":"1918:3:31"},"nativeSrc":"1918:10:31","nodeType":"YulFunctionCall","src":"1918:10:31"},"variableNames":[{"name":"i","nativeSrc":"1913:1:31","nodeType":"YulIdentifier","src":"1913:1:31"}]}]},"pre":{"nativeSrc":"1893:3:31","nodeType":"YulBlock","src":"1893:3:31","statements":[]},"src":"1889:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:31","nodeType":"YulIdentifier","src":"2022:3:31"},{"name":"length","nativeSrc":"2027:6:31","nodeType":"YulIdentifier","src":"2027:6:31"}],"functionName":{"name":"add","nativeSrc":"2018:3:31","nodeType":"YulIdentifier","src":"2018:3:31"},"nativeSrc":"2018:16:31","nodeType":"YulFunctionCall","src":"2018:16:31"},{"kind":"number","nativeSrc":"2036:1:31","nodeType":"YulLiteral","src":"2036:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:31","nodeType":"YulIdentifier","src":"2011:6:31"},"nativeSrc":"2011:27:31","nodeType":"YulFunctionCall","src":"2011:27:31"},"nativeSrc":"2011:27:31","nodeType":"YulExpressionStatement","src":"2011:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:31","nodeType":"YulTypedName","src":"1842:3:31","type":""},{"name":"dst","nativeSrc":"1847:3:31","nodeType":"YulTypedName","src":"1847:3:31","type":""},{"name":"length","nativeSrc":"1852:6:31","nodeType":"YulTypedName","src":"1852:6:31","type":""}],"src":"1798:246:31"},{"body":{"nativeSrc":"2098:54:31","nodeType":"YulBlock","src":"2098:54:31","statements":[{"nativeSrc":"2108:38:31","nodeType":"YulAssignment","src":"2108:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:31","nodeType":"YulIdentifier","src":"2126:5:31"},{"kind":"number","nativeSrc":"2133:2:31","nodeType":"YulLiteral","src":"2133:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:31","nodeType":"YulIdentifier","src":"2122:3:31"},"nativeSrc":"2122:14:31","nodeType":"YulFunctionCall","src":"2122:14:31"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:31","nodeType":"YulLiteral","src":"2142:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:31","nodeType":"YulIdentifier","src":"2138:3:31"},"nativeSrc":"2138:7:31","nodeType":"YulFunctionCall","src":"2138:7:31"}],"functionName":{"name":"and","nativeSrc":"2118:3:31","nodeType":"YulIdentifier","src":"2118:3:31"},"nativeSrc":"2118:28:31","nodeType":"YulFunctionCall","src":"2118:28:31"},"variableNames":[{"name":"result","nativeSrc":"2108:6:31","nodeType":"YulIdentifier","src":"2108:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:31","nodeType":"YulTypedName","src":"2081:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:31","nodeType":"YulTypedName","src":"2091:6:31","type":""}],"src":"2050:102:31"},{"body":{"nativeSrc":"2250:285:31","nodeType":"YulBlock","src":"2250:285:31","statements":[{"nativeSrc":"2260:53:31","nodeType":"YulVariableDeclaration","src":"2260:53:31","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:31","nodeType":"YulIdentifier","src":"2307:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:31","nodeType":"YulIdentifier","src":"2274:32:31"},"nativeSrc":"2274:39:31","nodeType":"YulFunctionCall","src":"2274:39:31"},"variables":[{"name":"length","nativeSrc":"2264:6:31","nodeType":"YulTypedName","src":"2264:6:31","type":""}]},{"nativeSrc":"2322:78:31","nodeType":"YulAssignment","src":"2322:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:31","nodeType":"YulIdentifier","src":"2388:3:31"},{"name":"length","nativeSrc":"2393:6:31","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:31","nodeType":"YulIdentifier","src":"2329:58:31"},"nativeSrc":"2329:71:31","nodeType":"YulFunctionCall","src":"2329:71:31"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:31","nodeType":"YulIdentifier","src":"2322:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:31","nodeType":"YulIdentifier","src":"2448:5:31"},{"kind":"number","nativeSrc":"2455:4:31","nodeType":"YulLiteral","src":"2455:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:31","nodeType":"YulIdentifier","src":"2444:3:31"},"nativeSrc":"2444:16:31","nodeType":"YulFunctionCall","src":"2444:16:31"},{"name":"pos","nativeSrc":"2462:3:31","nodeType":"YulIdentifier","src":"2462:3:31"},{"name":"length","nativeSrc":"2467:6:31","nodeType":"YulIdentifier","src":"2467:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:31","nodeType":"YulIdentifier","src":"2409:34:31"},"nativeSrc":"2409:65:31","nodeType":"YulFunctionCall","src":"2409:65:31"},"nativeSrc":"2409:65:31","nodeType":"YulExpressionStatement","src":"2409:65:31"},{"nativeSrc":"2483:46:31","nodeType":"YulAssignment","src":"2483:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:31","nodeType":"YulIdentifier","src":"2494:3:31"},{"arguments":[{"name":"length","nativeSrc":"2521:6:31","nodeType":"YulIdentifier","src":"2521:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:31","nodeType":"YulIdentifier","src":"2499:21:31"},"nativeSrc":"2499:29:31","nodeType":"YulFunctionCall","src":"2499:29:31"}],"functionName":{"name":"add","nativeSrc":"2490:3:31","nodeType":"YulIdentifier","src":"2490:3:31"},"nativeSrc":"2490:39:31","nodeType":"YulFunctionCall","src":"2490:39:31"},"variableNames":[{"name":"end","nativeSrc":"2483:3:31","nodeType":"YulIdentifier","src":"2483:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:31","nodeType":"YulTypedName","src":"2231:5:31","type":""},{"name":"pos","nativeSrc":"2238:3:31","nodeType":"YulTypedName","src":"2238:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:31","nodeType":"YulTypedName","src":"2246:3:31","type":""}],"src":"2158:377:31"},{"body":{"nativeSrc":"2659:195:31","nodeType":"YulBlock","src":"2659:195:31","statements":[{"nativeSrc":"2669:26:31","nodeType":"YulAssignment","src":"2669:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:31","nodeType":"YulIdentifier","src":"2681:9:31"},{"kind":"number","nativeSrc":"2692:2:31","nodeType":"YulLiteral","src":"2692:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:31","nodeType":"YulIdentifier","src":"2677:3:31"},"nativeSrc":"2677:18:31","nodeType":"YulFunctionCall","src":"2677:18:31"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:31","nodeType":"YulIdentifier","src":"2669:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:31","nodeType":"YulIdentifier","src":"2716:9:31"},{"kind":"number","nativeSrc":"2727:1:31","nodeType":"YulLiteral","src":"2727:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:31","nodeType":"YulIdentifier","src":"2712:3:31"},"nativeSrc":"2712:17:31","nodeType":"YulFunctionCall","src":"2712:17:31"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:31","nodeType":"YulIdentifier","src":"2735:4:31"},{"name":"headStart","nativeSrc":"2741:9:31","nodeType":"YulIdentifier","src":"2741:9:31"}],"functionName":{"name":"sub","nativeSrc":"2731:3:31","nodeType":"YulIdentifier","src":"2731:3:31"},"nativeSrc":"2731:20:31","nodeType":"YulFunctionCall","src":"2731:20:31"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:31","nodeType":"YulIdentifier","src":"2705:6:31"},"nativeSrc":"2705:47:31","nodeType":"YulFunctionCall","src":"2705:47:31"},"nativeSrc":"2705:47:31","nodeType":"YulExpressionStatement","src":"2705:47:31"},{"nativeSrc":"2761:86:31","nodeType":"YulAssignment","src":"2761:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:31","nodeType":"YulIdentifier","src":"2833:6:31"},{"name":"tail","nativeSrc":"2842:4:31","nodeType":"YulIdentifier","src":"2842:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:31","nodeType":"YulIdentifier","src":"2769:63:31"},"nativeSrc":"2769:78:31","nodeType":"YulFunctionCall","src":"2769:78:31"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:31","nodeType":"YulIdentifier","src":"2761:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:31","nodeType":"YulTypedName","src":"2631:9:31","type":""},{"name":"value0","nativeSrc":"2643:6:31","nodeType":"YulTypedName","src":"2643:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:31","nodeType":"YulTypedName","src":"2654:4:31","type":""}],"src":"2541:313:31"},{"body":{"nativeSrc":"2905:81:31","nodeType":"YulBlock","src":"2905:81:31","statements":[{"nativeSrc":"2915:65:31","nodeType":"YulAssignment","src":"2915:65:31","value":{"arguments":[{"name":"value","nativeSrc":"2930:5:31","nodeType":"YulIdentifier","src":"2930:5:31"},{"kind":"number","nativeSrc":"2937:42:31","nodeType":"YulLiteral","src":"2937:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2926:3:31","nodeType":"YulIdentifier","src":"2926:3:31"},"nativeSrc":"2926:54:31","nodeType":"YulFunctionCall","src":"2926:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2915:7:31","nodeType":"YulIdentifier","src":"2915:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2860:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2887:5:31","nodeType":"YulTypedName","src":"2887:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2897:7:31","nodeType":"YulTypedName","src":"2897:7:31","type":""}],"src":"2860:126:31"},{"body":{"nativeSrc":"3037:51:31","nodeType":"YulBlock","src":"3037:51:31","statements":[{"nativeSrc":"3047:35:31","nodeType":"YulAssignment","src":"3047:35:31","value":{"arguments":[{"name":"value","nativeSrc":"3076:5:31","nodeType":"YulIdentifier","src":"3076:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3058:17:31","nodeType":"YulIdentifier","src":"3058:17:31"},"nativeSrc":"3058:24:31","nodeType":"YulFunctionCall","src":"3058:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3047:7:31","nodeType":"YulIdentifier","src":"3047:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"2992:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3019:5:31","nodeType":"YulTypedName","src":"3019:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3029:7:31","nodeType":"YulTypedName","src":"3029:7:31","type":""}],"src":"2992:96:31"},{"body":{"nativeSrc":"3137:79:31","nodeType":"YulBlock","src":"3137:79:31","statements":[{"body":{"nativeSrc":"3194:16:31","nodeType":"YulBlock","src":"3194:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3203:1:31","nodeType":"YulLiteral","src":"3203:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3206:1:31","nodeType":"YulLiteral","src":"3206:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3196:6:31","nodeType":"YulIdentifier","src":"3196:6:31"},"nativeSrc":"3196:12:31","nodeType":"YulFunctionCall","src":"3196:12:31"},"nativeSrc":"3196:12:31","nodeType":"YulExpressionStatement","src":"3196:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3160:5:31","nodeType":"YulIdentifier","src":"3160:5:31"},{"arguments":[{"name":"value","nativeSrc":"3185:5:31","nodeType":"YulIdentifier","src":"3185:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3167:17:31","nodeType":"YulIdentifier","src":"3167:17:31"},"nativeSrc":"3167:24:31","nodeType":"YulFunctionCall","src":"3167:24:31"}],"functionName":{"name":"eq","nativeSrc":"3157:2:31","nodeType":"YulIdentifier","src":"3157:2:31"},"nativeSrc":"3157:35:31","nodeType":"YulFunctionCall","src":"3157:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3150:6:31","nodeType":"YulIdentifier","src":"3150:6:31"},"nativeSrc":"3150:43:31","nodeType":"YulFunctionCall","src":"3150:43:31"},"nativeSrc":"3147:63:31","nodeType":"YulIf","src":"3147:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"3094:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3130:5:31","nodeType":"YulTypedName","src":"3130:5:31","type":""}],"src":"3094:122:31"},{"body":{"nativeSrc":"3274:87:31","nodeType":"YulBlock","src":"3274:87:31","statements":[{"nativeSrc":"3284:29:31","nodeType":"YulAssignment","src":"3284:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"3306:6:31","nodeType":"YulIdentifier","src":"3306:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3293:12:31","nodeType":"YulIdentifier","src":"3293:12:31"},"nativeSrc":"3293:20:31","nodeType":"YulFunctionCall","src":"3293:20:31"},"variableNames":[{"name":"value","nativeSrc":"3284:5:31","nodeType":"YulIdentifier","src":"3284:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3349:5:31","nodeType":"YulIdentifier","src":"3349:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3322:26:31","nodeType":"YulIdentifier","src":"3322:26:31"},"nativeSrc":"3322:33:31","nodeType":"YulFunctionCall","src":"3322:33:31"},"nativeSrc":"3322:33:31","nodeType":"YulExpressionStatement","src":"3322:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"3222:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3252:6:31","nodeType":"YulTypedName","src":"3252:6:31","type":""},{"name":"end","nativeSrc":"3260:3:31","nodeType":"YulTypedName","src":"3260:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3268:5:31","nodeType":"YulTypedName","src":"3268:5:31","type":""}],"src":"3222:139:31"},{"body":{"nativeSrc":"3412:32:31","nodeType":"YulBlock","src":"3412:32:31","statements":[{"nativeSrc":"3422:16:31","nodeType":"YulAssignment","src":"3422:16:31","value":{"name":"value","nativeSrc":"3433:5:31","nodeType":"YulIdentifier","src":"3433:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3422:7:31","nodeType":"YulIdentifier","src":"3422:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3367:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3394:5:31","nodeType":"YulTypedName","src":"3394:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3404:7:31","nodeType":"YulTypedName","src":"3404:7:31","type":""}],"src":"3367:77:31"},{"body":{"nativeSrc":"3493:79:31","nodeType":"YulBlock","src":"3493:79:31","statements":[{"body":{"nativeSrc":"3550:16:31","nodeType":"YulBlock","src":"3550:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3559:1:31","nodeType":"YulLiteral","src":"3559:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3562:1:31","nodeType":"YulLiteral","src":"3562:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3552:6:31","nodeType":"YulIdentifier","src":"3552:6:31"},"nativeSrc":"3552:12:31","nodeType":"YulFunctionCall","src":"3552:12:31"},"nativeSrc":"3552:12:31","nodeType":"YulExpressionStatement","src":"3552:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3516:5:31","nodeType":"YulIdentifier","src":"3516:5:31"},{"arguments":[{"name":"value","nativeSrc":"3541:5:31","nodeType":"YulIdentifier","src":"3541:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3523:17:31","nodeType":"YulIdentifier","src":"3523:17:31"},"nativeSrc":"3523:24:31","nodeType":"YulFunctionCall","src":"3523:24:31"}],"functionName":{"name":"eq","nativeSrc":"3513:2:31","nodeType":"YulIdentifier","src":"3513:2:31"},"nativeSrc":"3513:35:31","nodeType":"YulFunctionCall","src":"3513:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3506:6:31","nodeType":"YulIdentifier","src":"3506:6:31"},"nativeSrc":"3506:43:31","nodeType":"YulFunctionCall","src":"3506:43:31"},"nativeSrc":"3503:63:31","nodeType":"YulIf","src":"3503:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"3450:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3486:5:31","nodeType":"YulTypedName","src":"3486:5:31","type":""}],"src":"3450:122:31"},{"body":{"nativeSrc":"3630:87:31","nodeType":"YulBlock","src":"3630:87:31","statements":[{"nativeSrc":"3640:29:31","nodeType":"YulAssignment","src":"3640:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"3662:6:31","nodeType":"YulIdentifier","src":"3662:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3649:12:31","nodeType":"YulIdentifier","src":"3649:12:31"},"nativeSrc":"3649:20:31","nodeType":"YulFunctionCall","src":"3649:20:31"},"variableNames":[{"name":"value","nativeSrc":"3640:5:31","nodeType":"YulIdentifier","src":"3640:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3705:5:31","nodeType":"YulIdentifier","src":"3705:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3678:26:31","nodeType":"YulIdentifier","src":"3678:26:31"},"nativeSrc":"3678:33:31","nodeType":"YulFunctionCall","src":"3678:33:31"},"nativeSrc":"3678:33:31","nodeType":"YulExpressionStatement","src":"3678:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"3578:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3608:6:31","nodeType":"YulTypedName","src":"3608:6:31","type":""},{"name":"end","nativeSrc":"3616:3:31","nodeType":"YulTypedName","src":"3616:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3624:5:31","nodeType":"YulTypedName","src":"3624:5:31","type":""}],"src":"3578:139:31"},{"body":{"nativeSrc":"3806:391:31","nodeType":"YulBlock","src":"3806:391:31","statements":[{"body":{"nativeSrc":"3852:83:31","nodeType":"YulBlock","src":"3852:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3854:77:31","nodeType":"YulIdentifier","src":"3854:77:31"},"nativeSrc":"3854:79:31","nodeType":"YulFunctionCall","src":"3854:79:31"},"nativeSrc":"3854:79:31","nodeType":"YulExpressionStatement","src":"3854:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3827:7:31","nodeType":"YulIdentifier","src":"3827:7:31"},{"name":"headStart","nativeSrc":"3836:9:31","nodeType":"YulIdentifier","src":"3836:9:31"}],"functionName":{"name":"sub","nativeSrc":"3823:3:31","nodeType":"YulIdentifier","src":"3823:3:31"},"nativeSrc":"3823:23:31","nodeType":"YulFunctionCall","src":"3823:23:31"},{"kind":"number","nativeSrc":"3848:2:31","nodeType":"YulLiteral","src":"3848:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3819:3:31","nodeType":"YulIdentifier","src":"3819:3:31"},"nativeSrc":"3819:32:31","nodeType":"YulFunctionCall","src":"3819:32:31"},"nativeSrc":"3816:119:31","nodeType":"YulIf","src":"3816:119:31"},{"nativeSrc":"3945:117:31","nodeType":"YulBlock","src":"3945:117:31","statements":[{"nativeSrc":"3960:15:31","nodeType":"YulVariableDeclaration","src":"3960:15:31","value":{"kind":"number","nativeSrc":"3974:1:31","nodeType":"YulLiteral","src":"3974:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3964:6:31","nodeType":"YulTypedName","src":"3964:6:31","type":""}]},{"nativeSrc":"3989:63:31","nodeType":"YulAssignment","src":"3989:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4024:9:31","nodeType":"YulIdentifier","src":"4024:9:31"},{"name":"offset","nativeSrc":"4035:6:31","nodeType":"YulIdentifier","src":"4035:6:31"}],"functionName":{"name":"add","nativeSrc":"4020:3:31","nodeType":"YulIdentifier","src":"4020:3:31"},"nativeSrc":"4020:22:31","nodeType":"YulFunctionCall","src":"4020:22:31"},{"name":"dataEnd","nativeSrc":"4044:7:31","nodeType":"YulIdentifier","src":"4044:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3999:20:31","nodeType":"YulIdentifier","src":"3999:20:31"},"nativeSrc":"3999:53:31","nodeType":"YulFunctionCall","src":"3999:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3989:6:31","nodeType":"YulIdentifier","src":"3989:6:31"}]}]},{"nativeSrc":"4072:118:31","nodeType":"YulBlock","src":"4072:118:31","statements":[{"nativeSrc":"4087:16:31","nodeType":"YulVariableDeclaration","src":"4087:16:31","value":{"kind":"number","nativeSrc":"4101:2:31","nodeType":"YulLiteral","src":"4101:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4091:6:31","nodeType":"YulTypedName","src":"4091:6:31","type":""}]},{"nativeSrc":"4117:63:31","nodeType":"YulAssignment","src":"4117:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4152:9:31","nodeType":"YulIdentifier","src":"4152:9:31"},{"name":"offset","nativeSrc":"4163:6:31","nodeType":"YulIdentifier","src":"4163:6:31"}],"functionName":{"name":"add","nativeSrc":"4148:3:31","nodeType":"YulIdentifier","src":"4148:3:31"},"nativeSrc":"4148:22:31","nodeType":"YulFunctionCall","src":"4148:22:31"},{"name":"dataEnd","nativeSrc":"4172:7:31","nodeType":"YulIdentifier","src":"4172:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4127:20:31","nodeType":"YulIdentifier","src":"4127:20:31"},"nativeSrc":"4127:53:31","nodeType":"YulFunctionCall","src":"4127:53:31"},"variableNames":[{"name":"value1","nativeSrc":"4117:6:31","nodeType":"YulIdentifier","src":"4117:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3723:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3768:9:31","nodeType":"YulTypedName","src":"3768:9:31","type":""},{"name":"dataEnd","nativeSrc":"3779:7:31","nodeType":"YulTypedName","src":"3779:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3791:6:31","nodeType":"YulTypedName","src":"3791:6:31","type":""},{"name":"value1","nativeSrc":"3799:6:31","nodeType":"YulTypedName","src":"3799:6:31","type":""}],"src":"3723:474:31"},{"body":{"nativeSrc":"4268:53:31","nodeType":"YulBlock","src":"4268:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4285:3:31","nodeType":"YulIdentifier","src":"4285:3:31"},{"arguments":[{"name":"value","nativeSrc":"4308:5:31","nodeType":"YulIdentifier","src":"4308:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4290:17:31","nodeType":"YulIdentifier","src":"4290:17:31"},"nativeSrc":"4290:24:31","nodeType":"YulFunctionCall","src":"4290:24:31"}],"functionName":{"name":"mstore","nativeSrc":"4278:6:31","nodeType":"YulIdentifier","src":"4278:6:31"},"nativeSrc":"4278:37:31","nodeType":"YulFunctionCall","src":"4278:37:31"},"nativeSrc":"4278:37:31","nodeType":"YulExpressionStatement","src":"4278:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4203:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4256:5:31","nodeType":"YulTypedName","src":"4256:5:31","type":""},{"name":"pos","nativeSrc":"4263:3:31","nodeType":"YulTypedName","src":"4263:3:31","type":""}],"src":"4203:118:31"},{"body":{"nativeSrc":"4425:124:31","nodeType":"YulBlock","src":"4425:124:31","statements":[{"nativeSrc":"4435:26:31","nodeType":"YulAssignment","src":"4435:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4447:9:31","nodeType":"YulIdentifier","src":"4447:9:31"},{"kind":"number","nativeSrc":"4458:2:31","nodeType":"YulLiteral","src":"4458:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4443:3:31","nodeType":"YulIdentifier","src":"4443:3:31"},"nativeSrc":"4443:18:31","nodeType":"YulFunctionCall","src":"4443:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4435:4:31","nodeType":"YulIdentifier","src":"4435:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4515:6:31","nodeType":"YulIdentifier","src":"4515:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4528:9:31","nodeType":"YulIdentifier","src":"4528:9:31"},{"kind":"number","nativeSrc":"4539:1:31","nodeType":"YulLiteral","src":"4539:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4524:3:31","nodeType":"YulIdentifier","src":"4524:3:31"},"nativeSrc":"4524:17:31","nodeType":"YulFunctionCall","src":"4524:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4471:43:31","nodeType":"YulIdentifier","src":"4471:43:31"},"nativeSrc":"4471:71:31","nodeType":"YulFunctionCall","src":"4471:71:31"},"nativeSrc":"4471:71:31","nodeType":"YulExpressionStatement","src":"4471:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4327:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4397:9:31","nodeType":"YulTypedName","src":"4397:9:31","type":""},{"name":"value0","nativeSrc":"4409:6:31","nodeType":"YulTypedName","src":"4409:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4420:4:31","nodeType":"YulTypedName","src":"4420:4:31","type":""}],"src":"4327:222:31"},{"body":{"nativeSrc":"4655:519:31","nodeType":"YulBlock","src":"4655:519:31","statements":[{"body":{"nativeSrc":"4701:83:31","nodeType":"YulBlock","src":"4701:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4703:77:31","nodeType":"YulIdentifier","src":"4703:77:31"},"nativeSrc":"4703:79:31","nodeType":"YulFunctionCall","src":"4703:79:31"},"nativeSrc":"4703:79:31","nodeType":"YulExpressionStatement","src":"4703:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4676:7:31","nodeType":"YulIdentifier","src":"4676:7:31"},{"name":"headStart","nativeSrc":"4685:9:31","nodeType":"YulIdentifier","src":"4685:9:31"}],"functionName":{"name":"sub","nativeSrc":"4672:3:31","nodeType":"YulIdentifier","src":"4672:3:31"},"nativeSrc":"4672:23:31","nodeType":"YulFunctionCall","src":"4672:23:31"},{"kind":"number","nativeSrc":"4697:2:31","nodeType":"YulLiteral","src":"4697:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4668:3:31","nodeType":"YulIdentifier","src":"4668:3:31"},"nativeSrc":"4668:32:31","nodeType":"YulFunctionCall","src":"4668:32:31"},"nativeSrc":"4665:119:31","nodeType":"YulIf","src":"4665:119:31"},{"nativeSrc":"4794:117:31","nodeType":"YulBlock","src":"4794:117:31","statements":[{"nativeSrc":"4809:15:31","nodeType":"YulVariableDeclaration","src":"4809:15:31","value":{"kind":"number","nativeSrc":"4823:1:31","nodeType":"YulLiteral","src":"4823:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4813:6:31","nodeType":"YulTypedName","src":"4813:6:31","type":""}]},{"nativeSrc":"4838:63:31","nodeType":"YulAssignment","src":"4838:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4873:9:31","nodeType":"YulIdentifier","src":"4873:9:31"},{"name":"offset","nativeSrc":"4884:6:31","nodeType":"YulIdentifier","src":"4884:6:31"}],"functionName":{"name":"add","nativeSrc":"4869:3:31","nodeType":"YulIdentifier","src":"4869:3:31"},"nativeSrc":"4869:22:31","nodeType":"YulFunctionCall","src":"4869:22:31"},{"name":"dataEnd","nativeSrc":"4893:7:31","nodeType":"YulIdentifier","src":"4893:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4848:20:31","nodeType":"YulIdentifier","src":"4848:20:31"},"nativeSrc":"4848:53:31","nodeType":"YulFunctionCall","src":"4848:53:31"},"variableNames":[{"name":"value0","nativeSrc":"4838:6:31","nodeType":"YulIdentifier","src":"4838:6:31"}]}]},{"nativeSrc":"4921:118:31","nodeType":"YulBlock","src":"4921:118:31","statements":[{"nativeSrc":"4936:16:31","nodeType":"YulVariableDeclaration","src":"4936:16:31","value":{"kind":"number","nativeSrc":"4950:2:31","nodeType":"YulLiteral","src":"4950:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4940:6:31","nodeType":"YulTypedName","src":"4940:6:31","type":""}]},{"nativeSrc":"4966:63:31","nodeType":"YulAssignment","src":"4966:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5001:9:31","nodeType":"YulIdentifier","src":"5001:9:31"},{"name":"offset","nativeSrc":"5012:6:31","nodeType":"YulIdentifier","src":"5012:6:31"}],"functionName":{"name":"add","nativeSrc":"4997:3:31","nodeType":"YulIdentifier","src":"4997:3:31"},"nativeSrc":"4997:22:31","nodeType":"YulFunctionCall","src":"4997:22:31"},{"name":"dataEnd","nativeSrc":"5021:7:31","nodeType":"YulIdentifier","src":"5021:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4976:20:31","nodeType":"YulIdentifier","src":"4976:20:31"},"nativeSrc":"4976:53:31","nodeType":"YulFunctionCall","src":"4976:53:31"},"variableNames":[{"name":"value1","nativeSrc":"4966:6:31","nodeType":"YulIdentifier","src":"4966:6:31"}]}]},{"nativeSrc":"5049:118:31","nodeType":"YulBlock","src":"5049:118:31","statements":[{"nativeSrc":"5064:16:31","nodeType":"YulVariableDeclaration","src":"5064:16:31","value":{"kind":"number","nativeSrc":"5078:2:31","nodeType":"YulLiteral","src":"5078:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5068:6:31","nodeType":"YulTypedName","src":"5068:6:31","type":""}]},{"nativeSrc":"5094:63:31","nodeType":"YulAssignment","src":"5094:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5129:9:31","nodeType":"YulIdentifier","src":"5129:9:31"},{"name":"offset","nativeSrc":"5140:6:31","nodeType":"YulIdentifier","src":"5140:6:31"}],"functionName":{"name":"add","nativeSrc":"5125:3:31","nodeType":"YulIdentifier","src":"5125:3:31"},"nativeSrc":"5125:22:31","nodeType":"YulFunctionCall","src":"5125:22:31"},{"name":"dataEnd","nativeSrc":"5149:7:31","nodeType":"YulIdentifier","src":"5149:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5104:20:31","nodeType":"YulIdentifier","src":"5104:20:31"},"nativeSrc":"5104:53:31","nodeType":"YulFunctionCall","src":"5104:53:31"},"variableNames":[{"name":"value2","nativeSrc":"5094:6:31","nodeType":"YulIdentifier","src":"5094:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4555:619:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4609:9:31","nodeType":"YulTypedName","src":"4609:9:31","type":""},{"name":"dataEnd","nativeSrc":"4620:7:31","nodeType":"YulTypedName","src":"4620:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4632:6:31","nodeType":"YulTypedName","src":"4632:6:31","type":""},{"name":"value1","nativeSrc":"4640:6:31","nodeType":"YulTypedName","src":"4640:6:31","type":""},{"name":"value2","nativeSrc":"4648:6:31","nodeType":"YulTypedName","src":"4648:6:31","type":""}],"src":"4555:619:31"},{"body":{"nativeSrc":"5225:32:31","nodeType":"YulBlock","src":"5225:32:31","statements":[{"nativeSrc":"5235:16:31","nodeType":"YulAssignment","src":"5235:16:31","value":{"name":"value","nativeSrc":"5246:5:31","nodeType":"YulIdentifier","src":"5246:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5235:7:31","nodeType":"YulIdentifier","src":"5235:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5180:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5207:5:31","nodeType":"YulTypedName","src":"5207:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5217:7:31","nodeType":"YulTypedName","src":"5217:7:31","type":""}],"src":"5180:77:31"},{"body":{"nativeSrc":"5306:79:31","nodeType":"YulBlock","src":"5306:79:31","statements":[{"body":{"nativeSrc":"5363:16:31","nodeType":"YulBlock","src":"5363:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5372:1:31","nodeType":"YulLiteral","src":"5372:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5375:1:31","nodeType":"YulLiteral","src":"5375:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5365:6:31","nodeType":"YulIdentifier","src":"5365:6:31"},"nativeSrc":"5365:12:31","nodeType":"YulFunctionCall","src":"5365:12:31"},"nativeSrc":"5365:12:31","nodeType":"YulExpressionStatement","src":"5365:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5329:5:31","nodeType":"YulIdentifier","src":"5329:5:31"},{"arguments":[{"name":"value","nativeSrc":"5354:5:31","nodeType":"YulIdentifier","src":"5354:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5336:17:31","nodeType":"YulIdentifier","src":"5336:17:31"},"nativeSrc":"5336:24:31","nodeType":"YulFunctionCall","src":"5336:24:31"}],"functionName":{"name":"eq","nativeSrc":"5326:2:31","nodeType":"YulIdentifier","src":"5326:2:31"},"nativeSrc":"5326:35:31","nodeType":"YulFunctionCall","src":"5326:35:31"}],"functionName":{"name":"iszero","nativeSrc":"5319:6:31","nodeType":"YulIdentifier","src":"5319:6:31"},"nativeSrc":"5319:43:31","nodeType":"YulFunctionCall","src":"5319:43:31"},"nativeSrc":"5316:63:31","nodeType":"YulIf","src":"5316:63:31"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5263:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5299:5:31","nodeType":"YulTypedName","src":"5299:5:31","type":""}],"src":"5263:122:31"},{"body":{"nativeSrc":"5443:87:31","nodeType":"YulBlock","src":"5443:87:31","statements":[{"nativeSrc":"5453:29:31","nodeType":"YulAssignment","src":"5453:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"5475:6:31","nodeType":"YulIdentifier","src":"5475:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"5462:12:31","nodeType":"YulIdentifier","src":"5462:12:31"},"nativeSrc":"5462:20:31","nodeType":"YulFunctionCall","src":"5462:20:31"},"variableNames":[{"name":"value","nativeSrc":"5453:5:31","nodeType":"YulIdentifier","src":"5453:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5518:5:31","nodeType":"YulIdentifier","src":"5518:5:31"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5491:26:31","nodeType":"YulIdentifier","src":"5491:26:31"},"nativeSrc":"5491:33:31","nodeType":"YulFunctionCall","src":"5491:33:31"},"nativeSrc":"5491:33:31","nodeType":"YulExpressionStatement","src":"5491:33:31"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5391:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5421:6:31","nodeType":"YulTypedName","src":"5421:6:31","type":""},{"name":"end","nativeSrc":"5429:3:31","nodeType":"YulTypedName","src":"5429:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5437:5:31","nodeType":"YulTypedName","src":"5437:5:31","type":""}],"src":"5391:139:31"},{"body":{"nativeSrc":"5602:263:31","nodeType":"YulBlock","src":"5602:263:31","statements":[{"body":{"nativeSrc":"5648:83:31","nodeType":"YulBlock","src":"5648:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5650:77:31","nodeType":"YulIdentifier","src":"5650:77:31"},"nativeSrc":"5650:79:31","nodeType":"YulFunctionCall","src":"5650:79:31"},"nativeSrc":"5650:79:31","nodeType":"YulExpressionStatement","src":"5650:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5623:7:31","nodeType":"YulIdentifier","src":"5623:7:31"},{"name":"headStart","nativeSrc":"5632:9:31","nodeType":"YulIdentifier","src":"5632:9:31"}],"functionName":{"name":"sub","nativeSrc":"5619:3:31","nodeType":"YulIdentifier","src":"5619:3:31"},"nativeSrc":"5619:23:31","nodeType":"YulFunctionCall","src":"5619:23:31"},{"kind":"number","nativeSrc":"5644:2:31","nodeType":"YulLiteral","src":"5644:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5615:3:31","nodeType":"YulIdentifier","src":"5615:3:31"},"nativeSrc":"5615:32:31","nodeType":"YulFunctionCall","src":"5615:32:31"},"nativeSrc":"5612:119:31","nodeType":"YulIf","src":"5612:119:31"},{"nativeSrc":"5741:117:31","nodeType":"YulBlock","src":"5741:117:31","statements":[{"nativeSrc":"5756:15:31","nodeType":"YulVariableDeclaration","src":"5756:15:31","value":{"kind":"number","nativeSrc":"5770:1:31","nodeType":"YulLiteral","src":"5770:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5760:6:31","nodeType":"YulTypedName","src":"5760:6:31","type":""}]},{"nativeSrc":"5785:63:31","nodeType":"YulAssignment","src":"5785:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5820:9:31","nodeType":"YulIdentifier","src":"5820:9:31"},{"name":"offset","nativeSrc":"5831:6:31","nodeType":"YulIdentifier","src":"5831:6:31"}],"functionName":{"name":"add","nativeSrc":"5816:3:31","nodeType":"YulIdentifier","src":"5816:3:31"},"nativeSrc":"5816:22:31","nodeType":"YulFunctionCall","src":"5816:22:31"},{"name":"dataEnd","nativeSrc":"5840:7:31","nodeType":"YulIdentifier","src":"5840:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"5795:20:31","nodeType":"YulIdentifier","src":"5795:20:31"},"nativeSrc":"5795:53:31","nodeType":"YulFunctionCall","src":"5795:53:31"},"variableNames":[{"name":"value0","nativeSrc":"5785:6:31","nodeType":"YulIdentifier","src":"5785:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5536:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5572:9:31","nodeType":"YulTypedName","src":"5572:9:31","type":""},{"name":"dataEnd","nativeSrc":"5583:7:31","nodeType":"YulTypedName","src":"5583:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5595:6:31","nodeType":"YulTypedName","src":"5595:6:31","type":""}],"src":"5536:329:31"},{"body":{"nativeSrc":"5936:53:31","nodeType":"YulBlock","src":"5936:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5953:3:31","nodeType":"YulIdentifier","src":"5953:3:31"},{"arguments":[{"name":"value","nativeSrc":"5976:5:31","nodeType":"YulIdentifier","src":"5976:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5958:17:31","nodeType":"YulIdentifier","src":"5958:17:31"},"nativeSrc":"5958:24:31","nodeType":"YulFunctionCall","src":"5958:24:31"}],"functionName":{"name":"mstore","nativeSrc":"5946:6:31","nodeType":"YulIdentifier","src":"5946:6:31"},"nativeSrc":"5946:37:31","nodeType":"YulFunctionCall","src":"5946:37:31"},"nativeSrc":"5946:37:31","nodeType":"YulExpressionStatement","src":"5946:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5871:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5924:5:31","nodeType":"YulTypedName","src":"5924:5:31","type":""},{"name":"pos","nativeSrc":"5931:3:31","nodeType":"YulTypedName","src":"5931:3:31","type":""}],"src":"5871:118:31"},{"body":{"nativeSrc":"6093:124:31","nodeType":"YulBlock","src":"6093:124:31","statements":[{"nativeSrc":"6103:26:31","nodeType":"YulAssignment","src":"6103:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"6115:9:31","nodeType":"YulIdentifier","src":"6115:9:31"},{"kind":"number","nativeSrc":"6126:2:31","nodeType":"YulLiteral","src":"6126:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6111:3:31","nodeType":"YulIdentifier","src":"6111:3:31"},"nativeSrc":"6111:18:31","nodeType":"YulFunctionCall","src":"6111:18:31"},"variableNames":[{"name":"tail","nativeSrc":"6103:4:31","nodeType":"YulIdentifier","src":"6103:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6183:6:31","nodeType":"YulIdentifier","src":"6183:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"6196:9:31","nodeType":"YulIdentifier","src":"6196:9:31"},{"kind":"number","nativeSrc":"6207:1:31","nodeType":"YulLiteral","src":"6207:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6192:3:31","nodeType":"YulIdentifier","src":"6192:3:31"},"nativeSrc":"6192:17:31","nodeType":"YulFunctionCall","src":"6192:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6139:43:31","nodeType":"YulIdentifier","src":"6139:43:31"},"nativeSrc":"6139:71:31","nodeType":"YulFunctionCall","src":"6139:71:31"},"nativeSrc":"6139:71:31","nodeType":"YulExpressionStatement","src":"6139:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5995:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6065:9:31","nodeType":"YulTypedName","src":"6065:9:31","type":""},{"name":"value0","nativeSrc":"6077:6:31","nodeType":"YulTypedName","src":"6077:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6088:4:31","nodeType":"YulTypedName","src":"6088:4:31","type":""}],"src":"5995:222:31"},{"body":{"nativeSrc":"6306:391:31","nodeType":"YulBlock","src":"6306:391:31","statements":[{"body":{"nativeSrc":"6352:83:31","nodeType":"YulBlock","src":"6352:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6354:77:31","nodeType":"YulIdentifier","src":"6354:77:31"},"nativeSrc":"6354:79:31","nodeType":"YulFunctionCall","src":"6354:79:31"},"nativeSrc":"6354:79:31","nodeType":"YulExpressionStatement","src":"6354:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6327:7:31","nodeType":"YulIdentifier","src":"6327:7:31"},{"name":"headStart","nativeSrc":"6336:9:31","nodeType":"YulIdentifier","src":"6336:9:31"}],"functionName":{"name":"sub","nativeSrc":"6323:3:31","nodeType":"YulIdentifier","src":"6323:3:31"},"nativeSrc":"6323:23:31","nodeType":"YulFunctionCall","src":"6323:23:31"},{"kind":"number","nativeSrc":"6348:2:31","nodeType":"YulLiteral","src":"6348:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6319:3:31","nodeType":"YulIdentifier","src":"6319:3:31"},"nativeSrc":"6319:32:31","nodeType":"YulFunctionCall","src":"6319:32:31"},"nativeSrc":"6316:119:31","nodeType":"YulIf","src":"6316:119:31"},{"nativeSrc":"6445:117:31","nodeType":"YulBlock","src":"6445:117:31","statements":[{"nativeSrc":"6460:15:31","nodeType":"YulVariableDeclaration","src":"6460:15:31","value":{"kind":"number","nativeSrc":"6474:1:31","nodeType":"YulLiteral","src":"6474:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6464:6:31","nodeType":"YulTypedName","src":"6464:6:31","type":""}]},{"nativeSrc":"6489:63:31","nodeType":"YulAssignment","src":"6489:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6524:9:31","nodeType":"YulIdentifier","src":"6524:9:31"},{"name":"offset","nativeSrc":"6535:6:31","nodeType":"YulIdentifier","src":"6535:6:31"}],"functionName":{"name":"add","nativeSrc":"6520:3:31","nodeType":"YulIdentifier","src":"6520:3:31"},"nativeSrc":"6520:22:31","nodeType":"YulFunctionCall","src":"6520:22:31"},{"name":"dataEnd","nativeSrc":"6544:7:31","nodeType":"YulIdentifier","src":"6544:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6499:20:31","nodeType":"YulIdentifier","src":"6499:20:31"},"nativeSrc":"6499:53:31","nodeType":"YulFunctionCall","src":"6499:53:31"},"variableNames":[{"name":"value0","nativeSrc":"6489:6:31","nodeType":"YulIdentifier","src":"6489:6:31"}]}]},{"nativeSrc":"6572:118:31","nodeType":"YulBlock","src":"6572:118:31","statements":[{"nativeSrc":"6587:16:31","nodeType":"YulVariableDeclaration","src":"6587:16:31","value":{"kind":"number","nativeSrc":"6601:2:31","nodeType":"YulLiteral","src":"6601:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6591:6:31","nodeType":"YulTypedName","src":"6591:6:31","type":""}]},{"nativeSrc":"6617:63:31","nodeType":"YulAssignment","src":"6617:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6652:9:31","nodeType":"YulIdentifier","src":"6652:9:31"},{"name":"offset","nativeSrc":"6663:6:31","nodeType":"YulIdentifier","src":"6663:6:31"}],"functionName":{"name":"add","nativeSrc":"6648:3:31","nodeType":"YulIdentifier","src":"6648:3:31"},"nativeSrc":"6648:22:31","nodeType":"YulFunctionCall","src":"6648:22:31"},{"name":"dataEnd","nativeSrc":"6672:7:31","nodeType":"YulIdentifier","src":"6672:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6627:20:31","nodeType":"YulIdentifier","src":"6627:20:31"},"nativeSrc":"6627:53:31","nodeType":"YulFunctionCall","src":"6627:53:31"},"variableNames":[{"name":"value1","nativeSrc":"6617:6:31","nodeType":"YulIdentifier","src":"6617:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6223:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6268:9:31","nodeType":"YulTypedName","src":"6268:9:31","type":""},{"name":"dataEnd","nativeSrc":"6279:7:31","nodeType":"YulTypedName","src":"6279:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6291:6:31","nodeType":"YulTypedName","src":"6291:6:31","type":""},{"name":"value1","nativeSrc":"6299:6:31","nodeType":"YulTypedName","src":"6299:6:31","type":""}],"src":"6223:474:31"},{"body":{"nativeSrc":"6746:43:31","nodeType":"YulBlock","src":"6746:43:31","statements":[{"nativeSrc":"6756:27:31","nodeType":"YulAssignment","src":"6756:27:31","value":{"arguments":[{"name":"value","nativeSrc":"6771:5:31","nodeType":"YulIdentifier","src":"6771:5:31"},{"kind":"number","nativeSrc":"6778:4:31","nodeType":"YulLiteral","src":"6778:4:31","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6767:3:31","nodeType":"YulIdentifier","src":"6767:3:31"},"nativeSrc":"6767:16:31","nodeType":"YulFunctionCall","src":"6767:16:31"},"variableNames":[{"name":"cleaned","nativeSrc":"6756:7:31","nodeType":"YulIdentifier","src":"6756:7:31"}]}]},"name":"cleanup_t_uint8","nativeSrc":"6703:86:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6728:5:31","nodeType":"YulTypedName","src":"6728:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6738:7:31","nodeType":"YulTypedName","src":"6738:7:31","type":""}],"src":"6703:86:31"},{"body":{"nativeSrc":"6856:51:31","nodeType":"YulBlock","src":"6856:51:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6873:3:31","nodeType":"YulIdentifier","src":"6873:3:31"},{"arguments":[{"name":"value","nativeSrc":"6894:5:31","nodeType":"YulIdentifier","src":"6894:5:31"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"6878:15:31","nodeType":"YulIdentifier","src":"6878:15:31"},"nativeSrc":"6878:22:31","nodeType":"YulFunctionCall","src":"6878:22:31"}],"functionName":{"name":"mstore","nativeSrc":"6866:6:31","nodeType":"YulIdentifier","src":"6866:6:31"},"nativeSrc":"6866:35:31","nodeType":"YulFunctionCall","src":"6866:35:31"},"nativeSrc":"6866:35:31","nodeType":"YulExpressionStatement","src":"6866:35:31"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"6795:112:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6844:5:31","nodeType":"YulTypedName","src":"6844:5:31","type":""},{"name":"pos","nativeSrc":"6851:3:31","nodeType":"YulTypedName","src":"6851:3:31","type":""}],"src":"6795:112:31"},{"body":{"nativeSrc":"7007:120:31","nodeType":"YulBlock","src":"7007:120:31","statements":[{"nativeSrc":"7017:26:31","nodeType":"YulAssignment","src":"7017:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"7029:9:31","nodeType":"YulIdentifier","src":"7029:9:31"},{"kind":"number","nativeSrc":"7040:2:31","nodeType":"YulLiteral","src":"7040:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7025:3:31","nodeType":"YulIdentifier","src":"7025:3:31"},"nativeSrc":"7025:18:31","nodeType":"YulFunctionCall","src":"7025:18:31"},"variableNames":[{"name":"tail","nativeSrc":"7017:4:31","nodeType":"YulIdentifier","src":"7017:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7093:6:31","nodeType":"YulIdentifier","src":"7093:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"7106:9:31","nodeType":"YulIdentifier","src":"7106:9:31"},{"kind":"number","nativeSrc":"7117:1:31","nodeType":"YulLiteral","src":"7117:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7102:3:31","nodeType":"YulIdentifier","src":"7102:3:31"},"nativeSrc":"7102:17:31","nodeType":"YulFunctionCall","src":"7102:17:31"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"7053:39:31","nodeType":"YulIdentifier","src":"7053:39:31"},"nativeSrc":"7053:67:31","nodeType":"YulFunctionCall","src":"7053:67:31"},"nativeSrc":"7053:67:31","nodeType":"YulExpressionStatement","src":"7053:67:31"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"6913:214:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6979:9:31","nodeType":"YulTypedName","src":"6979:9:31","type":""},{"name":"value0","nativeSrc":"6991:6:31","nodeType":"YulTypedName","src":"6991:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7002:4:31","nodeType":"YulTypedName","src":"7002:4:31","type":""}],"src":"6913:214:31"},{"body":{"nativeSrc":"7199:263:31","nodeType":"YulBlock","src":"7199:263:31","statements":[{"body":{"nativeSrc":"7245:83:31","nodeType":"YulBlock","src":"7245:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7247:77:31","nodeType":"YulIdentifier","src":"7247:77:31"},"nativeSrc":"7247:79:31","nodeType":"YulFunctionCall","src":"7247:79:31"},"nativeSrc":"7247:79:31","nodeType":"YulExpressionStatement","src":"7247:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7220:7:31","nodeType":"YulIdentifier","src":"7220:7:31"},{"name":"headStart","nativeSrc":"7229:9:31","nodeType":"YulIdentifier","src":"7229:9:31"}],"functionName":{"name":"sub","nativeSrc":"7216:3:31","nodeType":"YulIdentifier","src":"7216:3:31"},"nativeSrc":"7216:23:31","nodeType":"YulFunctionCall","src":"7216:23:31"},{"kind":"number","nativeSrc":"7241:2:31","nodeType":"YulLiteral","src":"7241:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7212:3:31","nodeType":"YulIdentifier","src":"7212:3:31"},"nativeSrc":"7212:32:31","nodeType":"YulFunctionCall","src":"7212:32:31"},"nativeSrc":"7209:119:31","nodeType":"YulIf","src":"7209:119:31"},{"nativeSrc":"7338:117:31","nodeType":"YulBlock","src":"7338:117:31","statements":[{"nativeSrc":"7353:15:31","nodeType":"YulVariableDeclaration","src":"7353:15:31","value":{"kind":"number","nativeSrc":"7367:1:31","nodeType":"YulLiteral","src":"7367:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7357:6:31","nodeType":"YulTypedName","src":"7357:6:31","type":""}]},{"nativeSrc":"7382:63:31","nodeType":"YulAssignment","src":"7382:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7417:9:31","nodeType":"YulIdentifier","src":"7417:9:31"},{"name":"offset","nativeSrc":"7428:6:31","nodeType":"YulIdentifier","src":"7428:6:31"}],"functionName":{"name":"add","nativeSrc":"7413:3:31","nodeType":"YulIdentifier","src":"7413:3:31"},"nativeSrc":"7413:22:31","nodeType":"YulFunctionCall","src":"7413:22:31"},{"name":"dataEnd","nativeSrc":"7437:7:31","nodeType":"YulIdentifier","src":"7437:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7392:20:31","nodeType":"YulIdentifier","src":"7392:20:31"},"nativeSrc":"7392:53:31","nodeType":"YulFunctionCall","src":"7392:53:31"},"variableNames":[{"name":"value0","nativeSrc":"7382:6:31","nodeType":"YulIdentifier","src":"7382:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7133:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7169:9:31","nodeType":"YulTypedName","src":"7169:9:31","type":""},{"name":"dataEnd","nativeSrc":"7180:7:31","nodeType":"YulTypedName","src":"7180:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7192:6:31","nodeType":"YulTypedName","src":"7192:6:31","type":""}],"src":"7133:329:31"},{"body":{"nativeSrc":"7533:53:31","nodeType":"YulBlock","src":"7533:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7550:3:31","nodeType":"YulIdentifier","src":"7550:3:31"},{"arguments":[{"name":"value","nativeSrc":"7573:5:31","nodeType":"YulIdentifier","src":"7573:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7555:17:31","nodeType":"YulIdentifier","src":"7555:17:31"},"nativeSrc":"7555:24:31","nodeType":"YulFunctionCall","src":"7555:24:31"}],"functionName":{"name":"mstore","nativeSrc":"7543:6:31","nodeType":"YulIdentifier","src":"7543:6:31"},"nativeSrc":"7543:37:31","nodeType":"YulFunctionCall","src":"7543:37:31"},"nativeSrc":"7543:37:31","nodeType":"YulExpressionStatement","src":"7543:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7468:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7521:5:31","nodeType":"YulTypedName","src":"7521:5:31","type":""},{"name":"pos","nativeSrc":"7528:3:31","nodeType":"YulTypedName","src":"7528:3:31","type":""}],"src":"7468:118:31"},{"body":{"nativeSrc":"7690:124:31","nodeType":"YulBlock","src":"7690:124:31","statements":[{"nativeSrc":"7700:26:31","nodeType":"YulAssignment","src":"7700:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"7712:9:31","nodeType":"YulIdentifier","src":"7712:9:31"},{"kind":"number","nativeSrc":"7723:2:31","nodeType":"YulLiteral","src":"7723:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7708:3:31","nodeType":"YulIdentifier","src":"7708:3:31"},"nativeSrc":"7708:18:31","nodeType":"YulFunctionCall","src":"7708:18:31"},"variableNames":[{"name":"tail","nativeSrc":"7700:4:31","nodeType":"YulIdentifier","src":"7700:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7780:6:31","nodeType":"YulIdentifier","src":"7780:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"7793:9:31","nodeType":"YulIdentifier","src":"7793:9:31"},{"kind":"number","nativeSrc":"7804:1:31","nodeType":"YulLiteral","src":"7804:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7789:3:31","nodeType":"YulIdentifier","src":"7789:3:31"},"nativeSrc":"7789:17:31","nodeType":"YulFunctionCall","src":"7789:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7736:43:31","nodeType":"YulIdentifier","src":"7736:43:31"},"nativeSrc":"7736:71:31","nodeType":"YulFunctionCall","src":"7736:71:31"},"nativeSrc":"7736:71:31","nodeType":"YulExpressionStatement","src":"7736:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7592:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7662:9:31","nodeType":"YulTypedName","src":"7662:9:31","type":""},{"name":"value0","nativeSrc":"7674:6:31","nodeType":"YulTypedName","src":"7674:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7685:4:31","nodeType":"YulTypedName","src":"7685:4:31","type":""}],"src":"7592:222:31"},{"body":{"nativeSrc":"7864:49:31","nodeType":"YulBlock","src":"7864:49:31","statements":[{"nativeSrc":"7874:33:31","nodeType":"YulAssignment","src":"7874:33:31","value":{"arguments":[{"name":"value","nativeSrc":"7889:5:31","nodeType":"YulIdentifier","src":"7889:5:31"},{"kind":"number","nativeSrc":"7896:10:31","nodeType":"YulLiteral","src":"7896:10:31","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"7885:3:31","nodeType":"YulIdentifier","src":"7885:3:31"},"nativeSrc":"7885:22:31","nodeType":"YulFunctionCall","src":"7885:22:31"},"variableNames":[{"name":"cleaned","nativeSrc":"7874:7:31","nodeType":"YulIdentifier","src":"7874:7:31"}]}]},"name":"cleanup_t_uint32","nativeSrc":"7820:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7846:5:31","nodeType":"YulTypedName","src":"7846:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"7856:7:31","nodeType":"YulTypedName","src":"7856:7:31","type":""}],"src":"7820:93:31"},{"body":{"nativeSrc":"7982:52:31","nodeType":"YulBlock","src":"7982:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7999:3:31","nodeType":"YulIdentifier","src":"7999:3:31"},{"arguments":[{"name":"value","nativeSrc":"8021:5:31","nodeType":"YulIdentifier","src":"8021:5:31"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"8004:16:31","nodeType":"YulIdentifier","src":"8004:16:31"},"nativeSrc":"8004:23:31","nodeType":"YulFunctionCall","src":"8004:23:31"}],"functionName":{"name":"mstore","nativeSrc":"7992:6:31","nodeType":"YulIdentifier","src":"7992:6:31"},"nativeSrc":"7992:36:31","nodeType":"YulFunctionCall","src":"7992:36:31"},"nativeSrc":"7992:36:31","nodeType":"YulExpressionStatement","src":"7992:36:31"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"7919:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7970:5:31","nodeType":"YulTypedName","src":"7970:5:31","type":""},{"name":"pos","nativeSrc":"7977:3:31","nodeType":"YulTypedName","src":"7977:3:31","type":""}],"src":"7919:115:31"},{"body":{"nativeSrc":"8136:122:31","nodeType":"YulBlock","src":"8136:122:31","statements":[{"nativeSrc":"8146:26:31","nodeType":"YulAssignment","src":"8146:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8158:9:31","nodeType":"YulIdentifier","src":"8158:9:31"},{"kind":"number","nativeSrc":"8169:2:31","nodeType":"YulLiteral","src":"8169:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8154:3:31","nodeType":"YulIdentifier","src":"8154:3:31"},"nativeSrc":"8154:18:31","nodeType":"YulFunctionCall","src":"8154:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8146:4:31","nodeType":"YulIdentifier","src":"8146:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8224:6:31","nodeType":"YulIdentifier","src":"8224:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"8237:9:31","nodeType":"YulIdentifier","src":"8237:9:31"},{"kind":"number","nativeSrc":"8248:1:31","nodeType":"YulLiteral","src":"8248:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8233:3:31","nodeType":"YulIdentifier","src":"8233:3:31"},"nativeSrc":"8233:17:31","nodeType":"YulFunctionCall","src":"8233:17:31"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"8182:41:31","nodeType":"YulIdentifier","src":"8182:41:31"},"nativeSrc":"8182:69:31","nodeType":"YulFunctionCall","src":"8182:69:31"},"nativeSrc":"8182:69:31","nodeType":"YulExpressionStatement","src":"8182:69:31"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"8040:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8108:9:31","nodeType":"YulTypedName","src":"8108:9:31","type":""},{"name":"value0","nativeSrc":"8120:6:31","nodeType":"YulTypedName","src":"8120:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8131:4:31","nodeType":"YulTypedName","src":"8131:4:31","type":""}],"src":"8040:218:31"},{"body":{"nativeSrc":"8308:105:31","nodeType":"YulBlock","src":"8308:105:31","statements":[{"nativeSrc":"8318:89:31","nodeType":"YulAssignment","src":"8318:89:31","value":{"arguments":[{"name":"value","nativeSrc":"8333:5:31","nodeType":"YulIdentifier","src":"8333:5:31"},{"kind":"number","nativeSrc":"8340:66:31","nodeType":"YulLiteral","src":"8340:66:31","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"8329:3:31","nodeType":"YulIdentifier","src":"8329:3:31"},"nativeSrc":"8329:78:31","nodeType":"YulFunctionCall","src":"8329:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"8318:7:31","nodeType":"YulIdentifier","src":"8318:7:31"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"8264:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8290:5:31","nodeType":"YulTypedName","src":"8290:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8300:7:31","nodeType":"YulTypedName","src":"8300:7:31","type":""}],"src":"8264:149:31"},{"body":{"nativeSrc":"8482:52:31","nodeType":"YulBlock","src":"8482:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8499:3:31","nodeType":"YulIdentifier","src":"8499:3:31"},{"arguments":[{"name":"value","nativeSrc":"8521:5:31","nodeType":"YulIdentifier","src":"8521:5:31"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"8504:16:31","nodeType":"YulIdentifier","src":"8504:16:31"},"nativeSrc":"8504:23:31","nodeType":"YulFunctionCall","src":"8504:23:31"}],"functionName":{"name":"mstore","nativeSrc":"8492:6:31","nodeType":"YulIdentifier","src":"8492:6:31"},"nativeSrc":"8492:36:31","nodeType":"YulFunctionCall","src":"8492:36:31"},"nativeSrc":"8492:36:31","nodeType":"YulExpressionStatement","src":"8492:36:31"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8419:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8470:5:31","nodeType":"YulTypedName","src":"8470:5:31","type":""},{"name":"pos","nativeSrc":"8477:3:31","nodeType":"YulTypedName","src":"8477:3:31","type":""}],"src":"8419:115:31"},{"body":{"nativeSrc":"8614:40:31","nodeType":"YulBlock","src":"8614:40:31","statements":[{"nativeSrc":"8625:22:31","nodeType":"YulAssignment","src":"8625:22:31","value":{"arguments":[{"name":"value","nativeSrc":"8641:5:31","nodeType":"YulIdentifier","src":"8641:5:31"}],"functionName":{"name":"mload","nativeSrc":"8635:5:31","nodeType":"YulIdentifier","src":"8635:5:31"},"nativeSrc":"8635:12:31","nodeType":"YulFunctionCall","src":"8635:12:31"},"variableNames":[{"name":"length","nativeSrc":"8625:6:31","nodeType":"YulIdentifier","src":"8625:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8540:114:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8597:5:31","nodeType":"YulTypedName","src":"8597:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8607:6:31","nodeType":"YulTypedName","src":"8607:6:31","type":""}],"src":"8540:114:31"},{"body":{"nativeSrc":"8771:73:31","nodeType":"YulBlock","src":"8771:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8788:3:31","nodeType":"YulIdentifier","src":"8788:3:31"},{"name":"length","nativeSrc":"8793:6:31","nodeType":"YulIdentifier","src":"8793:6:31"}],"functionName":{"name":"mstore","nativeSrc":"8781:6:31","nodeType":"YulIdentifier","src":"8781:6:31"},"nativeSrc":"8781:19:31","nodeType":"YulFunctionCall","src":"8781:19:31"},"nativeSrc":"8781:19:31","nodeType":"YulExpressionStatement","src":"8781:19:31"},{"nativeSrc":"8809:29:31","nodeType":"YulAssignment","src":"8809:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"8828:3:31","nodeType":"YulIdentifier","src":"8828:3:31"},{"kind":"number","nativeSrc":"8833:4:31","nodeType":"YulLiteral","src":"8833:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8824:3:31","nodeType":"YulIdentifier","src":"8824:3:31"},"nativeSrc":"8824:14:31","nodeType":"YulFunctionCall","src":"8824:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"8809:11:31","nodeType":"YulIdentifier","src":"8809:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8660:184:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8743:3:31","nodeType":"YulTypedName","src":"8743:3:31","type":""},{"name":"length","nativeSrc":"8748:6:31","nodeType":"YulTypedName","src":"8748:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8759:11:31","nodeType":"YulTypedName","src":"8759:11:31","type":""}],"src":"8660:184:31"},{"body":{"nativeSrc":"8922:60:31","nodeType":"YulBlock","src":"8922:60:31","statements":[{"nativeSrc":"8932:11:31","nodeType":"YulAssignment","src":"8932:11:31","value":{"name":"ptr","nativeSrc":"8940:3:31","nodeType":"YulIdentifier","src":"8940:3:31"},"variableNames":[{"name":"data","nativeSrc":"8932:4:31","nodeType":"YulIdentifier","src":"8932:4:31"}]},{"nativeSrc":"8953:22:31","nodeType":"YulAssignment","src":"8953:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"8965:3:31","nodeType":"YulIdentifier","src":"8965:3:31"},{"kind":"number","nativeSrc":"8970:4:31","nodeType":"YulLiteral","src":"8970:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8961:3:31","nodeType":"YulIdentifier","src":"8961:3:31"},"nativeSrc":"8961:14:31","nodeType":"YulFunctionCall","src":"8961:14:31"},"variableNames":[{"name":"data","nativeSrc":"8953:4:31","nodeType":"YulIdentifier","src":"8953:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"8850:132:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8909:3:31","nodeType":"YulTypedName","src":"8909:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"8917:4:31","nodeType":"YulTypedName","src":"8917:4:31","type":""}],"src":"8850:132:31"},{"body":{"nativeSrc":"9043:53:31","nodeType":"YulBlock","src":"9043:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9060:3:31","nodeType":"YulIdentifier","src":"9060:3:31"},{"arguments":[{"name":"value","nativeSrc":"9083:5:31","nodeType":"YulIdentifier","src":"9083:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9065:17:31","nodeType":"YulIdentifier","src":"9065:17:31"},"nativeSrc":"9065:24:31","nodeType":"YulFunctionCall","src":"9065:24:31"}],"functionName":{"name":"mstore","nativeSrc":"9053:6:31","nodeType":"YulIdentifier","src":"9053:6:31"},"nativeSrc":"9053:37:31","nodeType":"YulFunctionCall","src":"9053:37:31"},"nativeSrc":"9053:37:31","nodeType":"YulExpressionStatement","src":"9053:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"8988:108:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9031:5:31","nodeType":"YulTypedName","src":"9031:5:31","type":""},{"name":"pos","nativeSrc":"9038:3:31","nodeType":"YulTypedName","src":"9038:3:31","type":""}],"src":"8988:108:31"},{"body":{"nativeSrc":"9182:99:31","nodeType":"YulBlock","src":"9182:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"9226:6:31","nodeType":"YulIdentifier","src":"9226:6:31"},{"name":"pos","nativeSrc":"9234:3:31","nodeType":"YulIdentifier","src":"9234:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"9192:33:31","nodeType":"YulIdentifier","src":"9192:33:31"},"nativeSrc":"9192:46:31","nodeType":"YulFunctionCall","src":"9192:46:31"},"nativeSrc":"9192:46:31","nodeType":"YulExpressionStatement","src":"9192:46:31"},{"nativeSrc":"9247:28:31","nodeType":"YulAssignment","src":"9247:28:31","value":{"arguments":[{"name":"pos","nativeSrc":"9265:3:31","nodeType":"YulIdentifier","src":"9265:3:31"},{"kind":"number","nativeSrc":"9270:4:31","nodeType":"YulLiteral","src":"9270:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9261:3:31","nodeType":"YulIdentifier","src":"9261:3:31"},"nativeSrc":"9261:14:31","nodeType":"YulFunctionCall","src":"9261:14:31"},"variableNames":[{"name":"updatedPos","nativeSrc":"9247:10:31","nodeType":"YulIdentifier","src":"9247:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"9102:179:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"9155:6:31","nodeType":"YulTypedName","src":"9155:6:31","type":""},{"name":"pos","nativeSrc":"9163:3:31","nodeType":"YulTypedName","src":"9163:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"9171:10:31","nodeType":"YulTypedName","src":"9171:10:31","type":""}],"src":"9102:179:31"},{"body":{"nativeSrc":"9362:38:31","nodeType":"YulBlock","src":"9362:38:31","statements":[{"nativeSrc":"9372:22:31","nodeType":"YulAssignment","src":"9372:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"9384:3:31","nodeType":"YulIdentifier","src":"9384:3:31"},{"kind":"number","nativeSrc":"9389:4:31","nodeType":"YulLiteral","src":"9389:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9380:3:31","nodeType":"YulIdentifier","src":"9380:3:31"},"nativeSrc":"9380:14:31","nodeType":"YulFunctionCall","src":"9380:14:31"},"variableNames":[{"name":"next","nativeSrc":"9372:4:31","nodeType":"YulIdentifier","src":"9372:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9287:113:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"9349:3:31","nodeType":"YulTypedName","src":"9349:3:31","type":""}],"returnVariables":[{"name":"next","nativeSrc":"9357:4:31","nodeType":"YulTypedName","src":"9357:4:31","type":""}],"src":"9287:113:31"},{"body":{"nativeSrc":"9560:608:31","nodeType":"YulBlock","src":"9560:608:31","statements":[{"nativeSrc":"9570:68:31","nodeType":"YulVariableDeclaration","src":"9570:68:31","value":{"arguments":[{"name":"value","nativeSrc":"9632:5:31","nodeType":"YulIdentifier","src":"9632:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9584:47:31","nodeType":"YulIdentifier","src":"9584:47:31"},"nativeSrc":"9584:54:31","nodeType":"YulFunctionCall","src":"9584:54:31"},"variables":[{"name":"length","nativeSrc":"9574:6:31","nodeType":"YulTypedName","src":"9574:6:31","type":""}]},{"nativeSrc":"9647:93:31","nodeType":"YulAssignment","src":"9647:93:31","value":{"arguments":[{"name":"pos","nativeSrc":"9728:3:31","nodeType":"YulIdentifier","src":"9728:3:31"},{"name":"length","nativeSrc":"9733:6:31","nodeType":"YulIdentifier","src":"9733:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9654:73:31","nodeType":"YulIdentifier","src":"9654:73:31"},"nativeSrc":"9654:86:31","nodeType":"YulFunctionCall","src":"9654:86:31"},"variableNames":[{"name":"pos","nativeSrc":"9647:3:31","nodeType":"YulIdentifier","src":"9647:3:31"}]},{"nativeSrc":"9749:71:31","nodeType":"YulVariableDeclaration","src":"9749:71:31","value":{"arguments":[{"name":"value","nativeSrc":"9814:5:31","nodeType":"YulIdentifier","src":"9814:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9764:49:31","nodeType":"YulIdentifier","src":"9764:49:31"},"nativeSrc":"9764:56:31","nodeType":"YulFunctionCall","src":"9764:56:31"},"variables":[{"name":"baseRef","nativeSrc":"9753:7:31","nodeType":"YulTypedName","src":"9753:7:31","type":""}]},{"nativeSrc":"9829:21:31","nodeType":"YulVariableDeclaration","src":"9829:21:31","value":{"name":"baseRef","nativeSrc":"9843:7:31","nodeType":"YulIdentifier","src":"9843:7:31"},"variables":[{"name":"srcPtr","nativeSrc":"9833:6:31","nodeType":"YulTypedName","src":"9833:6:31","type":""}]},{"body":{"nativeSrc":"9919:224:31","nodeType":"YulBlock","src":"9919:224:31","statements":[{"nativeSrc":"9933:34:31","nodeType":"YulVariableDeclaration","src":"9933:34:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"9960:6:31","nodeType":"YulIdentifier","src":"9960:6:31"}],"functionName":{"name":"mload","nativeSrc":"9954:5:31","nodeType":"YulIdentifier","src":"9954:5:31"},"nativeSrc":"9954:13:31","nodeType":"YulFunctionCall","src":"9954:13:31"},"variables":[{"name":"elementValue0","nativeSrc":"9937:13:31","nodeType":"YulTypedName","src":"9937:13:31","type":""}]},{"nativeSrc":"9980:70:31","nodeType":"YulAssignment","src":"9980:70:31","value":{"arguments":[{"name":"elementValue0","nativeSrc":"10031:13:31","nodeType":"YulIdentifier","src":"10031:13:31"},{"name":"pos","nativeSrc":"10046:3:31","nodeType":"YulIdentifier","src":"10046:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"9987:43:31","nodeType":"YulIdentifier","src":"9987:43:31"},"nativeSrc":"9987:63:31","nodeType":"YulFunctionCall","src":"9987:63:31"},"variableNames":[{"name":"pos","nativeSrc":"9980:3:31","nodeType":"YulIdentifier","src":"9980:3:31"}]},{"nativeSrc":"10063:70:31","nodeType":"YulAssignment","src":"10063:70:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"10126:6:31","nodeType":"YulIdentifier","src":"10126:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"10073:52:31","nodeType":"YulIdentifier","src":"10073:52:31"},"nativeSrc":"10073:60:31","nodeType":"YulFunctionCall","src":"10073:60:31"},"variableNames":[{"name":"srcPtr","nativeSrc":"10063:6:31","nodeType":"YulIdentifier","src":"10063:6:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9881:1:31","nodeType":"YulIdentifier","src":"9881:1:31"},{"name":"length","nativeSrc":"9884:6:31","nodeType":"YulIdentifier","src":"9884:6:31"}],"functionName":{"name":"lt","nativeSrc":"9878:2:31","nodeType":"YulIdentifier","src":"9878:2:31"},"nativeSrc":"9878:13:31","nodeType":"YulFunctionCall","src":"9878:13:31"},"nativeSrc":"9859:284:31","nodeType":"YulForLoop","post":{"nativeSrc":"9892:18:31","nodeType":"YulBlock","src":"9892:18:31","statements":[{"nativeSrc":"9894:14:31","nodeType":"YulAssignment","src":"9894:14:31","value":{"arguments":[{"name":"i","nativeSrc":"9903:1:31","nodeType":"YulIdentifier","src":"9903:1:31"},{"kind":"number","nativeSrc":"9906:1:31","nodeType":"YulLiteral","src":"9906:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9899:3:31","nodeType":"YulIdentifier","src":"9899:3:31"},"nativeSrc":"9899:9:31","nodeType":"YulFunctionCall","src":"9899:9:31"},"variableNames":[{"name":"i","nativeSrc":"9894:1:31","nodeType":"YulIdentifier","src":"9894:1:31"}]}]},"pre":{"nativeSrc":"9863:14:31","nodeType":"YulBlock","src":"9863:14:31","statements":[{"nativeSrc":"9865:10:31","nodeType":"YulVariableDeclaration","src":"9865:10:31","value":{"kind":"number","nativeSrc":"9874:1:31","nodeType":"YulLiteral","src":"9874:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9869:1:31","nodeType":"YulTypedName","src":"9869:1:31","type":""}]}]},"src":"9859:284:31"},{"nativeSrc":"10152:10:31","nodeType":"YulAssignment","src":"10152:10:31","value":{"name":"pos","nativeSrc":"10159:3:31","nodeType":"YulIdentifier","src":"10159:3:31"},"variableNames":[{"name":"end","nativeSrc":"10152:3:31","nodeType":"YulIdentifier","src":"10152:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"9436:732:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9539:5:31","nodeType":"YulTypedName","src":"9539:5:31","type":""},{"name":"pos","nativeSrc":"9546:3:31","nodeType":"YulTypedName","src":"9546:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9555:3:31","nodeType":"YulTypedName","src":"9555:3:31","type":""}],"src":"9436:732:31"},{"body":{"nativeSrc":"10528:861:31","nodeType":"YulBlock","src":"10528:861:31","statements":[{"nativeSrc":"10538:27:31","nodeType":"YulAssignment","src":"10538:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"10550:9:31","nodeType":"YulIdentifier","src":"10550:9:31"},{"kind":"number","nativeSrc":"10561:3:31","nodeType":"YulLiteral","src":"10561:3:31","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"10546:3:31","nodeType":"YulIdentifier","src":"10546:3:31"},"nativeSrc":"10546:19:31","nodeType":"YulFunctionCall","src":"10546:19:31"},"variableNames":[{"name":"tail","nativeSrc":"10538:4:31","nodeType":"YulIdentifier","src":"10538:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10617:6:31","nodeType":"YulIdentifier","src":"10617:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"10630:9:31","nodeType":"YulIdentifier","src":"10630:9:31"},{"kind":"number","nativeSrc":"10641:1:31","nodeType":"YulLiteral","src":"10641:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10626:3:31","nodeType":"YulIdentifier","src":"10626:3:31"},"nativeSrc":"10626:17:31","nodeType":"YulFunctionCall","src":"10626:17:31"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"10575:41:31","nodeType":"YulIdentifier","src":"10575:41:31"},"nativeSrc":"10575:69:31","nodeType":"YulFunctionCall","src":"10575:69:31"},"nativeSrc":"10575:69:31","nodeType":"YulExpressionStatement","src":"10575:69:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10665:9:31","nodeType":"YulIdentifier","src":"10665:9:31"},{"kind":"number","nativeSrc":"10676:2:31","nodeType":"YulLiteral","src":"10676:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10661:3:31","nodeType":"YulIdentifier","src":"10661:3:31"},"nativeSrc":"10661:18:31","nodeType":"YulFunctionCall","src":"10661:18:31"},{"arguments":[{"name":"tail","nativeSrc":"10685:4:31","nodeType":"YulIdentifier","src":"10685:4:31"},{"name":"headStart","nativeSrc":"10691:9:31","nodeType":"YulIdentifier","src":"10691:9:31"}],"functionName":{"name":"sub","nativeSrc":"10681:3:31","nodeType":"YulIdentifier","src":"10681:3:31"},"nativeSrc":"10681:20:31","nodeType":"YulFunctionCall","src":"10681:20:31"}],"functionName":{"name":"mstore","nativeSrc":"10654:6:31","nodeType":"YulIdentifier","src":"10654:6:31"},"nativeSrc":"10654:48:31","nodeType":"YulFunctionCall","src":"10654:48:31"},"nativeSrc":"10654:48:31","nodeType":"YulExpressionStatement","src":"10654:48:31"},{"nativeSrc":"10711:86:31","nodeType":"YulAssignment","src":"10711:86:31","value":{"arguments":[{"name":"value1","nativeSrc":"10783:6:31","nodeType":"YulIdentifier","src":"10783:6:31"},{"name":"tail","nativeSrc":"10792:4:31","nodeType":"YulIdentifier","src":"10792:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10719:63:31","nodeType":"YulIdentifier","src":"10719:63:31"},"nativeSrc":"10719:78:31","nodeType":"YulFunctionCall","src":"10719:78:31"},"variableNames":[{"name":"tail","nativeSrc":"10711:4:31","nodeType":"YulIdentifier","src":"10711:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10818:9:31","nodeType":"YulIdentifier","src":"10818:9:31"},{"kind":"number","nativeSrc":"10829:2:31","nodeType":"YulLiteral","src":"10829:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10814:3:31","nodeType":"YulIdentifier","src":"10814:3:31"},"nativeSrc":"10814:18:31","nodeType":"YulFunctionCall","src":"10814:18:31"},{"arguments":[{"name":"tail","nativeSrc":"10838:4:31","nodeType":"YulIdentifier","src":"10838:4:31"},{"name":"headStart","nativeSrc":"10844:9:31","nodeType":"YulIdentifier","src":"10844:9:31"}],"functionName":{"name":"sub","nativeSrc":"10834:3:31","nodeType":"YulIdentifier","src":"10834:3:31"},"nativeSrc":"10834:20:31","nodeType":"YulFunctionCall","src":"10834:20:31"}],"functionName":{"name":"mstore","nativeSrc":"10807:6:31","nodeType":"YulIdentifier","src":"10807:6:31"},"nativeSrc":"10807:48:31","nodeType":"YulFunctionCall","src":"10807:48:31"},"nativeSrc":"10807:48:31","nodeType":"YulExpressionStatement","src":"10807:48:31"},{"nativeSrc":"10864:86:31","nodeType":"YulAssignment","src":"10864:86:31","value":{"arguments":[{"name":"value2","nativeSrc":"10936:6:31","nodeType":"YulIdentifier","src":"10936:6:31"},{"name":"tail","nativeSrc":"10945:4:31","nodeType":"YulIdentifier","src":"10945:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"10872:63:31","nodeType":"YulIdentifier","src":"10872:63:31"},"nativeSrc":"10872:78:31","nodeType":"YulFunctionCall","src":"10872:78:31"},"variableNames":[{"name":"tail","nativeSrc":"10864:4:31","nodeType":"YulIdentifier","src":"10864:4:31"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"11004:6:31","nodeType":"YulIdentifier","src":"11004:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"11017:9:31","nodeType":"YulIdentifier","src":"11017:9:31"},{"kind":"number","nativeSrc":"11028:2:31","nodeType":"YulLiteral","src":"11028:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11013:3:31","nodeType":"YulIdentifier","src":"11013:3:31"},"nativeSrc":"11013:18:31","nodeType":"YulFunctionCall","src":"11013:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10960:43:31","nodeType":"YulIdentifier","src":"10960:43:31"},"nativeSrc":"10960:72:31","nodeType":"YulFunctionCall","src":"10960:72:31"},"nativeSrc":"10960:72:31","nodeType":"YulExpressionStatement","src":"10960:72:31"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"11086:6:31","nodeType":"YulIdentifier","src":"11086:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"11099:9:31","nodeType":"YulIdentifier","src":"11099:9:31"},{"kind":"number","nativeSrc":"11110:3:31","nodeType":"YulLiteral","src":"11110:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"11095:3:31","nodeType":"YulIdentifier","src":"11095:3:31"},"nativeSrc":"11095:19:31","nodeType":"YulFunctionCall","src":"11095:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11042:43:31","nodeType":"YulIdentifier","src":"11042:43:31"},"nativeSrc":"11042:73:31","nodeType":"YulFunctionCall","src":"11042:73:31"},"nativeSrc":"11042:73:31","nodeType":"YulExpressionStatement","src":"11042:73:31"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"11169:6:31","nodeType":"YulIdentifier","src":"11169:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"11182:9:31","nodeType":"YulIdentifier","src":"11182:9:31"},{"kind":"number","nativeSrc":"11193:3:31","nodeType":"YulLiteral","src":"11193:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"11178:3:31","nodeType":"YulIdentifier","src":"11178:3:31"},"nativeSrc":"11178:19:31","nodeType":"YulFunctionCall","src":"11178:19:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"11125:43:31","nodeType":"YulIdentifier","src":"11125:43:31"},"nativeSrc":"11125:73:31","nodeType":"YulFunctionCall","src":"11125:73:31"},"nativeSrc":"11125:73:31","nodeType":"YulExpressionStatement","src":"11125:73:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11219:9:31","nodeType":"YulIdentifier","src":"11219:9:31"},{"kind":"number","nativeSrc":"11230:3:31","nodeType":"YulLiteral","src":"11230:3:31","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"11215:3:31","nodeType":"YulIdentifier","src":"11215:3:31"},"nativeSrc":"11215:19:31","nodeType":"YulFunctionCall","src":"11215:19:31"},{"arguments":[{"name":"tail","nativeSrc":"11240:4:31","nodeType":"YulIdentifier","src":"11240:4:31"},{"name":"headStart","nativeSrc":"11246:9:31","nodeType":"YulIdentifier","src":"11246:9:31"}],"functionName":{"name":"sub","nativeSrc":"11236:3:31","nodeType":"YulIdentifier","src":"11236:3:31"},"nativeSrc":"11236:20:31","nodeType":"YulFunctionCall","src":"11236:20:31"}],"functionName":{"name":"mstore","nativeSrc":"11208:6:31","nodeType":"YulIdentifier","src":"11208:6:31"},"nativeSrc":"11208:49:31","nodeType":"YulFunctionCall","src":"11208:49:31"},"nativeSrc":"11208:49:31","nodeType":"YulExpressionStatement","src":"11208:49:31"},{"nativeSrc":"11266:116:31","nodeType":"YulAssignment","src":"11266:116:31","value":{"arguments":[{"name":"value6","nativeSrc":"11368:6:31","nodeType":"YulIdentifier","src":"11368:6:31"},{"name":"tail","nativeSrc":"11377:4:31","nodeType":"YulIdentifier","src":"11377:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"11274:93:31","nodeType":"YulIdentifier","src":"11274:93:31"},"nativeSrc":"11274:108:31","nodeType":"YulFunctionCall","src":"11274:108:31"},"variableNames":[{"name":"tail","nativeSrc":"11266:4:31","nodeType":"YulIdentifier","src":"11266:4:31"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"10174:1215:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10452:9:31","nodeType":"YulTypedName","src":"10452:9:31","type":""},{"name":"value6","nativeSrc":"10464:6:31","nodeType":"YulTypedName","src":"10464:6:31","type":""},{"name":"value5","nativeSrc":"10472:6:31","nodeType":"YulTypedName","src":"10472:6:31","type":""},{"name":"value4","nativeSrc":"10480:6:31","nodeType":"YulTypedName","src":"10480:6:31","type":""},{"name":"value3","nativeSrc":"10488:6:31","nodeType":"YulTypedName","src":"10488:6:31","type":""},{"name":"value2","nativeSrc":"10496:6:31","nodeType":"YulTypedName","src":"10496:6:31","type":""},{"name":"value1","nativeSrc":"10504:6:31","nodeType":"YulTypedName","src":"10504:6:31","type":""},{"name":"value0","nativeSrc":"10512:6:31","nodeType":"YulTypedName","src":"10512:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10523:4:31","nodeType":"YulTypedName","src":"10523:4:31","type":""}],"src":"10174:1215:31"},{"body":{"nativeSrc":"11461:263:31","nodeType":"YulBlock","src":"11461:263:31","statements":[{"body":{"nativeSrc":"11507:83:31","nodeType":"YulBlock","src":"11507:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11509:77:31","nodeType":"YulIdentifier","src":"11509:77:31"},"nativeSrc":"11509:79:31","nodeType":"YulFunctionCall","src":"11509:79:31"},"nativeSrc":"11509:79:31","nodeType":"YulExpressionStatement","src":"11509:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11482:7:31","nodeType":"YulIdentifier","src":"11482:7:31"},{"name":"headStart","nativeSrc":"11491:9:31","nodeType":"YulIdentifier","src":"11491:9:31"}],"functionName":{"name":"sub","nativeSrc":"11478:3:31","nodeType":"YulIdentifier","src":"11478:3:31"},"nativeSrc":"11478:23:31","nodeType":"YulFunctionCall","src":"11478:23:31"},{"kind":"number","nativeSrc":"11503:2:31","nodeType":"YulLiteral","src":"11503:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11474:3:31","nodeType":"YulIdentifier","src":"11474:3:31"},"nativeSrc":"11474:32:31","nodeType":"YulFunctionCall","src":"11474:32:31"},"nativeSrc":"11471:119:31","nodeType":"YulIf","src":"11471:119:31"},{"nativeSrc":"11600:117:31","nodeType":"YulBlock","src":"11600:117:31","statements":[{"nativeSrc":"11615:15:31","nodeType":"YulVariableDeclaration","src":"11615:15:31","value":{"kind":"number","nativeSrc":"11629:1:31","nodeType":"YulLiteral","src":"11629:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11619:6:31","nodeType":"YulTypedName","src":"11619:6:31","type":""}]},{"nativeSrc":"11644:63:31","nodeType":"YulAssignment","src":"11644:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11679:9:31","nodeType":"YulIdentifier","src":"11679:9:31"},{"name":"offset","nativeSrc":"11690:6:31","nodeType":"YulIdentifier","src":"11690:6:31"}],"functionName":{"name":"add","nativeSrc":"11675:3:31","nodeType":"YulIdentifier","src":"11675:3:31"},"nativeSrc":"11675:22:31","nodeType":"YulFunctionCall","src":"11675:22:31"},{"name":"dataEnd","nativeSrc":"11699:7:31","nodeType":"YulIdentifier","src":"11699:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11654:20:31","nodeType":"YulIdentifier","src":"11654:20:31"},"nativeSrc":"11654:53:31","nodeType":"YulFunctionCall","src":"11654:53:31"},"variableNames":[{"name":"value0","nativeSrc":"11644:6:31","nodeType":"YulIdentifier","src":"11644:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"11395:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11431:9:31","nodeType":"YulTypedName","src":"11431:9:31","type":""},{"name":"dataEnd","nativeSrc":"11442:7:31","nodeType":"YulTypedName","src":"11442:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11454:6:31","nodeType":"YulTypedName","src":"11454:6:31","type":""}],"src":"11395:329:31"},{"body":{"nativeSrc":"11774:53:31","nodeType":"YulBlock","src":"11774:53:31","statements":[{"nativeSrc":"11784:37:31","nodeType":"YulAssignment","src":"11784:37:31","value":{"arguments":[{"name":"value","nativeSrc":"11799:5:31","nodeType":"YulIdentifier","src":"11799:5:31"},{"kind":"number","nativeSrc":"11806:14:31","nodeType":"YulLiteral","src":"11806:14:31","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11795:3:31","nodeType":"YulIdentifier","src":"11795:3:31"},"nativeSrc":"11795:26:31","nodeType":"YulFunctionCall","src":"11795:26:31"},"variableNames":[{"name":"cleaned","nativeSrc":"11784:7:31","nodeType":"YulIdentifier","src":"11784:7:31"}]}]},"name":"cleanup_t_uint48","nativeSrc":"11730:97:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11756:5:31","nodeType":"YulTypedName","src":"11756:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11766:7:31","nodeType":"YulTypedName","src":"11766:7:31","type":""}],"src":"11730:97:31"},{"body":{"nativeSrc":"11896:52:31","nodeType":"YulBlock","src":"11896:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11913:3:31","nodeType":"YulIdentifier","src":"11913:3:31"},{"arguments":[{"name":"value","nativeSrc":"11935:5:31","nodeType":"YulIdentifier","src":"11935:5:31"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"11918:16:31","nodeType":"YulIdentifier","src":"11918:16:31"},"nativeSrc":"11918:23:31","nodeType":"YulFunctionCall","src":"11918:23:31"}],"functionName":{"name":"mstore","nativeSrc":"11906:6:31","nodeType":"YulIdentifier","src":"11906:6:31"},"nativeSrc":"11906:36:31","nodeType":"YulFunctionCall","src":"11906:36:31"},"nativeSrc":"11906:36:31","nodeType":"YulExpressionStatement","src":"11906:36:31"}]},"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"11833:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11884:5:31","nodeType":"YulTypedName","src":"11884:5:31","type":""},{"name":"pos","nativeSrc":"11891:3:31","nodeType":"YulTypedName","src":"11891:3:31","type":""}],"src":"11833:115:31"},{"body":{"nativeSrc":"12050:122:31","nodeType":"YulBlock","src":"12050:122:31","statements":[{"nativeSrc":"12060:26:31","nodeType":"YulAssignment","src":"12060:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"12072:9:31","nodeType":"YulIdentifier","src":"12072:9:31"},{"kind":"number","nativeSrc":"12083:2:31","nodeType":"YulLiteral","src":"12083:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12068:3:31","nodeType":"YulIdentifier","src":"12068:3:31"},"nativeSrc":"12068:18:31","nodeType":"YulFunctionCall","src":"12068:18:31"},"variableNames":[{"name":"tail","nativeSrc":"12060:4:31","nodeType":"YulIdentifier","src":"12060:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12138:6:31","nodeType":"YulIdentifier","src":"12138:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"12151:9:31","nodeType":"YulIdentifier","src":"12151:9:31"},{"kind":"number","nativeSrc":"12162:1:31","nodeType":"YulLiteral","src":"12162:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12147:3:31","nodeType":"YulIdentifier","src":"12147:3:31"},"nativeSrc":"12147:17:31","nodeType":"YulFunctionCall","src":"12147:17:31"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"12096:41:31","nodeType":"YulIdentifier","src":"12096:41:31"},"nativeSrc":"12096:69:31","nodeType":"YulFunctionCall","src":"12096:69:31"},"nativeSrc":"12096:69:31","nodeType":"YulExpressionStatement","src":"12096:69:31"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nativeSrc":"11954:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12022:9:31","nodeType":"YulTypedName","src":"12022:9:31","type":""},{"name":"value0","nativeSrc":"12034:6:31","nodeType":"YulTypedName","src":"12034:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12045:4:31","nodeType":"YulTypedName","src":"12045:4:31","type":""}],"src":"11954:218:31"},{"body":{"nativeSrc":"12219:77:31","nodeType":"YulBlock","src":"12219:77:31","statements":[{"body":{"nativeSrc":"12274:16:31","nodeType":"YulBlock","src":"12274:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12283:1:31","nodeType":"YulLiteral","src":"12283:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"12286:1:31","nodeType":"YulLiteral","src":"12286:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12276:6:31","nodeType":"YulIdentifier","src":"12276:6:31"},"nativeSrc":"12276:12:31","nodeType":"YulFunctionCall","src":"12276:12:31"},"nativeSrc":"12276:12:31","nodeType":"YulExpressionStatement","src":"12276:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12242:5:31","nodeType":"YulIdentifier","src":"12242:5:31"},{"arguments":[{"name":"value","nativeSrc":"12265:5:31","nodeType":"YulIdentifier","src":"12265:5:31"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"12249:15:31","nodeType":"YulIdentifier","src":"12249:15:31"},"nativeSrc":"12249:22:31","nodeType":"YulFunctionCall","src":"12249:22:31"}],"functionName":{"name":"eq","nativeSrc":"12239:2:31","nodeType":"YulIdentifier","src":"12239:2:31"},"nativeSrc":"12239:33:31","nodeType":"YulFunctionCall","src":"12239:33:31"}],"functionName":{"name":"iszero","nativeSrc":"12232:6:31","nodeType":"YulIdentifier","src":"12232:6:31"},"nativeSrc":"12232:41:31","nodeType":"YulFunctionCall","src":"12232:41:31"},"nativeSrc":"12229:61:31","nodeType":"YulIf","src":"12229:61:31"}]},"name":"validator_revert_t_uint8","nativeSrc":"12178:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12212:5:31","nodeType":"YulTypedName","src":"12212:5:31","type":""}],"src":"12178:118:31"},{"body":{"nativeSrc":"12352:85:31","nodeType":"YulBlock","src":"12352:85:31","statements":[{"nativeSrc":"12362:29:31","nodeType":"YulAssignment","src":"12362:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"12384:6:31","nodeType":"YulIdentifier","src":"12384:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"12371:12:31","nodeType":"YulIdentifier","src":"12371:12:31"},"nativeSrc":"12371:20:31","nodeType":"YulFunctionCall","src":"12371:20:31"},"variableNames":[{"name":"value","nativeSrc":"12362:5:31","nodeType":"YulIdentifier","src":"12362:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"12425:5:31","nodeType":"YulIdentifier","src":"12425:5:31"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"12400:24:31","nodeType":"YulIdentifier","src":"12400:24:31"},"nativeSrc":"12400:31:31","nodeType":"YulFunctionCall","src":"12400:31:31"},"nativeSrc":"12400:31:31","nodeType":"YulExpressionStatement","src":"12400:31:31"}]},"name":"abi_decode_t_uint8","nativeSrc":"12302:135:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"12330:6:31","nodeType":"YulTypedName","src":"12330:6:31","type":""},{"name":"end","nativeSrc":"12338:3:31","nodeType":"YulTypedName","src":"12338:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"12346:5:31","nodeType":"YulTypedName","src":"12346:5:31","type":""}],"src":"12302:135:31"},{"body":{"nativeSrc":"12592:904:31","nodeType":"YulBlock","src":"12592:904:31","statements":[{"body":{"nativeSrc":"12639:83:31","nodeType":"YulBlock","src":"12639:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12641:77:31","nodeType":"YulIdentifier","src":"12641:77:31"},"nativeSrc":"12641:79:31","nodeType":"YulFunctionCall","src":"12641:79:31"},"nativeSrc":"12641:79:31","nodeType":"YulExpressionStatement","src":"12641:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12613:7:31","nodeType":"YulIdentifier","src":"12613:7:31"},{"name":"headStart","nativeSrc":"12622:9:31","nodeType":"YulIdentifier","src":"12622:9:31"}],"functionName":{"name":"sub","nativeSrc":"12609:3:31","nodeType":"YulIdentifier","src":"12609:3:31"},"nativeSrc":"12609:23:31","nodeType":"YulFunctionCall","src":"12609:23:31"},{"kind":"number","nativeSrc":"12634:3:31","nodeType":"YulLiteral","src":"12634:3:31","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"12605:3:31","nodeType":"YulIdentifier","src":"12605:3:31"},"nativeSrc":"12605:33:31","nodeType":"YulFunctionCall","src":"12605:33:31"},"nativeSrc":"12602:120:31","nodeType":"YulIf","src":"12602:120:31"},{"nativeSrc":"12732:117:31","nodeType":"YulBlock","src":"12732:117:31","statements":[{"nativeSrc":"12747:15:31","nodeType":"YulVariableDeclaration","src":"12747:15:31","value":{"kind":"number","nativeSrc":"12761:1:31","nodeType":"YulLiteral","src":"12761:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12751:6:31","nodeType":"YulTypedName","src":"12751:6:31","type":""}]},{"nativeSrc":"12776:63:31","nodeType":"YulAssignment","src":"12776:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12811:9:31","nodeType":"YulIdentifier","src":"12811:9:31"},{"name":"offset","nativeSrc":"12822:6:31","nodeType":"YulIdentifier","src":"12822:6:31"}],"functionName":{"name":"add","nativeSrc":"12807:3:31","nodeType":"YulIdentifier","src":"12807:3:31"},"nativeSrc":"12807:22:31","nodeType":"YulFunctionCall","src":"12807:22:31"},{"name":"dataEnd","nativeSrc":"12831:7:31","nodeType":"YulIdentifier","src":"12831:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12786:20:31","nodeType":"YulIdentifier","src":"12786:20:31"},"nativeSrc":"12786:53:31","nodeType":"YulFunctionCall","src":"12786:53:31"},"variableNames":[{"name":"value0","nativeSrc":"12776:6:31","nodeType":"YulIdentifier","src":"12776:6:31"}]}]},{"nativeSrc":"12859:118:31","nodeType":"YulBlock","src":"12859:118:31","statements":[{"nativeSrc":"12874:16:31","nodeType":"YulVariableDeclaration","src":"12874:16:31","value":{"kind":"number","nativeSrc":"12888:2:31","nodeType":"YulLiteral","src":"12888:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12878:6:31","nodeType":"YulTypedName","src":"12878:6:31","type":""}]},{"nativeSrc":"12904:63:31","nodeType":"YulAssignment","src":"12904:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12939:9:31","nodeType":"YulIdentifier","src":"12939:9:31"},{"name":"offset","nativeSrc":"12950:6:31","nodeType":"YulIdentifier","src":"12950:6:31"}],"functionName":{"name":"add","nativeSrc":"12935:3:31","nodeType":"YulIdentifier","src":"12935:3:31"},"nativeSrc":"12935:22:31","nodeType":"YulFunctionCall","src":"12935:22:31"},{"name":"dataEnd","nativeSrc":"12959:7:31","nodeType":"YulIdentifier","src":"12959:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"12914:20:31","nodeType":"YulIdentifier","src":"12914:20:31"},"nativeSrc":"12914:53:31","nodeType":"YulFunctionCall","src":"12914:53:31"},"variableNames":[{"name":"value1","nativeSrc":"12904:6:31","nodeType":"YulIdentifier","src":"12904:6:31"}]}]},{"nativeSrc":"12987:118:31","nodeType":"YulBlock","src":"12987:118:31","statements":[{"nativeSrc":"13002:16:31","nodeType":"YulVariableDeclaration","src":"13002:16:31","value":{"kind":"number","nativeSrc":"13016:2:31","nodeType":"YulLiteral","src":"13016:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"13006:6:31","nodeType":"YulTypedName","src":"13006:6:31","type":""}]},{"nativeSrc":"13032:63:31","nodeType":"YulAssignment","src":"13032:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13067:9:31","nodeType":"YulIdentifier","src":"13067:9:31"},{"name":"offset","nativeSrc":"13078:6:31","nodeType":"YulIdentifier","src":"13078:6:31"}],"functionName":{"name":"add","nativeSrc":"13063:3:31","nodeType":"YulIdentifier","src":"13063:3:31"},"nativeSrc":"13063:22:31","nodeType":"YulFunctionCall","src":"13063:22:31"},{"name":"dataEnd","nativeSrc":"13087:7:31","nodeType":"YulIdentifier","src":"13087:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"13042:20:31","nodeType":"YulIdentifier","src":"13042:20:31"},"nativeSrc":"13042:53:31","nodeType":"YulFunctionCall","src":"13042:53:31"},"variableNames":[{"name":"value2","nativeSrc":"13032:6:31","nodeType":"YulIdentifier","src":"13032:6:31"}]}]},{"nativeSrc":"13115:116:31","nodeType":"YulBlock","src":"13115:116:31","statements":[{"nativeSrc":"13130:16:31","nodeType":"YulVariableDeclaration","src":"13130:16:31","value":{"kind":"number","nativeSrc":"13144:2:31","nodeType":"YulLiteral","src":"13144:2:31","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"13134:6:31","nodeType":"YulTypedName","src":"13134:6:31","type":""}]},{"nativeSrc":"13160:61:31","nodeType":"YulAssignment","src":"13160:61:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13193:9:31","nodeType":"YulIdentifier","src":"13193:9:31"},{"name":"offset","nativeSrc":"13204:6:31","nodeType":"YulIdentifier","src":"13204:6:31"}],"functionName":{"name":"add","nativeSrc":"13189:3:31","nodeType":"YulIdentifier","src":"13189:3:31"},"nativeSrc":"13189:22:31","nodeType":"YulFunctionCall","src":"13189:22:31"},{"name":"dataEnd","nativeSrc":"13213:7:31","nodeType":"YulIdentifier","src":"13213:7:31"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"13170:18:31","nodeType":"YulIdentifier","src":"13170:18:31"},"nativeSrc":"13170:51:31","nodeType":"YulFunctionCall","src":"13170:51:31"},"variableNames":[{"name":"value3","nativeSrc":"13160:6:31","nodeType":"YulIdentifier","src":"13160:6:31"}]}]},{"nativeSrc":"13241:119:31","nodeType":"YulBlock","src":"13241:119:31","statements":[{"nativeSrc":"13256:17:31","nodeType":"YulVariableDeclaration","src":"13256:17:31","value":{"kind":"number","nativeSrc":"13270:3:31","nodeType":"YulLiteral","src":"13270:3:31","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"13260:6:31","nodeType":"YulTypedName","src":"13260:6:31","type":""}]},{"nativeSrc":"13287:63:31","nodeType":"YulAssignment","src":"13287:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13322:9:31","nodeType":"YulIdentifier","src":"13322:9:31"},{"name":"offset","nativeSrc":"13333:6:31","nodeType":"YulIdentifier","src":"13333:6:31"}],"functionName":{"name":"add","nativeSrc":"13318:3:31","nodeType":"YulIdentifier","src":"13318:3:31"},"nativeSrc":"13318:22:31","nodeType":"YulFunctionCall","src":"13318:22:31"},{"name":"dataEnd","nativeSrc":"13342:7:31","nodeType":"YulIdentifier","src":"13342:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13297:20:31","nodeType":"YulIdentifier","src":"13297:20:31"},"nativeSrc":"13297:53:31","nodeType":"YulFunctionCall","src":"13297:53:31"},"variableNames":[{"name":"value4","nativeSrc":"13287:6:31","nodeType":"YulIdentifier","src":"13287:6:31"}]}]},{"nativeSrc":"13370:119:31","nodeType":"YulBlock","src":"13370:119:31","statements":[{"nativeSrc":"13385:17:31","nodeType":"YulVariableDeclaration","src":"13385:17:31","value":{"kind":"number","nativeSrc":"13399:3:31","nodeType":"YulLiteral","src":"13399:3:31","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"13389:6:31","nodeType":"YulTypedName","src":"13389:6:31","type":""}]},{"nativeSrc":"13416:63:31","nodeType":"YulAssignment","src":"13416:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13451:9:31","nodeType":"YulIdentifier","src":"13451:9:31"},{"name":"offset","nativeSrc":"13462:6:31","nodeType":"YulIdentifier","src":"13462:6:31"}],"functionName":{"name":"add","nativeSrc":"13447:3:31","nodeType":"YulIdentifier","src":"13447:3:31"},"nativeSrc":"13447:22:31","nodeType":"YulFunctionCall","src":"13447:22:31"},{"name":"dataEnd","nativeSrc":"13471:7:31","nodeType":"YulIdentifier","src":"13471:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"13426:20:31","nodeType":"YulIdentifier","src":"13426:20:31"},"nativeSrc":"13426:53:31","nodeType":"YulFunctionCall","src":"13426:53:31"},"variableNames":[{"name":"value5","nativeSrc":"13416:6:31","nodeType":"YulIdentifier","src":"13416:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"12443:1053:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12522:9:31","nodeType":"YulTypedName","src":"12522:9:31","type":""},{"name":"dataEnd","nativeSrc":"12533:7:31","nodeType":"YulTypedName","src":"12533:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12545:6:31","nodeType":"YulTypedName","src":"12545:6:31","type":""},{"name":"value1","nativeSrc":"12553:6:31","nodeType":"YulTypedName","src":"12553:6:31","type":""},{"name":"value2","nativeSrc":"12561:6:31","nodeType":"YulTypedName","src":"12561:6:31","type":""},{"name":"value3","nativeSrc":"12569:6:31","nodeType":"YulTypedName","src":"12569:6:31","type":""},{"name":"value4","nativeSrc":"12577:6:31","nodeType":"YulTypedName","src":"12577:6:31","type":""},{"name":"value5","nativeSrc":"12585:6:31","nodeType":"YulTypedName","src":"12585:6:31","type":""}],"src":"12443:1053:31"},{"body":{"nativeSrc":"13668:1033:31","nodeType":"YulBlock","src":"13668:1033:31","statements":[{"body":{"nativeSrc":"13715:83:31","nodeType":"YulBlock","src":"13715:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13717:77:31","nodeType":"YulIdentifier","src":"13717:77:31"},"nativeSrc":"13717:79:31","nodeType":"YulFunctionCall","src":"13717:79:31"},"nativeSrc":"13717:79:31","nodeType":"YulExpressionStatement","src":"13717:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13689:7:31","nodeType":"YulIdentifier","src":"13689:7:31"},{"name":"headStart","nativeSrc":"13698:9:31","nodeType":"YulIdentifier","src":"13698:9:31"}],"functionName":{"name":"sub","nativeSrc":"13685:3:31","nodeType":"YulIdentifier","src":"13685:3:31"},"nativeSrc":"13685:23:31","nodeType":"YulFunctionCall","src":"13685:23:31"},{"kind":"number","nativeSrc":"13710:3:31","nodeType":"YulLiteral","src":"13710:3:31","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"13681:3:31","nodeType":"YulIdentifier","src":"13681:3:31"},"nativeSrc":"13681:33:31","nodeType":"YulFunctionCall","src":"13681:33:31"},"nativeSrc":"13678:120:31","nodeType":"YulIf","src":"13678:120:31"},{"nativeSrc":"13808:117:31","nodeType":"YulBlock","src":"13808:117:31","statements":[{"nativeSrc":"13823:15:31","nodeType":"YulVariableDeclaration","src":"13823:15:31","value":{"kind":"number","nativeSrc":"13837:1:31","nodeType":"YulLiteral","src":"13837:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13827:6:31","nodeType":"YulTypedName","src":"13827:6:31","type":""}]},{"nativeSrc":"13852:63:31","nodeType":"YulAssignment","src":"13852:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13887:9:31","nodeType":"YulIdentifier","src":"13887:9:31"},{"name":"offset","nativeSrc":"13898:6:31","nodeType":"YulIdentifier","src":"13898:6:31"}],"functionName":{"name":"add","nativeSrc":"13883:3:31","nodeType":"YulIdentifier","src":"13883:3:31"},"nativeSrc":"13883:22:31","nodeType":"YulFunctionCall","src":"13883:22:31"},{"name":"dataEnd","nativeSrc":"13907:7:31","nodeType":"YulIdentifier","src":"13907:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13862:20:31","nodeType":"YulIdentifier","src":"13862:20:31"},"nativeSrc":"13862:53:31","nodeType":"YulFunctionCall","src":"13862:53:31"},"variableNames":[{"name":"value0","nativeSrc":"13852:6:31","nodeType":"YulIdentifier","src":"13852:6:31"}]}]},{"nativeSrc":"13935:118:31","nodeType":"YulBlock","src":"13935:118:31","statements":[{"nativeSrc":"13950:16:31","nodeType":"YulVariableDeclaration","src":"13950:16:31","value":{"kind":"number","nativeSrc":"13964:2:31","nodeType":"YulLiteral","src":"13964:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13954:6:31","nodeType":"YulTypedName","src":"13954:6:31","type":""}]},{"nativeSrc":"13980:63:31","nodeType":"YulAssignment","src":"13980:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14015:9:31","nodeType":"YulIdentifier","src":"14015:9:31"},{"name":"offset","nativeSrc":"14026:6:31","nodeType":"YulIdentifier","src":"14026:6:31"}],"functionName":{"name":"add","nativeSrc":"14011:3:31","nodeType":"YulIdentifier","src":"14011:3:31"},"nativeSrc":"14011:22:31","nodeType":"YulFunctionCall","src":"14011:22:31"},{"name":"dataEnd","nativeSrc":"14035:7:31","nodeType":"YulIdentifier","src":"14035:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"13990:20:31","nodeType":"YulIdentifier","src":"13990:20:31"},"nativeSrc":"13990:53:31","nodeType":"YulFunctionCall","src":"13990:53:31"},"variableNames":[{"name":"value1","nativeSrc":"13980:6:31","nodeType":"YulIdentifier","src":"13980:6:31"}]}]},{"nativeSrc":"14063:118:31","nodeType":"YulBlock","src":"14063:118:31","statements":[{"nativeSrc":"14078:16:31","nodeType":"YulVariableDeclaration","src":"14078:16:31","value":{"kind":"number","nativeSrc":"14092:2:31","nodeType":"YulLiteral","src":"14092:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"14082:6:31","nodeType":"YulTypedName","src":"14082:6:31","type":""}]},{"nativeSrc":"14108:63:31","nodeType":"YulAssignment","src":"14108:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14143:9:31","nodeType":"YulIdentifier","src":"14143:9:31"},{"name":"offset","nativeSrc":"14154:6:31","nodeType":"YulIdentifier","src":"14154:6:31"}],"functionName":{"name":"add","nativeSrc":"14139:3:31","nodeType":"YulIdentifier","src":"14139:3:31"},"nativeSrc":"14139:22:31","nodeType":"YulFunctionCall","src":"14139:22:31"},{"name":"dataEnd","nativeSrc":"14163:7:31","nodeType":"YulIdentifier","src":"14163:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14118:20:31","nodeType":"YulIdentifier","src":"14118:20:31"},"nativeSrc":"14118:53:31","nodeType":"YulFunctionCall","src":"14118:53:31"},"variableNames":[{"name":"value2","nativeSrc":"14108:6:31","nodeType":"YulIdentifier","src":"14108:6:31"}]}]},{"nativeSrc":"14191:118:31","nodeType":"YulBlock","src":"14191:118:31","statements":[{"nativeSrc":"14206:16:31","nodeType":"YulVariableDeclaration","src":"14206:16:31","value":{"kind":"number","nativeSrc":"14220:2:31","nodeType":"YulLiteral","src":"14220:2:31","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"14210:6:31","nodeType":"YulTypedName","src":"14210:6:31","type":""}]},{"nativeSrc":"14236:63:31","nodeType":"YulAssignment","src":"14236:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14271:9:31","nodeType":"YulIdentifier","src":"14271:9:31"},{"name":"offset","nativeSrc":"14282:6:31","nodeType":"YulIdentifier","src":"14282:6:31"}],"functionName":{"name":"add","nativeSrc":"14267:3:31","nodeType":"YulIdentifier","src":"14267:3:31"},"nativeSrc":"14267:22:31","nodeType":"YulFunctionCall","src":"14267:22:31"},{"name":"dataEnd","nativeSrc":"14291:7:31","nodeType":"YulIdentifier","src":"14291:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14246:20:31","nodeType":"YulIdentifier","src":"14246:20:31"},"nativeSrc":"14246:53:31","nodeType":"YulFunctionCall","src":"14246:53:31"},"variableNames":[{"name":"value3","nativeSrc":"14236:6:31","nodeType":"YulIdentifier","src":"14236:6:31"}]}]},{"nativeSrc":"14319:117:31","nodeType":"YulBlock","src":"14319:117:31","statements":[{"nativeSrc":"14334:17:31","nodeType":"YulVariableDeclaration","src":"14334:17:31","value":{"kind":"number","nativeSrc":"14348:3:31","nodeType":"YulLiteral","src":"14348:3:31","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"14338:6:31","nodeType":"YulTypedName","src":"14338:6:31","type":""}]},{"nativeSrc":"14365:61:31","nodeType":"YulAssignment","src":"14365:61:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14398:9:31","nodeType":"YulIdentifier","src":"14398:9:31"},{"name":"offset","nativeSrc":"14409:6:31","nodeType":"YulIdentifier","src":"14409:6:31"}],"functionName":{"name":"add","nativeSrc":"14394:3:31","nodeType":"YulIdentifier","src":"14394:3:31"},"nativeSrc":"14394:22:31","nodeType":"YulFunctionCall","src":"14394:22:31"},{"name":"dataEnd","nativeSrc":"14418:7:31","nodeType":"YulIdentifier","src":"14418:7:31"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"14375:18:31","nodeType":"YulIdentifier","src":"14375:18:31"},"nativeSrc":"14375:51:31","nodeType":"YulFunctionCall","src":"14375:51:31"},"variableNames":[{"name":"value4","nativeSrc":"14365:6:31","nodeType":"YulIdentifier","src":"14365:6:31"}]}]},{"nativeSrc":"14446:119:31","nodeType":"YulBlock","src":"14446:119:31","statements":[{"nativeSrc":"14461:17:31","nodeType":"YulVariableDeclaration","src":"14461:17:31","value":{"kind":"number","nativeSrc":"14475:3:31","nodeType":"YulLiteral","src":"14475:3:31","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"14465:6:31","nodeType":"YulTypedName","src":"14465:6:31","type":""}]},{"nativeSrc":"14492:63:31","nodeType":"YulAssignment","src":"14492:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14527:9:31","nodeType":"YulIdentifier","src":"14527:9:31"},{"name":"offset","nativeSrc":"14538:6:31","nodeType":"YulIdentifier","src":"14538:6:31"}],"functionName":{"name":"add","nativeSrc":"14523:3:31","nodeType":"YulIdentifier","src":"14523:3:31"},"nativeSrc":"14523:22:31","nodeType":"YulFunctionCall","src":"14523:22:31"},{"name":"dataEnd","nativeSrc":"14547:7:31","nodeType":"YulIdentifier","src":"14547:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14502:20:31","nodeType":"YulIdentifier","src":"14502:20:31"},"nativeSrc":"14502:53:31","nodeType":"YulFunctionCall","src":"14502:53:31"},"variableNames":[{"name":"value5","nativeSrc":"14492:6:31","nodeType":"YulIdentifier","src":"14492:6:31"}]}]},{"nativeSrc":"14575:119:31","nodeType":"YulBlock","src":"14575:119:31","statements":[{"nativeSrc":"14590:17:31","nodeType":"YulVariableDeclaration","src":"14590:17:31","value":{"kind":"number","nativeSrc":"14604:3:31","nodeType":"YulLiteral","src":"14604:3:31","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"14594:6:31","nodeType":"YulTypedName","src":"14594:6:31","type":""}]},{"nativeSrc":"14621:63:31","nodeType":"YulAssignment","src":"14621:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14656:9:31","nodeType":"YulIdentifier","src":"14656:9:31"},{"name":"offset","nativeSrc":"14667:6:31","nodeType":"YulIdentifier","src":"14667:6:31"}],"functionName":{"name":"add","nativeSrc":"14652:3:31","nodeType":"YulIdentifier","src":"14652:3:31"},"nativeSrc":"14652:22:31","nodeType":"YulFunctionCall","src":"14652:22:31"},{"name":"dataEnd","nativeSrc":"14676:7:31","nodeType":"YulIdentifier","src":"14676:7:31"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"14631:20:31","nodeType":"YulIdentifier","src":"14631:20:31"},"nativeSrc":"14631:53:31","nodeType":"YulFunctionCall","src":"14631:53:31"},"variableNames":[{"name":"value6","nativeSrc":"14621:6:31","nodeType":"YulIdentifier","src":"14621:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"13502:1199:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13590:9:31","nodeType":"YulTypedName","src":"13590:9:31","type":""},{"name":"dataEnd","nativeSrc":"13601:7:31","nodeType":"YulTypedName","src":"13601:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13613:6:31","nodeType":"YulTypedName","src":"13613:6:31","type":""},{"name":"value1","nativeSrc":"13621:6:31","nodeType":"YulTypedName","src":"13621:6:31","type":""},{"name":"value2","nativeSrc":"13629:6:31","nodeType":"YulTypedName","src":"13629:6:31","type":""},{"name":"value3","nativeSrc":"13637:6:31","nodeType":"YulTypedName","src":"13637:6:31","type":""},{"name":"value4","nativeSrc":"13645:6:31","nodeType":"YulTypedName","src":"13645:6:31","type":""},{"name":"value5","nativeSrc":"13653:6:31","nodeType":"YulTypedName","src":"13653:6:31","type":""},{"name":"value6","nativeSrc":"13661:6:31","nodeType":"YulTypedName","src":"13661:6:31","type":""}],"src":"13502:1199:31"},{"body":{"nativeSrc":"14790:391:31","nodeType":"YulBlock","src":"14790:391:31","statements":[{"body":{"nativeSrc":"14836:83:31","nodeType":"YulBlock","src":"14836:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"14838:77:31","nodeType":"YulIdentifier","src":"14838:77:31"},"nativeSrc":"14838:79:31","nodeType":"YulFunctionCall","src":"14838:79:31"},"nativeSrc":"14838:79:31","nodeType":"YulExpressionStatement","src":"14838:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14811:7:31","nodeType":"YulIdentifier","src":"14811:7:31"},{"name":"headStart","nativeSrc":"14820:9:31","nodeType":"YulIdentifier","src":"14820:9:31"}],"functionName":{"name":"sub","nativeSrc":"14807:3:31","nodeType":"YulIdentifier","src":"14807:3:31"},"nativeSrc":"14807:23:31","nodeType":"YulFunctionCall","src":"14807:23:31"},{"kind":"number","nativeSrc":"14832:2:31","nodeType":"YulLiteral","src":"14832:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"14803:3:31","nodeType":"YulIdentifier","src":"14803:3:31"},"nativeSrc":"14803:32:31","nodeType":"YulFunctionCall","src":"14803:32:31"},"nativeSrc":"14800:119:31","nodeType":"YulIf","src":"14800:119:31"},{"nativeSrc":"14929:117:31","nodeType":"YulBlock","src":"14929:117:31","statements":[{"nativeSrc":"14944:15:31","nodeType":"YulVariableDeclaration","src":"14944:15:31","value":{"kind":"number","nativeSrc":"14958:1:31","nodeType":"YulLiteral","src":"14958:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14948:6:31","nodeType":"YulTypedName","src":"14948:6:31","type":""}]},{"nativeSrc":"14973:63:31","nodeType":"YulAssignment","src":"14973:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15008:9:31","nodeType":"YulIdentifier","src":"15008:9:31"},{"name":"offset","nativeSrc":"15019:6:31","nodeType":"YulIdentifier","src":"15019:6:31"}],"functionName":{"name":"add","nativeSrc":"15004:3:31","nodeType":"YulIdentifier","src":"15004:3:31"},"nativeSrc":"15004:22:31","nodeType":"YulFunctionCall","src":"15004:22:31"},{"name":"dataEnd","nativeSrc":"15028:7:31","nodeType":"YulIdentifier","src":"15028:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"14983:20:31","nodeType":"YulIdentifier","src":"14983:20:31"},"nativeSrc":"14983:53:31","nodeType":"YulFunctionCall","src":"14983:53:31"},"variableNames":[{"name":"value0","nativeSrc":"14973:6:31","nodeType":"YulIdentifier","src":"14973:6:31"}]}]},{"nativeSrc":"15056:118:31","nodeType":"YulBlock","src":"15056:118:31","statements":[{"nativeSrc":"15071:16:31","nodeType":"YulVariableDeclaration","src":"15071:16:31","value":{"kind":"number","nativeSrc":"15085:2:31","nodeType":"YulLiteral","src":"15085:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15075:6:31","nodeType":"YulTypedName","src":"15075:6:31","type":""}]},{"nativeSrc":"15101:63:31","nodeType":"YulAssignment","src":"15101:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15136:9:31","nodeType":"YulIdentifier","src":"15136:9:31"},{"name":"offset","nativeSrc":"15147:6:31","nodeType":"YulIdentifier","src":"15147:6:31"}],"functionName":{"name":"add","nativeSrc":"15132:3:31","nodeType":"YulIdentifier","src":"15132:3:31"},"nativeSrc":"15132:22:31","nodeType":"YulFunctionCall","src":"15132:22:31"},{"name":"dataEnd","nativeSrc":"15156:7:31","nodeType":"YulIdentifier","src":"15156:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15111:20:31","nodeType":"YulIdentifier","src":"15111:20:31"},"nativeSrc":"15111:53:31","nodeType":"YulFunctionCall","src":"15111:53:31"},"variableNames":[{"name":"value1","nativeSrc":"15101:6:31","nodeType":"YulIdentifier","src":"15101:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"14707:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14752:9:31","nodeType":"YulTypedName","src":"14752:9:31","type":""},{"name":"dataEnd","nativeSrc":"14763:7:31","nodeType":"YulTypedName","src":"14763:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14775:6:31","nodeType":"YulTypedName","src":"14775:6:31","type":""},{"name":"value1","nativeSrc":"14783:6:31","nodeType":"YulTypedName","src":"14783:6:31","type":""}],"src":"14707:474:31"},{"body":{"nativeSrc":"15229:78:31","nodeType":"YulBlock","src":"15229:78:31","statements":[{"body":{"nativeSrc":"15285:16:31","nodeType":"YulBlock","src":"15285:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15294:1:31","nodeType":"YulLiteral","src":"15294:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"15297:1:31","nodeType":"YulLiteral","src":"15297:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15287:6:31","nodeType":"YulIdentifier","src":"15287:6:31"},"nativeSrc":"15287:12:31","nodeType":"YulFunctionCall","src":"15287:12:31"},"nativeSrc":"15287:12:31","nodeType":"YulExpressionStatement","src":"15287:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15252:5:31","nodeType":"YulIdentifier","src":"15252:5:31"},{"arguments":[{"name":"value","nativeSrc":"15276:5:31","nodeType":"YulIdentifier","src":"15276:5:31"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"15259:16:31","nodeType":"YulIdentifier","src":"15259:16:31"},"nativeSrc":"15259:23:31","nodeType":"YulFunctionCall","src":"15259:23:31"}],"functionName":{"name":"eq","nativeSrc":"15249:2:31","nodeType":"YulIdentifier","src":"15249:2:31"},"nativeSrc":"15249:34:31","nodeType":"YulFunctionCall","src":"15249:34:31"}],"functionName":{"name":"iszero","nativeSrc":"15242:6:31","nodeType":"YulIdentifier","src":"15242:6:31"},"nativeSrc":"15242:42:31","nodeType":"YulFunctionCall","src":"15242:42:31"},"nativeSrc":"15239:62:31","nodeType":"YulIf","src":"15239:62:31"}]},"name":"validator_revert_t_uint32","nativeSrc":"15187:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15222:5:31","nodeType":"YulTypedName","src":"15222:5:31","type":""}],"src":"15187:120:31"},{"body":{"nativeSrc":"15364:86:31","nodeType":"YulBlock","src":"15364:86:31","statements":[{"nativeSrc":"15374:29:31","nodeType":"YulAssignment","src":"15374:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"15396:6:31","nodeType":"YulIdentifier","src":"15396:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"15383:12:31","nodeType":"YulIdentifier","src":"15383:12:31"},"nativeSrc":"15383:20:31","nodeType":"YulFunctionCall","src":"15383:20:31"},"variableNames":[{"name":"value","nativeSrc":"15374:5:31","nodeType":"YulIdentifier","src":"15374:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15438:5:31","nodeType":"YulIdentifier","src":"15438:5:31"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"15412:25:31","nodeType":"YulIdentifier","src":"15412:25:31"},"nativeSrc":"15412:32:31","nodeType":"YulFunctionCall","src":"15412:32:31"},"nativeSrc":"15412:32:31","nodeType":"YulExpressionStatement","src":"15412:32:31"}]},"name":"abi_decode_t_uint32","nativeSrc":"15313:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15342:6:31","nodeType":"YulTypedName","src":"15342:6:31","type":""},{"name":"end","nativeSrc":"15350:3:31","nodeType":"YulTypedName","src":"15350:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15358:5:31","nodeType":"YulTypedName","src":"15358:5:31","type":""}],"src":"15313:137:31"},{"body":{"nativeSrc":"15538:390:31","nodeType":"YulBlock","src":"15538:390:31","statements":[{"body":{"nativeSrc":"15584:83:31","nodeType":"YulBlock","src":"15584:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15586:77:31","nodeType":"YulIdentifier","src":"15586:77:31"},"nativeSrc":"15586:79:31","nodeType":"YulFunctionCall","src":"15586:79:31"},"nativeSrc":"15586:79:31","nodeType":"YulExpressionStatement","src":"15586:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15559:7:31","nodeType":"YulIdentifier","src":"15559:7:31"},{"name":"headStart","nativeSrc":"15568:9:31","nodeType":"YulIdentifier","src":"15568:9:31"}],"functionName":{"name":"sub","nativeSrc":"15555:3:31","nodeType":"YulIdentifier","src":"15555:3:31"},"nativeSrc":"15555:23:31","nodeType":"YulFunctionCall","src":"15555:23:31"},{"kind":"number","nativeSrc":"15580:2:31","nodeType":"YulLiteral","src":"15580:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15551:3:31","nodeType":"YulIdentifier","src":"15551:3:31"},"nativeSrc":"15551:32:31","nodeType":"YulFunctionCall","src":"15551:32:31"},"nativeSrc":"15548:119:31","nodeType":"YulIf","src":"15548:119:31"},{"nativeSrc":"15677:117:31","nodeType":"YulBlock","src":"15677:117:31","statements":[{"nativeSrc":"15692:15:31","nodeType":"YulVariableDeclaration","src":"15692:15:31","value":{"kind":"number","nativeSrc":"15706:1:31","nodeType":"YulLiteral","src":"15706:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15696:6:31","nodeType":"YulTypedName","src":"15696:6:31","type":""}]},{"nativeSrc":"15721:63:31","nodeType":"YulAssignment","src":"15721:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15756:9:31","nodeType":"YulIdentifier","src":"15756:9:31"},{"name":"offset","nativeSrc":"15767:6:31","nodeType":"YulIdentifier","src":"15767:6:31"}],"functionName":{"name":"add","nativeSrc":"15752:3:31","nodeType":"YulIdentifier","src":"15752:3:31"},"nativeSrc":"15752:22:31","nodeType":"YulFunctionCall","src":"15752:22:31"},{"name":"dataEnd","nativeSrc":"15776:7:31","nodeType":"YulIdentifier","src":"15776:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"15731:20:31","nodeType":"YulIdentifier","src":"15731:20:31"},"nativeSrc":"15731:53:31","nodeType":"YulFunctionCall","src":"15731:53:31"},"variableNames":[{"name":"value0","nativeSrc":"15721:6:31","nodeType":"YulIdentifier","src":"15721:6:31"}]}]},{"nativeSrc":"15804:117:31","nodeType":"YulBlock","src":"15804:117:31","statements":[{"nativeSrc":"15819:16:31","nodeType":"YulVariableDeclaration","src":"15819:16:31","value":{"kind":"number","nativeSrc":"15833:2:31","nodeType":"YulLiteral","src":"15833:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15823:6:31","nodeType":"YulTypedName","src":"15823:6:31","type":""}]},{"nativeSrc":"15849:62:31","nodeType":"YulAssignment","src":"15849:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15883:9:31","nodeType":"YulIdentifier","src":"15883:9:31"},{"name":"offset","nativeSrc":"15894:6:31","nodeType":"YulIdentifier","src":"15894:6:31"}],"functionName":{"name":"add","nativeSrc":"15879:3:31","nodeType":"YulIdentifier","src":"15879:3:31"},"nativeSrc":"15879:22:31","nodeType":"YulFunctionCall","src":"15879:22:31"},{"name":"dataEnd","nativeSrc":"15903:7:31","nodeType":"YulIdentifier","src":"15903:7:31"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"15859:19:31","nodeType":"YulIdentifier","src":"15859:19:31"},"nativeSrc":"15859:52:31","nodeType":"YulFunctionCall","src":"15859:52:31"},"variableNames":[{"name":"value1","nativeSrc":"15849:6:31","nodeType":"YulIdentifier","src":"15849:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nativeSrc":"15456:472:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15500:9:31","nodeType":"YulTypedName","src":"15500:9:31","type":""},{"name":"dataEnd","nativeSrc":"15511:7:31","nodeType":"YulTypedName","src":"15511:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15523:6:31","nodeType":"YulTypedName","src":"15523:6:31","type":""},{"name":"value1","nativeSrc":"15531:6:31","nodeType":"YulTypedName","src":"15531:6:31","type":""}],"src":"15456:472:31"},{"body":{"nativeSrc":"15987:52:31","nodeType":"YulBlock","src":"15987:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16004:3:31","nodeType":"YulIdentifier","src":"16004:3:31"},{"arguments":[{"name":"value","nativeSrc":"16026:5:31","nodeType":"YulIdentifier","src":"16026:5:31"}],"functionName":{"name":"cleanup_t_uint48","nativeSrc":"16009:16:31","nodeType":"YulIdentifier","src":"16009:16:31"},"nativeSrc":"16009:23:31","nodeType":"YulFunctionCall","src":"16009:23:31"}],"functionName":{"name":"mstore","nativeSrc":"15997:6:31","nodeType":"YulIdentifier","src":"15997:6:31"},"nativeSrc":"15997:36:31","nodeType":"YulFunctionCall","src":"15997:36:31"},"nativeSrc":"15997:36:31","nodeType":"YulExpressionStatement","src":"15997:36:31"}]},"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"15934:105:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15975:5:31","nodeType":"YulTypedName","src":"15975:5:31","type":""},{"name":"pos","nativeSrc":"15982:3:31","nodeType":"YulTypedName","src":"15982:3:31","type":""}],"src":"15934:105:31"},{"body":{"nativeSrc":"16090:93:31","nodeType":"YulBlock","src":"16090:93:31","statements":[{"nativeSrc":"16100:77:31","nodeType":"YulAssignment","src":"16100:77:31","value":{"arguments":[{"name":"value","nativeSrc":"16115:5:31","nodeType":"YulIdentifier","src":"16115:5:31"},{"kind":"number","nativeSrc":"16122:54:31","nodeType":"YulLiteral","src":"16122:54:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"16111:3:31","nodeType":"YulIdentifier","src":"16111:3:31"},"nativeSrc":"16111:66:31","nodeType":"YulFunctionCall","src":"16111:66:31"},"variableNames":[{"name":"cleaned","nativeSrc":"16100:7:31","nodeType":"YulIdentifier","src":"16100:7:31"}]}]},"name":"cleanup_t_uint208","nativeSrc":"16045:138:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16072:5:31","nodeType":"YulTypedName","src":"16072:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"16082:7:31","nodeType":"YulTypedName","src":"16082:7:31","type":""}],"src":"16045:138:31"},{"body":{"nativeSrc":"16244:53:31","nodeType":"YulBlock","src":"16244:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16261:3:31","nodeType":"YulIdentifier","src":"16261:3:31"},{"arguments":[{"name":"value","nativeSrc":"16284:5:31","nodeType":"YulIdentifier","src":"16284:5:31"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"16266:17:31","nodeType":"YulIdentifier","src":"16266:17:31"},"nativeSrc":"16266:24:31","nodeType":"YulFunctionCall","src":"16266:24:31"}],"functionName":{"name":"mstore","nativeSrc":"16254:6:31","nodeType":"YulIdentifier","src":"16254:6:31"},"nativeSrc":"16254:37:31","nodeType":"YulFunctionCall","src":"16254:37:31"},"nativeSrc":"16254:37:31","nodeType":"YulExpressionStatement","src":"16254:37:31"}]},"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"16189:108:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16232:5:31","nodeType":"YulTypedName","src":"16232:5:31","type":""},{"name":"pos","nativeSrc":"16239:3:31","nodeType":"YulTypedName","src":"16239:3:31","type":""}],"src":"16189:108:31"},{"body":{"nativeSrc":"16507:391:31","nodeType":"YulBlock","src":"16507:391:31","statements":[{"nativeSrc":"16517:26:31","nodeType":"YulVariableDeclaration","src":"16517:26:31","value":{"arguments":[{"name":"pos","nativeSrc":"16533:3:31","nodeType":"YulIdentifier","src":"16533:3:31"},{"kind":"number","nativeSrc":"16538:4:31","nodeType":"YulLiteral","src":"16538:4:31","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16529:3:31","nodeType":"YulIdentifier","src":"16529:3:31"},"nativeSrc":"16529:14:31","nodeType":"YulFunctionCall","src":"16529:14:31"},"variables":[{"name":"tail","nativeSrc":"16521:4:31","nodeType":"YulTypedName","src":"16521:4:31","type":""}]},{"nativeSrc":"16553:162:31","nodeType":"YulBlock","src":"16553:162:31","statements":[{"nativeSrc":"16588:43:31","nodeType":"YulVariableDeclaration","src":"16588:43:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16618:5:31","nodeType":"YulIdentifier","src":"16618:5:31"},{"kind":"number","nativeSrc":"16625:4:31","nodeType":"YulLiteral","src":"16625:4:31","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"16614:3:31","nodeType":"YulIdentifier","src":"16614:3:31"},"nativeSrc":"16614:16:31","nodeType":"YulFunctionCall","src":"16614:16:31"}],"functionName":{"name":"mload","nativeSrc":"16608:5:31","nodeType":"YulIdentifier","src":"16608:5:31"},"nativeSrc":"16608:23:31","nodeType":"YulFunctionCall","src":"16608:23:31"},"variables":[{"name":"memberValue0","nativeSrc":"16592:12:31","nodeType":"YulTypedName","src":"16592:12:31","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"16676:12:31","nodeType":"YulIdentifier","src":"16676:12:31"},{"arguments":[{"name":"pos","nativeSrc":"16694:3:31","nodeType":"YulIdentifier","src":"16694:3:31"},{"kind":"number","nativeSrc":"16699:4:31","nodeType":"YulLiteral","src":"16699:4:31","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"16690:3:31","nodeType":"YulIdentifier","src":"16690:3:31"},"nativeSrc":"16690:14:31","nodeType":"YulFunctionCall","src":"16690:14:31"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48","nativeSrc":"16644:31:31","nodeType":"YulIdentifier","src":"16644:31:31"},"nativeSrc":"16644:61:31","nodeType":"YulFunctionCall","src":"16644:61:31"},"nativeSrc":"16644:61:31","nodeType":"YulExpressionStatement","src":"16644:61:31"}]},{"nativeSrc":"16725:166:31","nodeType":"YulBlock","src":"16725:166:31","statements":[{"nativeSrc":"16762:43:31","nodeType":"YulVariableDeclaration","src":"16762:43:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16792:5:31","nodeType":"YulIdentifier","src":"16792:5:31"},{"kind":"number","nativeSrc":"16799:4:31","nodeType":"YulLiteral","src":"16799:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16788:3:31","nodeType":"YulIdentifier","src":"16788:3:31"},"nativeSrc":"16788:16:31","nodeType":"YulFunctionCall","src":"16788:16:31"}],"functionName":{"name":"mload","nativeSrc":"16782:5:31","nodeType":"YulIdentifier","src":"16782:5:31"},"nativeSrc":"16782:23:31","nodeType":"YulFunctionCall","src":"16782:23:31"},"variables":[{"name":"memberValue0","nativeSrc":"16766:12:31","nodeType":"YulTypedName","src":"16766:12:31","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"16852:12:31","nodeType":"YulIdentifier","src":"16852:12:31"},{"arguments":[{"name":"pos","nativeSrc":"16870:3:31","nodeType":"YulIdentifier","src":"16870:3:31"},{"kind":"number","nativeSrc":"16875:4:31","nodeType":"YulLiteral","src":"16875:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16866:3:31","nodeType":"YulIdentifier","src":"16866:3:31"},"nativeSrc":"16866:14:31","nodeType":"YulFunctionCall","src":"16866:14:31"}],"functionName":{"name":"abi_encode_t_uint208_to_t_uint208","nativeSrc":"16818:33:31","nodeType":"YulIdentifier","src":"16818:33:31"},"nativeSrc":"16818:63:31","nodeType":"YulFunctionCall","src":"16818:63:31"},"nativeSrc":"16818:63:31","nodeType":"YulExpressionStatement","src":"16818:63:31"}]}]},"name":"abi_encode_t_struct$_Checkpoint208_$6955_memory_ptr_to_t_struct$_Checkpoint208_$6955_memory_ptr_fromStack","nativeSrc":"16379:519:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16494:5:31","nodeType":"YulTypedName","src":"16494:5:31","type":""},{"name":"pos","nativeSrc":"16501:3:31","nodeType":"YulTypedName","src":"16501:3:31","type":""}],"src":"16379:519:31"},{"body":{"nativeSrc":"17064:186:31","nodeType":"YulBlock","src":"17064:186:31","statements":[{"nativeSrc":"17074:26:31","nodeType":"YulAssignment","src":"17074:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"17086:9:31","nodeType":"YulIdentifier","src":"17086:9:31"},{"kind":"number","nativeSrc":"17097:2:31","nodeType":"YulLiteral","src":"17097:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17082:3:31","nodeType":"YulIdentifier","src":"17082:3:31"},"nativeSrc":"17082:18:31","nodeType":"YulFunctionCall","src":"17082:18:31"},"variableNames":[{"name":"tail","nativeSrc":"17074:4:31","nodeType":"YulIdentifier","src":"17074:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17216:6:31","nodeType":"YulIdentifier","src":"17216:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"17229:9:31","nodeType":"YulIdentifier","src":"17229:9:31"},{"kind":"number","nativeSrc":"17240:1:31","nodeType":"YulLiteral","src":"17240:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17225:3:31","nodeType":"YulIdentifier","src":"17225:3:31"},"nativeSrc":"17225:17:31","nodeType":"YulFunctionCall","src":"17225:17:31"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint208_$6955_memory_ptr_to_t_struct$_Checkpoint208_$6955_memory_ptr_fromStack","nativeSrc":"17110:105:31","nodeType":"YulIdentifier","src":"17110:105:31"},"nativeSrc":"17110:133:31","nodeType":"YulFunctionCall","src":"17110:133:31"},"nativeSrc":"17110:133:31","nodeType":"YulExpressionStatement","src":"17110:133:31"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint208_$6955_memory_ptr__to_t_struct$_Checkpoint208_$6955_memory_ptr__fromStack_reversed","nativeSrc":"16904:346:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17036:9:31","nodeType":"YulTypedName","src":"17036:9:31","type":""},{"name":"value0","nativeSrc":"17048:6:31","nodeType":"YulTypedName","src":"17048:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17059:4:31","nodeType":"YulTypedName","src":"17059:4:31","type":""}],"src":"16904:346:31"},{"body":{"nativeSrc":"17284:152:31","nodeType":"YulBlock","src":"17284:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17301:1:31","nodeType":"YulLiteral","src":"17301:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"17304:77:31","nodeType":"YulLiteral","src":"17304:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17294:6:31","nodeType":"YulIdentifier","src":"17294:6:31"},"nativeSrc":"17294:88:31","nodeType":"YulFunctionCall","src":"17294:88:31"},"nativeSrc":"17294:88:31","nodeType":"YulExpressionStatement","src":"17294:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17398:1:31","nodeType":"YulLiteral","src":"17398:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"17401:4:31","nodeType":"YulLiteral","src":"17401:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"17391:6:31","nodeType":"YulIdentifier","src":"17391:6:31"},"nativeSrc":"17391:15:31","nodeType":"YulFunctionCall","src":"17391:15:31"},"nativeSrc":"17391:15:31","nodeType":"YulExpressionStatement","src":"17391:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17422:1:31","nodeType":"YulLiteral","src":"17422:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"17425:4:31","nodeType":"YulLiteral","src":"17425:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17415:6:31","nodeType":"YulIdentifier","src":"17415:6:31"},"nativeSrc":"17415:15:31","nodeType":"YulFunctionCall","src":"17415:15:31"},"nativeSrc":"17415:15:31","nodeType":"YulExpressionStatement","src":"17415:15:31"}]},"name":"panic_error_0x22","nativeSrc":"17256:180:31","nodeType":"YulFunctionDefinition","src":"17256:180:31"},{"body":{"nativeSrc":"17493:269:31","nodeType":"YulBlock","src":"17493:269:31","statements":[{"nativeSrc":"17503:22:31","nodeType":"YulAssignment","src":"17503:22:31","value":{"arguments":[{"name":"data","nativeSrc":"17517:4:31","nodeType":"YulIdentifier","src":"17517:4:31"},{"kind":"number","nativeSrc":"17523:1:31","nodeType":"YulLiteral","src":"17523:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"17513:3:31","nodeType":"YulIdentifier","src":"17513:3:31"},"nativeSrc":"17513:12:31","nodeType":"YulFunctionCall","src":"17513:12:31"},"variableNames":[{"name":"length","nativeSrc":"17503:6:31","nodeType":"YulIdentifier","src":"17503:6:31"}]},{"nativeSrc":"17534:38:31","nodeType":"YulVariableDeclaration","src":"17534:38:31","value":{"arguments":[{"name":"data","nativeSrc":"17564:4:31","nodeType":"YulIdentifier","src":"17564:4:31"},{"kind":"number","nativeSrc":"17570:1:31","nodeType":"YulLiteral","src":"17570:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"17560:3:31","nodeType":"YulIdentifier","src":"17560:3:31"},"nativeSrc":"17560:12:31","nodeType":"YulFunctionCall","src":"17560:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"17538:18:31","nodeType":"YulTypedName","src":"17538:18:31","type":""}]},{"body":{"nativeSrc":"17611:51:31","nodeType":"YulBlock","src":"17611:51:31","statements":[{"nativeSrc":"17625:27:31","nodeType":"YulAssignment","src":"17625:27:31","value":{"arguments":[{"name":"length","nativeSrc":"17639:6:31","nodeType":"YulIdentifier","src":"17639:6:31"},{"kind":"number","nativeSrc":"17647:4:31","nodeType":"YulLiteral","src":"17647:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"17635:3:31","nodeType":"YulIdentifier","src":"17635:3:31"},"nativeSrc":"17635:17:31","nodeType":"YulFunctionCall","src":"17635:17:31"},"variableNames":[{"name":"length","nativeSrc":"17625:6:31","nodeType":"YulIdentifier","src":"17625:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"17591:18:31","nodeType":"YulIdentifier","src":"17591:18:31"}],"functionName":{"name":"iszero","nativeSrc":"17584:6:31","nodeType":"YulIdentifier","src":"17584:6:31"},"nativeSrc":"17584:26:31","nodeType":"YulFunctionCall","src":"17584:26:31"},"nativeSrc":"17581:81:31","nodeType":"YulIf","src":"17581:81:31"},{"body":{"nativeSrc":"17714:42:31","nodeType":"YulBlock","src":"17714:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"17728:16:31","nodeType":"YulIdentifier","src":"17728:16:31"},"nativeSrc":"17728:18:31","nodeType":"YulFunctionCall","src":"17728:18:31"},"nativeSrc":"17728:18:31","nodeType":"YulExpressionStatement","src":"17728:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"17678:18:31","nodeType":"YulIdentifier","src":"17678:18:31"},{"arguments":[{"name":"length","nativeSrc":"17701:6:31","nodeType":"YulIdentifier","src":"17701:6:31"},{"kind":"number","nativeSrc":"17709:2:31","nodeType":"YulLiteral","src":"17709:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"17698:2:31","nodeType":"YulIdentifier","src":"17698:2:31"},"nativeSrc":"17698:14:31","nodeType":"YulFunctionCall","src":"17698:14:31"}],"functionName":{"name":"eq","nativeSrc":"17675:2:31","nodeType":"YulIdentifier","src":"17675:2:31"},"nativeSrc":"17675:38:31","nodeType":"YulFunctionCall","src":"17675:38:31"},"nativeSrc":"17672:84:31","nodeType":"YulIf","src":"17672:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"17442:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"17477:4:31","nodeType":"YulTypedName","src":"17477:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17486:6:31","nodeType":"YulTypedName","src":"17486:6:31","type":""}],"src":"17442:320:31"},{"body":{"nativeSrc":"17892:204:31","nodeType":"YulBlock","src":"17892:204:31","statements":[{"nativeSrc":"17902:26:31","nodeType":"YulAssignment","src":"17902:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"17914:9:31","nodeType":"YulIdentifier","src":"17914:9:31"},{"kind":"number","nativeSrc":"17925:2:31","nodeType":"YulLiteral","src":"17925:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17910:3:31","nodeType":"YulIdentifier","src":"17910:3:31"},"nativeSrc":"17910:18:31","nodeType":"YulFunctionCall","src":"17910:18:31"},"variableNames":[{"name":"tail","nativeSrc":"17902:4:31","nodeType":"YulIdentifier","src":"17902:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"17982:6:31","nodeType":"YulIdentifier","src":"17982:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"17995:9:31","nodeType":"YulIdentifier","src":"17995:9:31"},{"kind":"number","nativeSrc":"18006:1:31","nodeType":"YulLiteral","src":"18006:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17991:3:31","nodeType":"YulIdentifier","src":"17991:3:31"},"nativeSrc":"17991:17:31","nodeType":"YulFunctionCall","src":"17991:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17938:43:31","nodeType":"YulIdentifier","src":"17938:43:31"},"nativeSrc":"17938:71:31","nodeType":"YulFunctionCall","src":"17938:71:31"},"nativeSrc":"17938:71:31","nodeType":"YulExpressionStatement","src":"17938:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18061:6:31","nodeType":"YulIdentifier","src":"18061:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18074:9:31","nodeType":"YulIdentifier","src":"18074:9:31"},{"kind":"number","nativeSrc":"18085:2:31","nodeType":"YulLiteral","src":"18085:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18070:3:31","nodeType":"YulIdentifier","src":"18070:3:31"},"nativeSrc":"18070:18:31","nodeType":"YulFunctionCall","src":"18070:18:31"}],"functionName":{"name":"abi_encode_t_uint48_to_t_uint48_fromStack","nativeSrc":"18019:41:31","nodeType":"YulIdentifier","src":"18019:41:31"},"nativeSrc":"18019:70:31","nodeType":"YulFunctionCall","src":"18019:70:31"},"nativeSrc":"18019:70:31","nodeType":"YulExpressionStatement","src":"18019:70:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed","nativeSrc":"17768:328:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17856:9:31","nodeType":"YulTypedName","src":"17856:9:31","type":""},{"name":"value1","nativeSrc":"17868:6:31","nodeType":"YulTypedName","src":"17868:6:31","type":""},{"name":"value0","nativeSrc":"17876:6:31","nodeType":"YulTypedName","src":"17876:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17887:4:31","nodeType":"YulTypedName","src":"17887:4:31","type":""}],"src":"17768:328:31"},{"body":{"nativeSrc":"18130:152:31","nodeType":"YulBlock","src":"18130:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18147:1:31","nodeType":"YulLiteral","src":"18147:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"18150:77:31","nodeType":"YulLiteral","src":"18150:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18140:6:31","nodeType":"YulIdentifier","src":"18140:6:31"},"nativeSrc":"18140:88:31","nodeType":"YulFunctionCall","src":"18140:88:31"},"nativeSrc":"18140:88:31","nodeType":"YulExpressionStatement","src":"18140:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18244:1:31","nodeType":"YulLiteral","src":"18244:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"18247:4:31","nodeType":"YulLiteral","src":"18247:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"18237:6:31","nodeType":"YulIdentifier","src":"18237:6:31"},"nativeSrc":"18237:15:31","nodeType":"YulFunctionCall","src":"18237:15:31"},"nativeSrc":"18237:15:31","nodeType":"YulExpressionStatement","src":"18237:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18268:1:31","nodeType":"YulLiteral","src":"18268:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"18271:4:31","nodeType":"YulLiteral","src":"18271:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18261:6:31","nodeType":"YulIdentifier","src":"18261:6:31"},"nativeSrc":"18261:15:31","nodeType":"YulFunctionCall","src":"18261:15:31"},"nativeSrc":"18261:15:31","nodeType":"YulExpressionStatement","src":"18261:15:31"}]},"name":"panic_error_0x41","nativeSrc":"18102:180:31","nodeType":"YulFunctionDefinition","src":"18102:180:31"},{"body":{"nativeSrc":"18470:371:31","nodeType":"YulBlock","src":"18470:371:31","statements":[{"nativeSrc":"18480:27:31","nodeType":"YulAssignment","src":"18480:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"18492:9:31","nodeType":"YulIdentifier","src":"18492:9:31"},{"kind":"number","nativeSrc":"18503:3:31","nodeType":"YulLiteral","src":"18503:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18488:3:31","nodeType":"YulIdentifier","src":"18488:3:31"},"nativeSrc":"18488:19:31","nodeType":"YulFunctionCall","src":"18488:19:31"},"variableNames":[{"name":"tail","nativeSrc":"18480:4:31","nodeType":"YulIdentifier","src":"18480:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18561:6:31","nodeType":"YulIdentifier","src":"18561:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18574:9:31","nodeType":"YulIdentifier","src":"18574:9:31"},{"kind":"number","nativeSrc":"18585:1:31","nodeType":"YulLiteral","src":"18585:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18570:3:31","nodeType":"YulIdentifier","src":"18570:3:31"},"nativeSrc":"18570:17:31","nodeType":"YulFunctionCall","src":"18570:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"18517:43:31","nodeType":"YulIdentifier","src":"18517:43:31"},"nativeSrc":"18517:71:31","nodeType":"YulFunctionCall","src":"18517:71:31"},"nativeSrc":"18517:71:31","nodeType":"YulExpressionStatement","src":"18517:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"18642:6:31","nodeType":"YulIdentifier","src":"18642:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18655:9:31","nodeType":"YulIdentifier","src":"18655:9:31"},{"kind":"number","nativeSrc":"18666:2:31","nodeType":"YulLiteral","src":"18666:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18651:3:31","nodeType":"YulIdentifier","src":"18651:3:31"},"nativeSrc":"18651:18:31","nodeType":"YulFunctionCall","src":"18651:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"18598:43:31","nodeType":"YulIdentifier","src":"18598:43:31"},"nativeSrc":"18598:72:31","nodeType":"YulFunctionCall","src":"18598:72:31"},"nativeSrc":"18598:72:31","nodeType":"YulExpressionStatement","src":"18598:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"18724:6:31","nodeType":"YulIdentifier","src":"18724:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18737:9:31","nodeType":"YulIdentifier","src":"18737:9:31"},{"kind":"number","nativeSrc":"18748:2:31","nodeType":"YulLiteral","src":"18748:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18733:3:31","nodeType":"YulIdentifier","src":"18733:3:31"},"nativeSrc":"18733:18:31","nodeType":"YulFunctionCall","src":"18733:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18680:43:31","nodeType":"YulIdentifier","src":"18680:43:31"},"nativeSrc":"18680:72:31","nodeType":"YulFunctionCall","src":"18680:72:31"},"nativeSrc":"18680:72:31","nodeType":"YulExpressionStatement","src":"18680:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"18806:6:31","nodeType":"YulIdentifier","src":"18806:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"18819:9:31","nodeType":"YulIdentifier","src":"18819:9:31"},{"kind":"number","nativeSrc":"18830:2:31","nodeType":"YulLiteral","src":"18830:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"18815:3:31","nodeType":"YulIdentifier","src":"18815:3:31"},"nativeSrc":"18815:18:31","nodeType":"YulFunctionCall","src":"18815:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"18762:43:31","nodeType":"YulIdentifier","src":"18762:43:31"},"nativeSrc":"18762:72:31","nodeType":"YulFunctionCall","src":"18762:72:31"},"nativeSrc":"18762:72:31","nodeType":"YulExpressionStatement","src":"18762:72:31"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18288:553:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18418:9:31","nodeType":"YulTypedName","src":"18418:9:31","type":""},{"name":"value3","nativeSrc":"18430:6:31","nodeType":"YulTypedName","src":"18430:6:31","type":""},{"name":"value2","nativeSrc":"18438:6:31","nodeType":"YulTypedName","src":"18438:6:31","type":""},{"name":"value1","nativeSrc":"18446:6:31","nodeType":"YulTypedName","src":"18446:6:31","type":""},{"name":"value0","nativeSrc":"18454:6:31","nodeType":"YulTypedName","src":"18454:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18465:4:31","nodeType":"YulTypedName","src":"18465:4:31","type":""}],"src":"18288:553:31"},{"body":{"nativeSrc":"19085:537:31","nodeType":"YulBlock","src":"19085:537:31","statements":[{"nativeSrc":"19095:27:31","nodeType":"YulAssignment","src":"19095:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"19107:9:31","nodeType":"YulIdentifier","src":"19107:9:31"},{"kind":"number","nativeSrc":"19118:3:31","nodeType":"YulLiteral","src":"19118:3:31","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"19103:3:31","nodeType":"YulIdentifier","src":"19103:3:31"},"nativeSrc":"19103:19:31","nodeType":"YulFunctionCall","src":"19103:19:31"},"variableNames":[{"name":"tail","nativeSrc":"19095:4:31","nodeType":"YulIdentifier","src":"19095:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19176:6:31","nodeType":"YulIdentifier","src":"19176:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19189:9:31","nodeType":"YulIdentifier","src":"19189:9:31"},{"kind":"number","nativeSrc":"19200:1:31","nodeType":"YulLiteral","src":"19200:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19185:3:31","nodeType":"YulIdentifier","src":"19185:3:31"},"nativeSrc":"19185:17:31","nodeType":"YulFunctionCall","src":"19185:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19132:43:31","nodeType":"YulIdentifier","src":"19132:43:31"},"nativeSrc":"19132:71:31","nodeType":"YulFunctionCall","src":"19132:71:31"},"nativeSrc":"19132:71:31","nodeType":"YulExpressionStatement","src":"19132:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19257:6:31","nodeType":"YulIdentifier","src":"19257:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19270:9:31","nodeType":"YulIdentifier","src":"19270:9:31"},{"kind":"number","nativeSrc":"19281:2:31","nodeType":"YulLiteral","src":"19281:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19266:3:31","nodeType":"YulIdentifier","src":"19266:3:31"},"nativeSrc":"19266:18:31","nodeType":"YulFunctionCall","src":"19266:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19213:43:31","nodeType":"YulIdentifier","src":"19213:43:31"},"nativeSrc":"19213:72:31","nodeType":"YulFunctionCall","src":"19213:72:31"},"nativeSrc":"19213:72:31","nodeType":"YulExpressionStatement","src":"19213:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"19339:6:31","nodeType":"YulIdentifier","src":"19339:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19352:9:31","nodeType":"YulIdentifier","src":"19352:9:31"},{"kind":"number","nativeSrc":"19363:2:31","nodeType":"YulLiteral","src":"19363:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19348:3:31","nodeType":"YulIdentifier","src":"19348:3:31"},"nativeSrc":"19348:18:31","nodeType":"YulFunctionCall","src":"19348:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19295:43:31","nodeType":"YulIdentifier","src":"19295:43:31"},"nativeSrc":"19295:72:31","nodeType":"YulFunctionCall","src":"19295:72:31"},"nativeSrc":"19295:72:31","nodeType":"YulExpressionStatement","src":"19295:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"19421:6:31","nodeType":"YulIdentifier","src":"19421:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19434:9:31","nodeType":"YulIdentifier","src":"19434:9:31"},{"kind":"number","nativeSrc":"19445:2:31","nodeType":"YulLiteral","src":"19445:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"19430:3:31","nodeType":"YulIdentifier","src":"19430:3:31"},"nativeSrc":"19430:18:31","nodeType":"YulFunctionCall","src":"19430:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19377:43:31","nodeType":"YulIdentifier","src":"19377:43:31"},"nativeSrc":"19377:72:31","nodeType":"YulFunctionCall","src":"19377:72:31"},"nativeSrc":"19377:72:31","nodeType":"YulExpressionStatement","src":"19377:72:31"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"19503:6:31","nodeType":"YulIdentifier","src":"19503:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19516:9:31","nodeType":"YulIdentifier","src":"19516:9:31"},{"kind":"number","nativeSrc":"19527:3:31","nodeType":"YulLiteral","src":"19527:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19512:3:31","nodeType":"YulIdentifier","src":"19512:3:31"},"nativeSrc":"19512:19:31","nodeType":"YulFunctionCall","src":"19512:19:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19459:43:31","nodeType":"YulIdentifier","src":"19459:43:31"},"nativeSrc":"19459:73:31","nodeType":"YulFunctionCall","src":"19459:73:31"},"nativeSrc":"19459:73:31","nodeType":"YulExpressionStatement","src":"19459:73:31"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"19586:6:31","nodeType":"YulIdentifier","src":"19586:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19599:9:31","nodeType":"YulIdentifier","src":"19599:9:31"},{"kind":"number","nativeSrc":"19610:3:31","nodeType":"YulLiteral","src":"19610:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"19595:3:31","nodeType":"YulIdentifier","src":"19595:3:31"},"nativeSrc":"19595:19:31","nodeType":"YulFunctionCall","src":"19595:19:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"19542:43:31","nodeType":"YulIdentifier","src":"19542:43:31"},"nativeSrc":"19542:73:31","nodeType":"YulFunctionCall","src":"19542:73:31"},"nativeSrc":"19542:73:31","nodeType":"YulExpressionStatement","src":"19542:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"18847:775:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19017:9:31","nodeType":"YulTypedName","src":"19017:9:31","type":""},{"name":"value5","nativeSrc":"19029:6:31","nodeType":"YulTypedName","src":"19029:6:31","type":""},{"name":"value4","nativeSrc":"19037:6:31","nodeType":"YulTypedName","src":"19037:6:31","type":""},{"name":"value3","nativeSrc":"19045:6:31","nodeType":"YulTypedName","src":"19045:6:31","type":""},{"name":"value2","nativeSrc":"19053:6:31","nodeType":"YulTypedName","src":"19053:6:31","type":""},{"name":"value1","nativeSrc":"19061:6:31","nodeType":"YulTypedName","src":"19061:6:31","type":""},{"name":"value0","nativeSrc":"19069:6:31","nodeType":"YulTypedName","src":"19069:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19080:4:31","nodeType":"YulTypedName","src":"19080:4:31","type":""}],"src":"18847:775:31"},{"body":{"nativeSrc":"19754:206:31","nodeType":"YulBlock","src":"19754:206:31","statements":[{"nativeSrc":"19764:26:31","nodeType":"YulAssignment","src":"19764:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"19776:9:31","nodeType":"YulIdentifier","src":"19776:9:31"},{"kind":"number","nativeSrc":"19787:2:31","nodeType":"YulLiteral","src":"19787:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19772:3:31","nodeType":"YulIdentifier","src":"19772:3:31"},"nativeSrc":"19772:18:31","nodeType":"YulFunctionCall","src":"19772:18:31"},"variableNames":[{"name":"tail","nativeSrc":"19764:4:31","nodeType":"YulIdentifier","src":"19764:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19844:6:31","nodeType":"YulIdentifier","src":"19844:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19857:9:31","nodeType":"YulIdentifier","src":"19857:9:31"},{"kind":"number","nativeSrc":"19868:1:31","nodeType":"YulLiteral","src":"19868:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19853:3:31","nodeType":"YulIdentifier","src":"19853:3:31"},"nativeSrc":"19853:17:31","nodeType":"YulFunctionCall","src":"19853:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19800:43:31","nodeType":"YulIdentifier","src":"19800:43:31"},"nativeSrc":"19800:71:31","nodeType":"YulFunctionCall","src":"19800:71:31"},"nativeSrc":"19800:71:31","nodeType":"YulExpressionStatement","src":"19800:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"19925:6:31","nodeType":"YulIdentifier","src":"19925:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19938:9:31","nodeType":"YulIdentifier","src":"19938:9:31"},{"kind":"number","nativeSrc":"19949:2:31","nodeType":"YulLiteral","src":"19949:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19934:3:31","nodeType":"YulIdentifier","src":"19934:3:31"},"nativeSrc":"19934:18:31","nodeType":"YulFunctionCall","src":"19934:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19881:43:31","nodeType":"YulIdentifier","src":"19881:43:31"},"nativeSrc":"19881:72:31","nodeType":"YulFunctionCall","src":"19881:72:31"},"nativeSrc":"19881:72:31","nodeType":"YulExpressionStatement","src":"19881:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"19628:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19718:9:31","nodeType":"YulTypedName","src":"19718:9:31","type":""},{"name":"value1","nativeSrc":"19730:6:31","nodeType":"YulTypedName","src":"19730:6:31","type":""},{"name":"value0","nativeSrc":"19738:6:31","nodeType":"YulTypedName","src":"19738:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19749:4:31","nodeType":"YulTypedName","src":"19749:4:31","type":""}],"src":"19628:332:31"},{"body":{"nativeSrc":"20120:288:31","nodeType":"YulBlock","src":"20120:288:31","statements":[{"nativeSrc":"20130:26:31","nodeType":"YulAssignment","src":"20130:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"20142:9:31","nodeType":"YulIdentifier","src":"20142:9:31"},{"kind":"number","nativeSrc":"20153:2:31","nodeType":"YulLiteral","src":"20153:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20138:3:31","nodeType":"YulIdentifier","src":"20138:3:31"},"nativeSrc":"20138:18:31","nodeType":"YulFunctionCall","src":"20138:18:31"},"variableNames":[{"name":"tail","nativeSrc":"20130:4:31","nodeType":"YulIdentifier","src":"20130:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20210:6:31","nodeType":"YulIdentifier","src":"20210:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20223:9:31","nodeType":"YulIdentifier","src":"20223:9:31"},{"kind":"number","nativeSrc":"20234:1:31","nodeType":"YulLiteral","src":"20234:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20219:3:31","nodeType":"YulIdentifier","src":"20219:3:31"},"nativeSrc":"20219:17:31","nodeType":"YulFunctionCall","src":"20219:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20166:43:31","nodeType":"YulIdentifier","src":"20166:43:31"},"nativeSrc":"20166:71:31","nodeType":"YulFunctionCall","src":"20166:71:31"},"nativeSrc":"20166:71:31","nodeType":"YulExpressionStatement","src":"20166:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20291:6:31","nodeType":"YulIdentifier","src":"20291:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20304:9:31","nodeType":"YulIdentifier","src":"20304:9:31"},{"kind":"number","nativeSrc":"20315:2:31","nodeType":"YulLiteral","src":"20315:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20300:3:31","nodeType":"YulIdentifier","src":"20300:3:31"},"nativeSrc":"20300:18:31","nodeType":"YulFunctionCall","src":"20300:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20247:43:31","nodeType":"YulIdentifier","src":"20247:43:31"},"nativeSrc":"20247:72:31","nodeType":"YulFunctionCall","src":"20247:72:31"},"nativeSrc":"20247:72:31","nodeType":"YulExpressionStatement","src":"20247:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20373:6:31","nodeType":"YulIdentifier","src":"20373:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20386:9:31","nodeType":"YulIdentifier","src":"20386:9:31"},{"kind":"number","nativeSrc":"20397:2:31","nodeType":"YulLiteral","src":"20397:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20382:3:31","nodeType":"YulIdentifier","src":"20382:3:31"},"nativeSrc":"20382:18:31","nodeType":"YulFunctionCall","src":"20382:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20329:43:31","nodeType":"YulIdentifier","src":"20329:43:31"},"nativeSrc":"20329:72:31","nodeType":"YulFunctionCall","src":"20329:72:31"},"nativeSrc":"20329:72:31","nodeType":"YulExpressionStatement","src":"20329:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"19966:442:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20076:9:31","nodeType":"YulTypedName","src":"20076:9:31","type":""},{"name":"value2","nativeSrc":"20088:6:31","nodeType":"YulTypedName","src":"20088:6:31","type":""},{"name":"value1","nativeSrc":"20096:6:31","nodeType":"YulTypedName","src":"20096:6:31","type":""},{"name":"value0","nativeSrc":"20104:6:31","nodeType":"YulTypedName","src":"20104:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20115:4:31","nodeType":"YulTypedName","src":"20115:4:31","type":""}],"src":"19966:442:31"},{"body":{"nativeSrc":"20468:32:31","nodeType":"YulBlock","src":"20468:32:31","statements":[{"nativeSrc":"20478:16:31","nodeType":"YulAssignment","src":"20478:16:31","value":{"name":"value","nativeSrc":"20489:5:31","nodeType":"YulIdentifier","src":"20489:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"20478:7:31","nodeType":"YulIdentifier","src":"20478:7:31"}]}]},"name":"cleanup_t_rational_48_by_1","nativeSrc":"20414:86:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20450:5:31","nodeType":"YulTypedName","src":"20450:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"20460:7:31","nodeType":"YulTypedName","src":"20460:7:31","type":""}],"src":"20414:86:31"},{"body":{"nativeSrc":"20538:28:31","nodeType":"YulBlock","src":"20538:28:31","statements":[{"nativeSrc":"20548:12:31","nodeType":"YulAssignment","src":"20548:12:31","value":{"name":"value","nativeSrc":"20555:5:31","nodeType":"YulIdentifier","src":"20555:5:31"},"variableNames":[{"name":"ret","nativeSrc":"20548:3:31","nodeType":"YulIdentifier","src":"20548:3:31"}]}]},"name":"identity","nativeSrc":"20506:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20524:5:31","nodeType":"YulTypedName","src":"20524:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20534:3:31","nodeType":"YulTypedName","src":"20534:3:31","type":""}],"src":"20506:60:31"},{"body":{"nativeSrc":"20639:89:31","nodeType":"YulBlock","src":"20639:89:31","statements":[{"nativeSrc":"20649:73:31","nodeType":"YulAssignment","src":"20649:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20714:5:31","nodeType":"YulIdentifier","src":"20714:5:31"}],"functionName":{"name":"cleanup_t_rational_48_by_1","nativeSrc":"20687:26:31","nodeType":"YulIdentifier","src":"20687:26:31"},"nativeSrc":"20687:33:31","nodeType":"YulFunctionCall","src":"20687:33:31"}],"functionName":{"name":"identity","nativeSrc":"20678:8:31","nodeType":"YulIdentifier","src":"20678:8:31"},"nativeSrc":"20678:43:31","nodeType":"YulFunctionCall","src":"20678:43:31"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"20662:15:31","nodeType":"YulIdentifier","src":"20662:15:31"},"nativeSrc":"20662:60:31","nodeType":"YulFunctionCall","src":"20662:60:31"},"variableNames":[{"name":"converted","nativeSrc":"20649:9:31","nodeType":"YulIdentifier","src":"20649:9:31"}]}]},"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"20572:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20619:5:31","nodeType":"YulTypedName","src":"20619:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"20629:9:31","nodeType":"YulTypedName","src":"20629:9:31","type":""}],"src":"20572:156:31"},{"body":{"nativeSrc":"20806:73:31","nodeType":"YulBlock","src":"20806:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20823:3:31","nodeType":"YulIdentifier","src":"20823:3:31"},{"arguments":[{"name":"value","nativeSrc":"20866:5:31","nodeType":"YulIdentifier","src":"20866:5:31"}],"functionName":{"name":"convert_t_rational_48_by_1_to_t_uint8","nativeSrc":"20828:37:31","nodeType":"YulIdentifier","src":"20828:37:31"},"nativeSrc":"20828:44:31","nodeType":"YulFunctionCall","src":"20828:44:31"}],"functionName":{"name":"mstore","nativeSrc":"20816:6:31","nodeType":"YulIdentifier","src":"20816:6:31"},"nativeSrc":"20816:57:31","nodeType":"YulFunctionCall","src":"20816:57:31"},"nativeSrc":"20816:57:31","nodeType":"YulExpressionStatement","src":"20816:57:31"}]},"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"20734:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20794:5:31","nodeType":"YulTypedName","src":"20794:5:31","type":""},{"name":"pos","nativeSrc":"20801:3:31","nodeType":"YulTypedName","src":"20801:3:31","type":""}],"src":"20734:145:31"},{"body":{"nativeSrc":"21018:213:31","nodeType":"YulBlock","src":"21018:213:31","statements":[{"nativeSrc":"21028:26:31","nodeType":"YulAssignment","src":"21028:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"21040:9:31","nodeType":"YulIdentifier","src":"21040:9:31"},{"kind":"number","nativeSrc":"21051:2:31","nodeType":"YulLiteral","src":"21051:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21036:3:31","nodeType":"YulIdentifier","src":"21036:3:31"},"nativeSrc":"21036:18:31","nodeType":"YulFunctionCall","src":"21036:18:31"},"variableNames":[{"name":"tail","nativeSrc":"21028:4:31","nodeType":"YulIdentifier","src":"21028:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21115:6:31","nodeType":"YulIdentifier","src":"21115:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"21128:9:31","nodeType":"YulIdentifier","src":"21128:9:31"},{"kind":"number","nativeSrc":"21139:1:31","nodeType":"YulLiteral","src":"21139:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21124:3:31","nodeType":"YulIdentifier","src":"21124:3:31"},"nativeSrc":"21124:17:31","nodeType":"YulFunctionCall","src":"21124:17:31"}],"functionName":{"name":"abi_encode_t_rational_48_by_1_to_t_uint8_fromStack","nativeSrc":"21064:50:31","nodeType":"YulIdentifier","src":"21064:50:31"},"nativeSrc":"21064:78:31","nodeType":"YulFunctionCall","src":"21064:78:31"},"nativeSrc":"21064:78:31","nodeType":"YulExpressionStatement","src":"21064:78:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"21196:6:31","nodeType":"YulIdentifier","src":"21196:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"21209:9:31","nodeType":"YulIdentifier","src":"21209:9:31"},{"kind":"number","nativeSrc":"21220:2:31","nodeType":"YulLiteral","src":"21220:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21205:3:31","nodeType":"YulIdentifier","src":"21205:3:31"},"nativeSrc":"21205:18:31","nodeType":"YulFunctionCall","src":"21205:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"21152:43:31","nodeType":"YulIdentifier","src":"21152:43:31"},"nativeSrc":"21152:72:31","nodeType":"YulFunctionCall","src":"21152:72:31"},"nativeSrc":"21152:72:31","nodeType":"YulExpressionStatement","src":"21152:72:31"}]},"name":"abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"20885:346:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20982:9:31","nodeType":"YulTypedName","src":"20982:9:31","type":""},{"name":"value1","nativeSrc":"20994:6:31","nodeType":"YulTypedName","src":"20994:6:31","type":""},{"name":"value0","nativeSrc":"21002:6:31","nodeType":"YulTypedName","src":"21002:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21013:4:31","nodeType":"YulTypedName","src":"21013:4:31","type":""}],"src":"20885:346:31"},{"body":{"nativeSrc":"21265:152:31","nodeType":"YulBlock","src":"21265:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21282:1:31","nodeType":"YulLiteral","src":"21282:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"21285:77:31","nodeType":"YulLiteral","src":"21285:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21275:6:31","nodeType":"YulIdentifier","src":"21275:6:31"},"nativeSrc":"21275:88:31","nodeType":"YulFunctionCall","src":"21275:88:31"},"nativeSrc":"21275:88:31","nodeType":"YulExpressionStatement","src":"21275:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21379:1:31","nodeType":"YulLiteral","src":"21379:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"21382:4:31","nodeType":"YulLiteral","src":"21382:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"21372:6:31","nodeType":"YulIdentifier","src":"21372:6:31"},"nativeSrc":"21372:15:31","nodeType":"YulFunctionCall","src":"21372:15:31"},"nativeSrc":"21372:15:31","nodeType":"YulExpressionStatement","src":"21372:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21403:1:31","nodeType":"YulLiteral","src":"21403:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"21406:4:31","nodeType":"YulLiteral","src":"21406:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21396:6:31","nodeType":"YulIdentifier","src":"21396:6:31"},"nativeSrc":"21396:15:31","nodeType":"YulFunctionCall","src":"21396:15:31"},"nativeSrc":"21396:15:31","nodeType":"YulExpressionStatement","src":"21396:15:31"}]},"name":"panic_error_0x11","nativeSrc":"21237:180:31","nodeType":"YulFunctionDefinition","src":"21237:180:31"},{"body":{"nativeSrc":"21468:149:31","nodeType":"YulBlock","src":"21468:149:31","statements":[{"nativeSrc":"21478:25:31","nodeType":"YulAssignment","src":"21478:25:31","value":{"arguments":[{"name":"x","nativeSrc":"21501:1:31","nodeType":"YulIdentifier","src":"21501:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21483:17:31","nodeType":"YulIdentifier","src":"21483:17:31"},"nativeSrc":"21483:20:31","nodeType":"YulFunctionCall","src":"21483:20:31"},"variableNames":[{"name":"x","nativeSrc":"21478:1:31","nodeType":"YulIdentifier","src":"21478:1:31"}]},{"nativeSrc":"21512:25:31","nodeType":"YulAssignment","src":"21512:25:31","value":{"arguments":[{"name":"y","nativeSrc":"21535:1:31","nodeType":"YulIdentifier","src":"21535:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21517:17:31","nodeType":"YulIdentifier","src":"21517:17:31"},"nativeSrc":"21517:20:31","nodeType":"YulFunctionCall","src":"21517:20:31"},"variableNames":[{"name":"y","nativeSrc":"21512:1:31","nodeType":"YulIdentifier","src":"21512:1:31"}]},{"nativeSrc":"21546:17:31","nodeType":"YulAssignment","src":"21546:17:31","value":{"arguments":[{"name":"x","nativeSrc":"21558:1:31","nodeType":"YulIdentifier","src":"21558:1:31"},{"name":"y","nativeSrc":"21561:1:31","nodeType":"YulIdentifier","src":"21561:1:31"}],"functionName":{"name":"sub","nativeSrc":"21554:3:31","nodeType":"YulIdentifier","src":"21554:3:31"},"nativeSrc":"21554:9:31","nodeType":"YulFunctionCall","src":"21554:9:31"},"variableNames":[{"name":"diff","nativeSrc":"21546:4:31","nodeType":"YulIdentifier","src":"21546:4:31"}]},{"body":{"nativeSrc":"21588:22:31","nodeType":"YulBlock","src":"21588:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21590:16:31","nodeType":"YulIdentifier","src":"21590:16:31"},"nativeSrc":"21590:18:31","nodeType":"YulFunctionCall","src":"21590:18:31"},"nativeSrc":"21590:18:31","nodeType":"YulExpressionStatement","src":"21590:18:31"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"21579:4:31","nodeType":"YulIdentifier","src":"21579:4:31"},{"name":"x","nativeSrc":"21585:1:31","nodeType":"YulIdentifier","src":"21585:1:31"}],"functionName":{"name":"gt","nativeSrc":"21576:2:31","nodeType":"YulIdentifier","src":"21576:2:31"},"nativeSrc":"21576:11:31","nodeType":"YulFunctionCall","src":"21576:11:31"},"nativeSrc":"21573:37:31","nodeType":"YulIf","src":"21573:37:31"}]},"name":"checked_sub_t_uint256","nativeSrc":"21423:194:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21454:1:31","nodeType":"YulTypedName","src":"21454:1:31","type":""},{"name":"y","nativeSrc":"21457:1:31","nodeType":"YulTypedName","src":"21457:1:31","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"21463:4:31","nodeType":"YulTypedName","src":"21463:4:31","type":""}],"src":"21423:194:31"},{"body":{"nativeSrc":"21667:147:31","nodeType":"YulBlock","src":"21667:147:31","statements":[{"nativeSrc":"21677:25:31","nodeType":"YulAssignment","src":"21677:25:31","value":{"arguments":[{"name":"x","nativeSrc":"21700:1:31","nodeType":"YulIdentifier","src":"21700:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21682:17:31","nodeType":"YulIdentifier","src":"21682:17:31"},"nativeSrc":"21682:20:31","nodeType":"YulFunctionCall","src":"21682:20:31"},"variableNames":[{"name":"x","nativeSrc":"21677:1:31","nodeType":"YulIdentifier","src":"21677:1:31"}]},{"nativeSrc":"21711:25:31","nodeType":"YulAssignment","src":"21711:25:31","value":{"arguments":[{"name":"y","nativeSrc":"21734:1:31","nodeType":"YulIdentifier","src":"21734:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"21716:17:31","nodeType":"YulIdentifier","src":"21716:17:31"},"nativeSrc":"21716:20:31","nodeType":"YulFunctionCall","src":"21716:20:31"},"variableNames":[{"name":"y","nativeSrc":"21711:1:31","nodeType":"YulIdentifier","src":"21711:1:31"}]},{"nativeSrc":"21745:16:31","nodeType":"YulAssignment","src":"21745:16:31","value":{"arguments":[{"name":"x","nativeSrc":"21756:1:31","nodeType":"YulIdentifier","src":"21756:1:31"},{"name":"y","nativeSrc":"21759:1:31","nodeType":"YulIdentifier","src":"21759:1:31"}],"functionName":{"name":"add","nativeSrc":"21752:3:31","nodeType":"YulIdentifier","src":"21752:3:31"},"nativeSrc":"21752:9:31","nodeType":"YulFunctionCall","src":"21752:9:31"},"variableNames":[{"name":"sum","nativeSrc":"21745:3:31","nodeType":"YulIdentifier","src":"21745:3:31"}]},{"body":{"nativeSrc":"21785:22:31","nodeType":"YulBlock","src":"21785:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"21787:16:31","nodeType":"YulIdentifier","src":"21787:16:31"},"nativeSrc":"21787:18:31","nodeType":"YulFunctionCall","src":"21787:18:31"},"nativeSrc":"21787:18:31","nodeType":"YulExpressionStatement","src":"21787:18:31"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"21777:1:31","nodeType":"YulIdentifier","src":"21777:1:31"},{"name":"sum","nativeSrc":"21780:3:31","nodeType":"YulIdentifier","src":"21780:3:31"}],"functionName":{"name":"gt","nativeSrc":"21774:2:31","nodeType":"YulIdentifier","src":"21774:2:31"},"nativeSrc":"21774:10:31","nodeType":"YulFunctionCall","src":"21774:10:31"},"nativeSrc":"21771:36:31","nodeType":"YulIf","src":"21771:36:31"}]},"name":"checked_add_t_uint256","nativeSrc":"21623:191:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"21654:1:31","nodeType":"YulTypedName","src":"21654:1:31","type":""},{"name":"y","nativeSrc":"21657:1:31","nodeType":"YulTypedName","src":"21657:1:31","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"21663:3:31","nodeType":"YulTypedName","src":"21663:3:31","type":""}],"src":"21623:191:31"},{"body":{"nativeSrc":"21946:206:31","nodeType":"YulBlock","src":"21946:206:31","statements":[{"nativeSrc":"21956:26:31","nodeType":"YulAssignment","src":"21956:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"21968:9:31","nodeType":"YulIdentifier","src":"21968:9:31"},{"kind":"number","nativeSrc":"21979:2:31","nodeType":"YulLiteral","src":"21979:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21964:3:31","nodeType":"YulIdentifier","src":"21964:3:31"},"nativeSrc":"21964:18:31","nodeType":"YulFunctionCall","src":"21964:18:31"},"variableNames":[{"name":"tail","nativeSrc":"21956:4:31","nodeType":"YulIdentifier","src":"21956:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22036:6:31","nodeType":"YulIdentifier","src":"22036:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22049:9:31","nodeType":"YulIdentifier","src":"22049:9:31"},{"kind":"number","nativeSrc":"22060:1:31","nodeType":"YulLiteral","src":"22060:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22045:3:31","nodeType":"YulIdentifier","src":"22045:3:31"},"nativeSrc":"22045:17:31","nodeType":"YulFunctionCall","src":"22045:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"21992:43:31","nodeType":"YulIdentifier","src":"21992:43:31"},"nativeSrc":"21992:71:31","nodeType":"YulFunctionCall","src":"21992:71:31"},"nativeSrc":"21992:71:31","nodeType":"YulExpressionStatement","src":"21992:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22117:6:31","nodeType":"YulIdentifier","src":"22117:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22130:9:31","nodeType":"YulIdentifier","src":"22130:9:31"},{"kind":"number","nativeSrc":"22141:2:31","nodeType":"YulLiteral","src":"22141:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22126:3:31","nodeType":"YulIdentifier","src":"22126:3:31"},"nativeSrc":"22126:18:31","nodeType":"YulFunctionCall","src":"22126:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22073:43:31","nodeType":"YulIdentifier","src":"22073:43:31"},"nativeSrc":"22073:72:31","nodeType":"YulFunctionCall","src":"22073:72:31"},"nativeSrc":"22073:72:31","nodeType":"YulExpressionStatement","src":"22073:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"21820:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21910:9:31","nodeType":"YulTypedName","src":"21910:9:31","type":""},{"name":"value1","nativeSrc":"21922:6:31","nodeType":"YulTypedName","src":"21922:6:31","type":""},{"name":"value0","nativeSrc":"21930:6:31","nodeType":"YulTypedName","src":"21930:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21941:4:31","nodeType":"YulTypedName","src":"21941:4:31","type":""}],"src":"21820:332:31"},{"body":{"nativeSrc":"22284:206:31","nodeType":"YulBlock","src":"22284:206:31","statements":[{"nativeSrc":"22294:26:31","nodeType":"YulAssignment","src":"22294:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"22306:9:31","nodeType":"YulIdentifier","src":"22306:9:31"},{"kind":"number","nativeSrc":"22317:2:31","nodeType":"YulLiteral","src":"22317:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22302:3:31","nodeType":"YulIdentifier","src":"22302:3:31"},"nativeSrc":"22302:18:31","nodeType":"YulFunctionCall","src":"22302:18:31"},"variableNames":[{"name":"tail","nativeSrc":"22294:4:31","nodeType":"YulIdentifier","src":"22294:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22374:6:31","nodeType":"YulIdentifier","src":"22374:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22387:9:31","nodeType":"YulIdentifier","src":"22387:9:31"},{"kind":"number","nativeSrc":"22398:1:31","nodeType":"YulLiteral","src":"22398:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22383:3:31","nodeType":"YulIdentifier","src":"22383:3:31"},"nativeSrc":"22383:17:31","nodeType":"YulFunctionCall","src":"22383:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22330:43:31","nodeType":"YulIdentifier","src":"22330:43:31"},"nativeSrc":"22330:71:31","nodeType":"YulFunctionCall","src":"22330:71:31"},"nativeSrc":"22330:71:31","nodeType":"YulExpressionStatement","src":"22330:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22455:6:31","nodeType":"YulIdentifier","src":"22455:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22468:9:31","nodeType":"YulIdentifier","src":"22468:9:31"},{"kind":"number","nativeSrc":"22479:2:31","nodeType":"YulLiteral","src":"22479:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22464:3:31","nodeType":"YulIdentifier","src":"22464:3:31"},"nativeSrc":"22464:18:31","nodeType":"YulFunctionCall","src":"22464:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22411:43:31","nodeType":"YulIdentifier","src":"22411:43:31"},"nativeSrc":"22411:72:31","nodeType":"YulFunctionCall","src":"22411:72:31"},"nativeSrc":"22411:72:31","nodeType":"YulExpressionStatement","src":"22411:72:31"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"22158:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22248:9:31","nodeType":"YulTypedName","src":"22248:9:31","type":""},{"name":"value1","nativeSrc":"22260:6:31","nodeType":"YulTypedName","src":"22260:6:31","type":""},{"name":"value0","nativeSrc":"22268:6:31","nodeType":"YulTypedName","src":"22268:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22279:4:31","nodeType":"YulTypedName","src":"22279:4:31","type":""}],"src":"22158:332:31"},{"body":{"nativeSrc":"22706:454:31","nodeType":"YulBlock","src":"22706:454:31","statements":[{"nativeSrc":"22716:27:31","nodeType":"YulAssignment","src":"22716:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"22728:9:31","nodeType":"YulIdentifier","src":"22728:9:31"},{"kind":"number","nativeSrc":"22739:3:31","nodeType":"YulLiteral","src":"22739:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"22724:3:31","nodeType":"YulIdentifier","src":"22724:3:31"},"nativeSrc":"22724:19:31","nodeType":"YulFunctionCall","src":"22724:19:31"},"variableNames":[{"name":"tail","nativeSrc":"22716:4:31","nodeType":"YulIdentifier","src":"22716:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22797:6:31","nodeType":"YulIdentifier","src":"22797:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22810:9:31","nodeType":"YulIdentifier","src":"22810:9:31"},{"kind":"number","nativeSrc":"22821:1:31","nodeType":"YulLiteral","src":"22821:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22806:3:31","nodeType":"YulIdentifier","src":"22806:3:31"},"nativeSrc":"22806:17:31","nodeType":"YulFunctionCall","src":"22806:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22753:43:31","nodeType":"YulIdentifier","src":"22753:43:31"},"nativeSrc":"22753:71:31","nodeType":"YulFunctionCall","src":"22753:71:31"},"nativeSrc":"22753:71:31","nodeType":"YulExpressionStatement","src":"22753:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22878:6:31","nodeType":"YulIdentifier","src":"22878:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22891:9:31","nodeType":"YulIdentifier","src":"22891:9:31"},{"kind":"number","nativeSrc":"22902:2:31","nodeType":"YulLiteral","src":"22902:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22887:3:31","nodeType":"YulIdentifier","src":"22887:3:31"},"nativeSrc":"22887:18:31","nodeType":"YulFunctionCall","src":"22887:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22834:43:31","nodeType":"YulIdentifier","src":"22834:43:31"},"nativeSrc":"22834:72:31","nodeType":"YulFunctionCall","src":"22834:72:31"},"nativeSrc":"22834:72:31","nodeType":"YulExpressionStatement","src":"22834:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22960:6:31","nodeType":"YulIdentifier","src":"22960:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22973:9:31","nodeType":"YulIdentifier","src":"22973:9:31"},{"kind":"number","nativeSrc":"22984:2:31","nodeType":"YulLiteral","src":"22984:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22969:3:31","nodeType":"YulIdentifier","src":"22969:3:31"},"nativeSrc":"22969:18:31","nodeType":"YulFunctionCall","src":"22969:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"22916:43:31","nodeType":"YulIdentifier","src":"22916:43:31"},"nativeSrc":"22916:72:31","nodeType":"YulFunctionCall","src":"22916:72:31"},"nativeSrc":"22916:72:31","nodeType":"YulExpressionStatement","src":"22916:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"23042:6:31","nodeType":"YulIdentifier","src":"23042:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"23055:9:31","nodeType":"YulIdentifier","src":"23055:9:31"},{"kind":"number","nativeSrc":"23066:2:31","nodeType":"YulLiteral","src":"23066:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"23051:3:31","nodeType":"YulIdentifier","src":"23051:3:31"},"nativeSrc":"23051:18:31","nodeType":"YulFunctionCall","src":"23051:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22998:43:31","nodeType":"YulIdentifier","src":"22998:43:31"},"nativeSrc":"22998:72:31","nodeType":"YulFunctionCall","src":"22998:72:31"},"nativeSrc":"22998:72:31","nodeType":"YulExpressionStatement","src":"22998:72:31"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"23124:6:31","nodeType":"YulIdentifier","src":"23124:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"23137:9:31","nodeType":"YulIdentifier","src":"23137:9:31"},{"kind":"number","nativeSrc":"23148:3:31","nodeType":"YulLiteral","src":"23148:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"23133:3:31","nodeType":"YulIdentifier","src":"23133:3:31"},"nativeSrc":"23133:19:31","nodeType":"YulFunctionCall","src":"23133:19:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"23080:43:31","nodeType":"YulIdentifier","src":"23080:43:31"},"nativeSrc":"23080:73:31","nodeType":"YulFunctionCall","src":"23080:73:31"},"nativeSrc":"23080:73:31","nodeType":"YulExpressionStatement","src":"23080:73:31"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"22496:664:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22646:9:31","nodeType":"YulTypedName","src":"22646:9:31","type":""},{"name":"value4","nativeSrc":"22658:6:31","nodeType":"YulTypedName","src":"22658:6:31","type":""},{"name":"value3","nativeSrc":"22666:6:31","nodeType":"YulTypedName","src":"22666:6:31","type":""},{"name":"value2","nativeSrc":"22674:6:31","nodeType":"YulTypedName","src":"22674:6:31","type":""},{"name":"value1","nativeSrc":"22682:6:31","nodeType":"YulTypedName","src":"22682:6:31","type":""},{"name":"value0","nativeSrc":"22690:6:31","nodeType":"YulTypedName","src":"22690:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22701:4:31","nodeType":"YulTypedName","src":"22701:4:31","type":""}],"src":"22496:664:31"},{"body":{"nativeSrc":"23194:152:31","nodeType":"YulBlock","src":"23194:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"23211:1:31","nodeType":"YulLiteral","src":"23211:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"23214:77:31","nodeType":"YulLiteral","src":"23214:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"23204:6:31","nodeType":"YulIdentifier","src":"23204:6:31"},"nativeSrc":"23204:88:31","nodeType":"YulFunctionCall","src":"23204:88:31"},"nativeSrc":"23204:88:31","nodeType":"YulExpressionStatement","src":"23204:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23308:1:31","nodeType":"YulLiteral","src":"23308:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"23311:4:31","nodeType":"YulLiteral","src":"23311:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"23301:6:31","nodeType":"YulIdentifier","src":"23301:6:31"},"nativeSrc":"23301:15:31","nodeType":"YulFunctionCall","src":"23301:15:31"},"nativeSrc":"23301:15:31","nodeType":"YulExpressionStatement","src":"23301:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"23332:1:31","nodeType":"YulLiteral","src":"23332:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"23335:4:31","nodeType":"YulLiteral","src":"23335:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"23325:6:31","nodeType":"YulIdentifier","src":"23325:6:31"},"nativeSrc":"23325:15:31","nodeType":"YulFunctionCall","src":"23325:15:31"},"nativeSrc":"23325:15:31","nodeType":"YulExpressionStatement","src":"23325:15:31"}]},"name":"panic_error_0x12","nativeSrc":"23166:180:31","nodeType":"YulFunctionDefinition","src":"23166:180:31"},{"body":{"nativeSrc":"23478:206:31","nodeType":"YulBlock","src":"23478:206:31","statements":[{"nativeSrc":"23488:26:31","nodeType":"YulAssignment","src":"23488:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"23500:9:31","nodeType":"YulIdentifier","src":"23500:9:31"},{"kind":"number","nativeSrc":"23511:2:31","nodeType":"YulLiteral","src":"23511:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"23496:3:31","nodeType":"YulIdentifier","src":"23496:3:31"},"nativeSrc":"23496:18:31","nodeType":"YulFunctionCall","src":"23496:18:31"},"variableNames":[{"name":"tail","nativeSrc":"23488:4:31","nodeType":"YulIdentifier","src":"23488:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"23568:6:31","nodeType":"YulIdentifier","src":"23568:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"23581:9:31","nodeType":"YulIdentifier","src":"23581:9:31"},{"kind":"number","nativeSrc":"23592:1:31","nodeType":"YulLiteral","src":"23592:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23577:3:31","nodeType":"YulIdentifier","src":"23577:3:31"},"nativeSrc":"23577:17:31","nodeType":"YulFunctionCall","src":"23577:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23524:43:31","nodeType":"YulIdentifier","src":"23524:43:31"},"nativeSrc":"23524:71:31","nodeType":"YulFunctionCall","src":"23524:71:31"},"nativeSrc":"23524:71:31","nodeType":"YulExpressionStatement","src":"23524:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"23649:6:31","nodeType":"YulIdentifier","src":"23649:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"23662:9:31","nodeType":"YulIdentifier","src":"23662:9:31"},{"kind":"number","nativeSrc":"23673:2:31","nodeType":"YulLiteral","src":"23673:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23658:3:31","nodeType":"YulIdentifier","src":"23658:3:31"},"nativeSrc":"23658:18:31","nodeType":"YulFunctionCall","src":"23658:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"23605:43:31","nodeType":"YulIdentifier","src":"23605:43:31"},"nativeSrc":"23605:72:31","nodeType":"YulFunctionCall","src":"23605:72:31"},"nativeSrc":"23605:72:31","nodeType":"YulExpressionStatement","src":"23605:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"23352:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23442:9:31","nodeType":"YulTypedName","src":"23442:9:31","type":""},{"name":"value1","nativeSrc":"23454:6:31","nodeType":"YulTypedName","src":"23454:6:31","type":""},{"name":"value0","nativeSrc":"23462:6:31","nodeType":"YulTypedName","src":"23462:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"23473:4:31","nodeType":"YulTypedName","src":"23473:4:31","type":""}],"src":"23352:332:31"},{"body":{"nativeSrc":"23744:32:31","nodeType":"YulBlock","src":"23744:32:31","statements":[{"nativeSrc":"23754:16:31","nodeType":"YulAssignment","src":"23754:16:31","value":{"name":"value","nativeSrc":"23765:5:31","nodeType":"YulIdentifier","src":"23765:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"23754:7:31","nodeType":"YulIdentifier","src":"23754:7:31"}]}]},"name":"cleanup_t_rational_32_by_1","nativeSrc":"23690:86:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23726:5:31","nodeType":"YulTypedName","src":"23726:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"23736:7:31","nodeType":"YulTypedName","src":"23736:7:31","type":""}],"src":"23690:86:31"},{"body":{"nativeSrc":"23849:89:31","nodeType":"YulBlock","src":"23849:89:31","statements":[{"nativeSrc":"23859:73:31","nodeType":"YulAssignment","src":"23859:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23924:5:31","nodeType":"YulIdentifier","src":"23924:5:31"}],"functionName":{"name":"cleanup_t_rational_32_by_1","nativeSrc":"23897:26:31","nodeType":"YulIdentifier","src":"23897:26:31"},"nativeSrc":"23897:33:31","nodeType":"YulFunctionCall","src":"23897:33:31"}],"functionName":{"name":"identity","nativeSrc":"23888:8:31","nodeType":"YulIdentifier","src":"23888:8:31"},"nativeSrc":"23888:43:31","nodeType":"YulFunctionCall","src":"23888:43:31"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"23872:15:31","nodeType":"YulIdentifier","src":"23872:15:31"},"nativeSrc":"23872:60:31","nodeType":"YulFunctionCall","src":"23872:60:31"},"variableNames":[{"name":"converted","nativeSrc":"23859:9:31","nodeType":"YulIdentifier","src":"23859:9:31"}]}]},"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"23782:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23829:5:31","nodeType":"YulTypedName","src":"23829:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"23839:9:31","nodeType":"YulTypedName","src":"23839:9:31","type":""}],"src":"23782:156:31"},{"body":{"nativeSrc":"24016:73:31","nodeType":"YulBlock","src":"24016:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24033:3:31","nodeType":"YulIdentifier","src":"24033:3:31"},{"arguments":[{"name":"value","nativeSrc":"24076:5:31","nodeType":"YulIdentifier","src":"24076:5:31"}],"functionName":{"name":"convert_t_rational_32_by_1_to_t_uint8","nativeSrc":"24038:37:31","nodeType":"YulIdentifier","src":"24038:37:31"},"nativeSrc":"24038:44:31","nodeType":"YulFunctionCall","src":"24038:44:31"}],"functionName":{"name":"mstore","nativeSrc":"24026:6:31","nodeType":"YulIdentifier","src":"24026:6:31"},"nativeSrc":"24026:57:31","nodeType":"YulFunctionCall","src":"24026:57:31"},"nativeSrc":"24026:57:31","nodeType":"YulExpressionStatement","src":"24026:57:31"}]},"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"23944:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24004:5:31","nodeType":"YulTypedName","src":"24004:5:31","type":""},{"name":"pos","nativeSrc":"24011:3:31","nodeType":"YulTypedName","src":"24011:3:31","type":""}],"src":"23944:145:31"},{"body":{"nativeSrc":"24228:213:31","nodeType":"YulBlock","src":"24228:213:31","statements":[{"nativeSrc":"24238:26:31","nodeType":"YulAssignment","src":"24238:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"24250:9:31","nodeType":"YulIdentifier","src":"24250:9:31"},{"kind":"number","nativeSrc":"24261:2:31","nodeType":"YulLiteral","src":"24261:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24246:3:31","nodeType":"YulIdentifier","src":"24246:3:31"},"nativeSrc":"24246:18:31","nodeType":"YulFunctionCall","src":"24246:18:31"},"variableNames":[{"name":"tail","nativeSrc":"24238:4:31","nodeType":"YulIdentifier","src":"24238:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24325:6:31","nodeType":"YulIdentifier","src":"24325:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24338:9:31","nodeType":"YulIdentifier","src":"24338:9:31"},{"kind":"number","nativeSrc":"24349:1:31","nodeType":"YulLiteral","src":"24349:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24334:3:31","nodeType":"YulIdentifier","src":"24334:3:31"},"nativeSrc":"24334:17:31","nodeType":"YulFunctionCall","src":"24334:17:31"}],"functionName":{"name":"abi_encode_t_rational_32_by_1_to_t_uint8_fromStack","nativeSrc":"24274:50:31","nodeType":"YulIdentifier","src":"24274:50:31"},"nativeSrc":"24274:78:31","nodeType":"YulFunctionCall","src":"24274:78:31"},"nativeSrc":"24274:78:31","nodeType":"YulExpressionStatement","src":"24274:78:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24406:6:31","nodeType":"YulIdentifier","src":"24406:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24419:9:31","nodeType":"YulIdentifier","src":"24419:9:31"},{"kind":"number","nativeSrc":"24430:2:31","nodeType":"YulLiteral","src":"24430:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24415:3:31","nodeType":"YulIdentifier","src":"24415:3:31"},"nativeSrc":"24415:18:31","nodeType":"YulFunctionCall","src":"24415:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24362:43:31","nodeType":"YulIdentifier","src":"24362:43:31"},"nativeSrc":"24362:72:31","nodeType":"YulFunctionCall","src":"24362:72:31"},"nativeSrc":"24362:72:31","nodeType":"YulExpressionStatement","src":"24362:72:31"}]},"name":"abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"24095:346:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24192:9:31","nodeType":"YulTypedName","src":"24192:9:31","type":""},{"name":"value1","nativeSrc":"24204:6:31","nodeType":"YulTypedName","src":"24204:6:31","type":""},{"name":"value0","nativeSrc":"24212:6:31","nodeType":"YulTypedName","src":"24212:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24223:4:31","nodeType":"YulTypedName","src":"24223:4:31","type":""}],"src":"24095:346:31"},{"body":{"nativeSrc":"24625:367:31","nodeType":"YulBlock","src":"24625:367:31","statements":[{"nativeSrc":"24635:27:31","nodeType":"YulAssignment","src":"24635:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"24647:9:31","nodeType":"YulIdentifier","src":"24647:9:31"},{"kind":"number","nativeSrc":"24658:3:31","nodeType":"YulLiteral","src":"24658:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24643:3:31","nodeType":"YulIdentifier","src":"24643:3:31"},"nativeSrc":"24643:19:31","nodeType":"YulFunctionCall","src":"24643:19:31"},"variableNames":[{"name":"tail","nativeSrc":"24635:4:31","nodeType":"YulIdentifier","src":"24635:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24716:6:31","nodeType":"YulIdentifier","src":"24716:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24729:9:31","nodeType":"YulIdentifier","src":"24729:9:31"},{"kind":"number","nativeSrc":"24740:1:31","nodeType":"YulLiteral","src":"24740:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24725:3:31","nodeType":"YulIdentifier","src":"24725:3:31"},"nativeSrc":"24725:17:31","nodeType":"YulFunctionCall","src":"24725:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24672:43:31","nodeType":"YulIdentifier","src":"24672:43:31"},"nativeSrc":"24672:71:31","nodeType":"YulFunctionCall","src":"24672:71:31"},"nativeSrc":"24672:71:31","nodeType":"YulExpressionStatement","src":"24672:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24793:6:31","nodeType":"YulIdentifier","src":"24793:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24806:9:31","nodeType":"YulIdentifier","src":"24806:9:31"},{"kind":"number","nativeSrc":"24817:2:31","nodeType":"YulLiteral","src":"24817:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24802:3:31","nodeType":"YulIdentifier","src":"24802:3:31"},"nativeSrc":"24802:18:31","nodeType":"YulFunctionCall","src":"24802:18:31"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"24753:39:31","nodeType":"YulIdentifier","src":"24753:39:31"},"nativeSrc":"24753:68:31","nodeType":"YulFunctionCall","src":"24753:68:31"},"nativeSrc":"24753:68:31","nodeType":"YulExpressionStatement","src":"24753:68:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24875:6:31","nodeType":"YulIdentifier","src":"24875:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24888:9:31","nodeType":"YulIdentifier","src":"24888:9:31"},{"kind":"number","nativeSrc":"24899:2:31","nodeType":"YulLiteral","src":"24899:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24884:3:31","nodeType":"YulIdentifier","src":"24884:3:31"},"nativeSrc":"24884:18:31","nodeType":"YulFunctionCall","src":"24884:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24831:43:31","nodeType":"YulIdentifier","src":"24831:43:31"},"nativeSrc":"24831:72:31","nodeType":"YulFunctionCall","src":"24831:72:31"},"nativeSrc":"24831:72:31","nodeType":"YulExpressionStatement","src":"24831:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"24957:6:31","nodeType":"YulIdentifier","src":"24957:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24970:9:31","nodeType":"YulIdentifier","src":"24970:9:31"},{"kind":"number","nativeSrc":"24981:2:31","nodeType":"YulLiteral","src":"24981:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24966:3:31","nodeType":"YulIdentifier","src":"24966:3:31"},"nativeSrc":"24966:18:31","nodeType":"YulFunctionCall","src":"24966:18:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"24913:43:31","nodeType":"YulIdentifier","src":"24913:43:31"},"nativeSrc":"24913:72:31","nodeType":"YulFunctionCall","src":"24913:72:31"},"nativeSrc":"24913:72:31","nodeType":"YulExpressionStatement","src":"24913:72:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"24447:545:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24573:9:31","nodeType":"YulTypedName","src":"24573:9:31","type":""},{"name":"value3","nativeSrc":"24585:6:31","nodeType":"YulTypedName","src":"24585:6:31","type":""},{"name":"value2","nativeSrc":"24593:6:31","nodeType":"YulTypedName","src":"24593:6:31","type":""},{"name":"value1","nativeSrc":"24601:6:31","nodeType":"YulTypedName","src":"24601:6:31","type":""},{"name":"value0","nativeSrc":"24609:6:31","nodeType":"YulTypedName","src":"24609:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24620:4:31","nodeType":"YulTypedName","src":"24620:4:31","type":""}],"src":"24447:545:31"},{"body":{"nativeSrc":"25026:152:31","nodeType":"YulBlock","src":"25026:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25043:1:31","nodeType":"YulLiteral","src":"25043:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"25046:77:31","nodeType":"YulLiteral","src":"25046:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"25036:6:31","nodeType":"YulIdentifier","src":"25036:6:31"},"nativeSrc":"25036:88:31","nodeType":"YulFunctionCall","src":"25036:88:31"},"nativeSrc":"25036:88:31","nodeType":"YulExpressionStatement","src":"25036:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"25140:1:31","nodeType":"YulLiteral","src":"25140:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"25143:4:31","nodeType":"YulLiteral","src":"25143:4:31","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"25133:6:31","nodeType":"YulIdentifier","src":"25133:6:31"},"nativeSrc":"25133:15:31","nodeType":"YulFunctionCall","src":"25133:15:31"},"nativeSrc":"25133:15:31","nodeType":"YulExpressionStatement","src":"25133:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"25164:1:31","nodeType":"YulLiteral","src":"25164:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"25167:4:31","nodeType":"YulLiteral","src":"25167:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"25157:6:31","nodeType":"YulIdentifier","src":"25157:6:31"},"nativeSrc":"25157:15:31","nodeType":"YulFunctionCall","src":"25157:15:31"},"nativeSrc":"25157:15:31","nodeType":"YulExpressionStatement","src":"25157:15:31"}]},"name":"panic_error_0x21","nativeSrc":"24998:180:31","nodeType":"YulFunctionDefinition","src":"24998:180:31"},{"body":{"nativeSrc":"25212:152:31","nodeType":"YulBlock","src":"25212:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25229:1:31","nodeType":"YulLiteral","src":"25229:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"25232:77:31","nodeType":"YulLiteral","src":"25232:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"25222:6:31","nodeType":"YulIdentifier","src":"25222:6:31"},"nativeSrc":"25222:88:31","nodeType":"YulFunctionCall","src":"25222:88:31"},"nativeSrc":"25222:88:31","nodeType":"YulExpressionStatement","src":"25222:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"25326:1:31","nodeType":"YulLiteral","src":"25326:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"25329:4:31","nodeType":"YulLiteral","src":"25329:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"25319:6:31","nodeType":"YulIdentifier","src":"25319:6:31"},"nativeSrc":"25319:15:31","nodeType":"YulFunctionCall","src":"25319:15:31"},"nativeSrc":"25319:15:31","nodeType":"YulExpressionStatement","src":"25319:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"25350:1:31","nodeType":"YulLiteral","src":"25350:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"25353:4:31","nodeType":"YulLiteral","src":"25353:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"25343:6:31","nodeType":"YulIdentifier","src":"25343:6:31"},"nativeSrc":"25343:15:31","nodeType":"YulFunctionCall","src":"25343:15:31"},"nativeSrc":"25343:15:31","nodeType":"YulExpressionStatement","src":"25343:15:31"}]},"name":"panic_error_0x32","nativeSrc":"25184:180:31","nodeType":"YulFunctionDefinition","src":"25184:180:31"},{"body":{"nativeSrc":"25412:143:31","nodeType":"YulBlock","src":"25412:143:31","statements":[{"nativeSrc":"25422:25:31","nodeType":"YulAssignment","src":"25422:25:31","value":{"arguments":[{"name":"x","nativeSrc":"25445:1:31","nodeType":"YulIdentifier","src":"25445:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"25427:17:31","nodeType":"YulIdentifier","src":"25427:17:31"},"nativeSrc":"25427:20:31","nodeType":"YulFunctionCall","src":"25427:20:31"},"variableNames":[{"name":"x","nativeSrc":"25422:1:31","nodeType":"YulIdentifier","src":"25422:1:31"}]},{"nativeSrc":"25456:25:31","nodeType":"YulAssignment","src":"25456:25:31","value":{"arguments":[{"name":"y","nativeSrc":"25479:1:31","nodeType":"YulIdentifier","src":"25479:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"25461:17:31","nodeType":"YulIdentifier","src":"25461:17:31"},"nativeSrc":"25461:20:31","nodeType":"YulFunctionCall","src":"25461:20:31"},"variableNames":[{"name":"y","nativeSrc":"25456:1:31","nodeType":"YulIdentifier","src":"25456:1:31"}]},{"body":{"nativeSrc":"25503:22:31","nodeType":"YulBlock","src":"25503:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"25505:16:31","nodeType":"YulIdentifier","src":"25505:16:31"},"nativeSrc":"25505:18:31","nodeType":"YulFunctionCall","src":"25505:18:31"},"nativeSrc":"25505:18:31","nodeType":"YulExpressionStatement","src":"25505:18:31"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"25500:1:31","nodeType":"YulIdentifier","src":"25500:1:31"}],"functionName":{"name":"iszero","nativeSrc":"25493:6:31","nodeType":"YulIdentifier","src":"25493:6:31"},"nativeSrc":"25493:9:31","nodeType":"YulFunctionCall","src":"25493:9:31"},"nativeSrc":"25490:35:31","nodeType":"YulIf","src":"25490:35:31"},{"nativeSrc":"25535:14:31","nodeType":"YulAssignment","src":"25535:14:31","value":{"arguments":[{"name":"x","nativeSrc":"25544:1:31","nodeType":"YulIdentifier","src":"25544:1:31"},{"name":"y","nativeSrc":"25547:1:31","nodeType":"YulIdentifier","src":"25547:1:31"}],"functionName":{"name":"div","nativeSrc":"25540:3:31","nodeType":"YulIdentifier","src":"25540:3:31"},"nativeSrc":"25540:9:31","nodeType":"YulFunctionCall","src":"25540:9:31"},"variableNames":[{"name":"r","nativeSrc":"25535:1:31","nodeType":"YulIdentifier","src":"25535:1:31"}]}]},"name":"checked_div_t_uint256","nativeSrc":"25370:185:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"25401:1:31","nodeType":"YulTypedName","src":"25401:1:31","type":""},{"name":"y","nativeSrc":"25404:1:31","nodeType":"YulTypedName","src":"25404:1:31","type":""}],"returnVariables":[{"name":"r","nativeSrc":"25410:1:31","nodeType":"YulTypedName","src":"25410:1:31","type":""}],"src":"25370:185:31"},{"body":{"nativeSrc":"25606:202:31","nodeType":"YulBlock","src":"25606:202:31","statements":[{"nativeSrc":"25616:25:31","nodeType":"YulAssignment","src":"25616:25:31","value":{"arguments":[{"name":"x","nativeSrc":"25639:1:31","nodeType":"YulIdentifier","src":"25639:1:31"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"25621:17:31","nodeType":"YulIdentifier","src":"25621:17:31"},"nativeSrc":"25621:20:31","nodeType":"YulFunctionCall","src":"25621:20:31"},"variableNames":[{"name":"x","nativeSrc":"25616:1:31","nodeType":"YulIdentifier","src":"25616:1:31"}]},{"nativeSrc":"25650:25:31","nodeType":"YulAssignment","src":"25650:25:31","value":{"arguments":[{"name":"y","nativeSrc":"25673:1:31","nodeType":"YulIdentifier","src":"25673:1:31"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"25655:17:31","nodeType":"YulIdentifier","src":"25655:17:31"},"nativeSrc":"25655:20:31","nodeType":"YulFunctionCall","src":"25655:20:31"},"variableNames":[{"name":"y","nativeSrc":"25650:1:31","nodeType":"YulIdentifier","src":"25650:1:31"}]},{"nativeSrc":"25684:17:31","nodeType":"YulAssignment","src":"25684:17:31","value":{"arguments":[{"name":"x","nativeSrc":"25696:1:31","nodeType":"YulIdentifier","src":"25696:1:31"},{"name":"y","nativeSrc":"25699:1:31","nodeType":"YulIdentifier","src":"25699:1:31"}],"functionName":{"name":"sub","nativeSrc":"25692:3:31","nodeType":"YulIdentifier","src":"25692:3:31"},"nativeSrc":"25692:9:31","nodeType":"YulFunctionCall","src":"25692:9:31"},"variableNames":[{"name":"diff","nativeSrc":"25684:4:31","nodeType":"YulIdentifier","src":"25684:4:31"}]},{"body":{"nativeSrc":"25779:22:31","nodeType":"YulBlock","src":"25779:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"25781:16:31","nodeType":"YulIdentifier","src":"25781:16:31"},"nativeSrc":"25781:18:31","nodeType":"YulFunctionCall","src":"25781:18:31"},"nativeSrc":"25781:18:31","nodeType":"YulExpressionStatement","src":"25781:18:31"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"25717:4:31","nodeType":"YulIdentifier","src":"25717:4:31"},{"kind":"number","nativeSrc":"25723:54:31","nodeType":"YulLiteral","src":"25723:54:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25714:2:31","nodeType":"YulIdentifier","src":"25714:2:31"},"nativeSrc":"25714:64:31","nodeType":"YulFunctionCall","src":"25714:64:31"},"nativeSrc":"25711:90:31","nodeType":"YulIf","src":"25711:90:31"}]},"name":"checked_sub_t_uint208","nativeSrc":"25561:247:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"25592:1:31","nodeType":"YulTypedName","src":"25592:1:31","type":""},{"name":"y","nativeSrc":"25595:1:31","nodeType":"YulTypedName","src":"25595:1:31","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"25601:4:31","nodeType":"YulTypedName","src":"25601:4:31","type":""}],"src":"25561:247:31"},{"body":{"nativeSrc":"25869:32:31","nodeType":"YulBlock","src":"25869:32:31","statements":[{"nativeSrc":"25879:16:31","nodeType":"YulAssignment","src":"25879:16:31","value":{"name":"value","nativeSrc":"25890:5:31","nodeType":"YulIdentifier","src":"25890:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"25879:7:31","nodeType":"YulIdentifier","src":"25879:7:31"}]}]},"name":"cleanup_t_rational_208_by_1","nativeSrc":"25814:87:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25851:5:31","nodeType":"YulTypedName","src":"25851:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"25861:7:31","nodeType":"YulTypedName","src":"25861:7:31","type":""}],"src":"25814:87:31"},{"body":{"nativeSrc":"25975:90:31","nodeType":"YulBlock","src":"25975:90:31","statements":[{"nativeSrc":"25985:74:31","nodeType":"YulAssignment","src":"25985:74:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26051:5:31","nodeType":"YulIdentifier","src":"26051:5:31"}],"functionName":{"name":"cleanup_t_rational_208_by_1","nativeSrc":"26023:27:31","nodeType":"YulIdentifier","src":"26023:27:31"},"nativeSrc":"26023:34:31","nodeType":"YulFunctionCall","src":"26023:34:31"}],"functionName":{"name":"identity","nativeSrc":"26014:8:31","nodeType":"YulIdentifier","src":"26014:8:31"},"nativeSrc":"26014:44:31","nodeType":"YulFunctionCall","src":"26014:44:31"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"25998:15:31","nodeType":"YulIdentifier","src":"25998:15:31"},"nativeSrc":"25998:61:31","nodeType":"YulFunctionCall","src":"25998:61:31"},"variableNames":[{"name":"converted","nativeSrc":"25985:9:31","nodeType":"YulIdentifier","src":"25985:9:31"}]}]},"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"25907:158:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"25955:5:31","nodeType":"YulTypedName","src":"25955:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"25965:9:31","nodeType":"YulTypedName","src":"25965:9:31","type":""}],"src":"25907:158:31"},{"body":{"nativeSrc":"26144:74:31","nodeType":"YulBlock","src":"26144:74:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"26161:3:31","nodeType":"YulIdentifier","src":"26161:3:31"},{"arguments":[{"name":"value","nativeSrc":"26205:5:31","nodeType":"YulIdentifier","src":"26205:5:31"}],"functionName":{"name":"convert_t_rational_208_by_1_to_t_uint8","nativeSrc":"26166:38:31","nodeType":"YulIdentifier","src":"26166:38:31"},"nativeSrc":"26166:45:31","nodeType":"YulFunctionCall","src":"26166:45:31"}],"functionName":{"name":"mstore","nativeSrc":"26154:6:31","nodeType":"YulIdentifier","src":"26154:6:31"},"nativeSrc":"26154:58:31","nodeType":"YulFunctionCall","src":"26154:58:31"},"nativeSrc":"26154:58:31","nodeType":"YulExpressionStatement","src":"26154:58:31"}]},"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"26071:147:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26132:5:31","nodeType":"YulTypedName","src":"26132:5:31","type":""},{"name":"pos","nativeSrc":"26139:3:31","nodeType":"YulTypedName","src":"26139:3:31","type":""}],"src":"26071:147:31"},{"body":{"nativeSrc":"26358:214:31","nodeType":"YulBlock","src":"26358:214:31","statements":[{"nativeSrc":"26368:26:31","nodeType":"YulAssignment","src":"26368:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"26380:9:31","nodeType":"YulIdentifier","src":"26380:9:31"},{"kind":"number","nativeSrc":"26391:2:31","nodeType":"YulLiteral","src":"26391:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26376:3:31","nodeType":"YulIdentifier","src":"26376:3:31"},"nativeSrc":"26376:18:31","nodeType":"YulFunctionCall","src":"26376:18:31"},"variableNames":[{"name":"tail","nativeSrc":"26368:4:31","nodeType":"YulIdentifier","src":"26368:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"26456:6:31","nodeType":"YulIdentifier","src":"26456:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"26469:9:31","nodeType":"YulIdentifier","src":"26469:9:31"},{"kind":"number","nativeSrc":"26480:1:31","nodeType":"YulLiteral","src":"26480:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26465:3:31","nodeType":"YulIdentifier","src":"26465:3:31"},"nativeSrc":"26465:17:31","nodeType":"YulFunctionCall","src":"26465:17:31"}],"functionName":{"name":"abi_encode_t_rational_208_by_1_to_t_uint8_fromStack","nativeSrc":"26404:51:31","nodeType":"YulIdentifier","src":"26404:51:31"},"nativeSrc":"26404:79:31","nodeType":"YulFunctionCall","src":"26404:79:31"},"nativeSrc":"26404:79:31","nodeType":"YulExpressionStatement","src":"26404:79:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"26537:6:31","nodeType":"YulIdentifier","src":"26537:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"26550:9:31","nodeType":"YulIdentifier","src":"26550:9:31"},{"kind":"number","nativeSrc":"26561:2:31","nodeType":"YulLiteral","src":"26561:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26546:3:31","nodeType":"YulIdentifier","src":"26546:3:31"},"nativeSrc":"26546:18:31","nodeType":"YulFunctionCall","src":"26546:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"26493:43:31","nodeType":"YulIdentifier","src":"26493:43:31"},"nativeSrc":"26493:72:31","nodeType":"YulFunctionCall","src":"26493:72:31"},"nativeSrc":"26493:72:31","nodeType":"YulExpressionStatement","src":"26493:72:31"}]},"name":"abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nativeSrc":"26224:348:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26322:9:31","nodeType":"YulTypedName","src":"26322:9:31","type":""},{"name":"value1","nativeSrc":"26334:6:31","nodeType":"YulTypedName","src":"26334:6:31","type":""},{"name":"value0","nativeSrc":"26342:6:31","nodeType":"YulTypedName","src":"26342:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26353:4:31","nodeType":"YulTypedName","src":"26353:4:31","type":""}],"src":"26224:348:31"},{"body":{"nativeSrc":"26622:200:31","nodeType":"YulBlock","src":"26622:200:31","statements":[{"nativeSrc":"26632:25:31","nodeType":"YulAssignment","src":"26632:25:31","value":{"arguments":[{"name":"x","nativeSrc":"26655:1:31","nodeType":"YulIdentifier","src":"26655:1:31"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"26637:17:31","nodeType":"YulIdentifier","src":"26637:17:31"},"nativeSrc":"26637:20:31","nodeType":"YulFunctionCall","src":"26637:20:31"},"variableNames":[{"name":"x","nativeSrc":"26632:1:31","nodeType":"YulIdentifier","src":"26632:1:31"}]},{"nativeSrc":"26666:25:31","nodeType":"YulAssignment","src":"26666:25:31","value":{"arguments":[{"name":"y","nativeSrc":"26689:1:31","nodeType":"YulIdentifier","src":"26689:1:31"}],"functionName":{"name":"cleanup_t_uint208","nativeSrc":"26671:17:31","nodeType":"YulIdentifier","src":"26671:17:31"},"nativeSrc":"26671:20:31","nodeType":"YulFunctionCall","src":"26671:20:31"},"variableNames":[{"name":"y","nativeSrc":"26666:1:31","nodeType":"YulIdentifier","src":"26666:1:31"}]},{"nativeSrc":"26700:16:31","nodeType":"YulAssignment","src":"26700:16:31","value":{"arguments":[{"name":"x","nativeSrc":"26711:1:31","nodeType":"YulIdentifier","src":"26711:1:31"},{"name":"y","nativeSrc":"26714:1:31","nodeType":"YulIdentifier","src":"26714:1:31"}],"functionName":{"name":"add","nativeSrc":"26707:3:31","nodeType":"YulIdentifier","src":"26707:3:31"},"nativeSrc":"26707:9:31","nodeType":"YulFunctionCall","src":"26707:9:31"},"variableNames":[{"name":"sum","nativeSrc":"26700:3:31","nodeType":"YulIdentifier","src":"26700:3:31"}]},{"body":{"nativeSrc":"26793:22:31","nodeType":"YulBlock","src":"26793:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"26795:16:31","nodeType":"YulIdentifier","src":"26795:16:31"},"nativeSrc":"26795:18:31","nodeType":"YulFunctionCall","src":"26795:18:31"},"nativeSrc":"26795:18:31","nodeType":"YulExpressionStatement","src":"26795:18:31"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"26732:3:31","nodeType":"YulIdentifier","src":"26732:3:31"},{"kind":"number","nativeSrc":"26737:54:31","nodeType":"YulLiteral","src":"26737:54:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"26729:2:31","nodeType":"YulIdentifier","src":"26729:2:31"},"nativeSrc":"26729:63:31","nodeType":"YulFunctionCall","src":"26729:63:31"},"nativeSrc":"26726:89:31","nodeType":"YulIf","src":"26726:89:31"}]},"name":"checked_add_t_uint208","nativeSrc":"26578:244:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"26609:1:31","nodeType":"YulTypedName","src":"26609:1:31","type":""},{"name":"y","nativeSrc":"26612:1:31","nodeType":"YulTypedName","src":"26612:1:31","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"26618:3:31","nodeType":"YulTypedName","src":"26618:3:31","type":""}],"src":"26578:244:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function cleanup_t_uint208(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint208_to_t_uint208(value, pos) {\n        mstore(pos, cleanup_t_uint208(value))\n    }\n\n    // struct Checkpoints.Checkpoint208 -> struct Checkpoints.Checkpoint208\n    function abi_encode_t_struct$_Checkpoint208_$6955_memory_ptr_to_t_struct$_Checkpoint208_$6955_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // _key\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint208_to_t_uint208(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint208_$6955_memory_ptr__to_t_struct$_Checkpoint208_$6955_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint208_$6955_memory_ptr_to_t_struct$_Checkpoint208_$6955_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint48__to_t_uint256_t_uint48__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_48_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_48_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_48_by_1(value)))\n    }\n\n    function abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_48_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_48_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_48_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_32_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_32_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_32_by_1(value)))\n    }\n\n    function abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_32_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_32_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_32_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint208(x, y) -> diff {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_208_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_208_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_208_by_1(value)))\n    }\n\n    function abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_208_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_208_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_208_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint208(x, y) -> sum {\n        x := cleanup_t_uint208(x)\n        y := cleanup_t_uint208(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3186":[{"length":32,"start":5374}],"3188":[{"length":32,"start":5333}],"3190":[{"length":32,"start":5247}],"3192":[{"length":32,"start":7710}],"3194":[{"length":32,"start":7743}],"3197":[{"length":32,"start":6546}],"3200":[{"length":32,"start":6605}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063a217fddf116100a2578063d539139311610071578063d539139314610621578063d547741f1461063f578063dd62ed3e1461065b578063f1127ed81461068b576101f0565b8063a217fddf1461059b578063a9059cbb146105b9578063c3cda520146105e9578063d505accf14610605576101f0565b806391d14854116100de57806391d14854146104ff57806391ddadf41461052f57806395d89b411461054d5780639ab24eb01461056b576101f0565b806370a082311461044b5780637ecebe001461047b57806384b0196e146104ab5780638e539e8c146104cf576101f0565b80633644e515116101875780634bf5d7e9116101565780634bf5d7e9146103b1578063587cde1e146103cf5780635c19a95c146103ff5780636fcfff451461041b576101f0565b80633644e5151461032b57806336568abe146103495780633a46b1a81461036557806340c10f1914610395576101f0565b806323b872dd116101c357806323b872dd14610291578063248a9ca3146102c15780632f2ff15d146102f1578063313ce5671461030d576101f0565b806301ffc9a7146101f557806306fdde0314610225578063095ea7b31461024357806318160ddd14610273575b600080fd5b61020f600480360381019061020a919061321c565b6106bb565b60405161021c9190613264565b60405180910390f35b61022d610735565b60405161023a919061330f565b60405180910390f35b61025d600480360381019061025891906133c5565b6107c7565b60405161026a9190613264565b60405180910390f35b61027b6107ea565b6040516102889190613414565b60405180910390f35b6102ab60048036038101906102a6919061342f565b6107f4565b6040516102b89190613264565b60405180910390f35b6102db60048036038101906102d691906134b8565b610823565b6040516102e891906134f4565b60405180910390f35b61030b6004803603810190610306919061350f565b610843565b005b610315610865565b604051610322919061356b565b60405180910390f35b61033361086e565b60405161034091906134f4565b60405180910390f35b610363600480360381019061035e919061350f565b61087d565b005b61037f600480360381019061037a91906133c5565b6108f8565b60405161038c9190613414565b60405180910390f35b6103af60048036038101906103aa91906133c5565b6109d1565b005b6103b9610a0a565b6040516103c6919061330f565b60405180910390f35b6103e960048036038101906103e49190613586565b610a9e565b6040516103f691906135c2565b60405180910390f35b61041960048036038101906104149190613586565b610b07565b005b61043560048036038101906104309190613586565b610b21565b60405161044291906135fc565b60405180910390f35b61046560048036038101906104609190613586565b610b33565b6040516104729190613414565b60405180910390f35b61049560048036038101906104909190613586565b610b7b565b6040516104a29190613414565b60405180910390f35b6104b3610b8d565b6040516104c69796959493929190613710565b60405180910390f35b6104e960048036038101906104e49190613794565b610c37565b6040516104f69190613414565b60405180910390f35b6105196004803603810190610514919061350f565b610cd2565b6040516105269190613264565b60405180910390f35b610537610d3d565b60405161054491906137e2565b60405180910390f35b610555610d4c565b604051610562919061330f565b60405180910390f35b61058560048036038101906105809190613586565b610dde565b6040516105929190613414565b60405180910390f35b6105a3610e4a565b6040516105b091906134f4565b60405180910390f35b6105d360048036038101906105ce91906133c5565b610e51565b6040516105e09190613264565b60405180910390f35b61060360048036038101906105fe9190613829565b610e74565b005b61061f600480360381019061061a91906138b6565b610f3a565b005b610629611082565b60405161063691906134f4565b60405180910390f35b6106596004803603810190610654919061350f565b6110a6565b005b61067560048036038101906106709190613958565b6110c8565b6040516106829190613414565b60405180910390f35b6106a560048036038101906106a091906139c4565b61114f565b6040516106b29190613a77565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061072e575061072d82611169565b5b9050919050565b60606003805461074490613ac1565b80601f016020809104026020016040519081016040528092919081815260200182805461077090613ac1565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b5050505050905090565b6000806107d26111d3565b90506107df8185856111db565b600191505092915050565b6000600254905090565b6000806107ff6111d3565b905061080c8582856111ed565b610817858585611281565b60019150509392505050565b6000600b6000838152602001908152602001600020600101549050919050565b61084c82610823565b61085581611375565b61085f8383611389565b50505050565b60006012905090565b600061087861147b565b905090565b6108856111d3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108e9576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f38282611532565b505050565b600080610903610d3d565b90508065ffffffffffff1683106109535782816040517fecd3f81e00000000000000000000000000000000000000000000000000000000815260040161094a929190613af2565b60405180910390fd5b6109ac61095f84611625565b600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061167f90919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff1691505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109fb81611375565b610a058383611779565b505050565b6060610a146117fb565b65ffffffffffff16610a24610d3d565b65ffffffffffff1614610a63576040517f6ff0714000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280601d81526020017f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000815250905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b116111d3565b9050610b1d818361180b565b5050565b6000610b2c8261191f565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610b8682611977565b9050919050565b600060608060008060006060610ba1611989565b610ba96119c4565b46306000801b600067ffffffffffffffff811115610bca57610bc9613b1b565b5b604051908082528060200260200182016040528015610bf85781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600080610c42610d3d565b90508065ffffffffffff168310610c925782816040517fecd3f81e000000000000000000000000000000000000000000000000000000008152600401610c89929190613af2565b60405180910390fd5b610cae610c9e84611625565b600a61167f90919063ffffffff16565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b6000600b600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610d476117fb565b905090565b606060048054610d5b90613ac1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8790613ac1565b8015610dd45780601f10610da957610100808354040283529160200191610dd4565b820191906000526020600020905b815481529060010190602001808311610db757829003601f168201915b5050505050905090565b6000610e27600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206119ff565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff169050919050565b6000801b81565b600080610e5c6111d3565b9050610e69818585611281565b600191505092915050565b83421115610eb957836040517f4683af0e000000000000000000000000000000000000000000000000000000008152600401610eb09190613414565b60405180910390fd5b6000610f1b610f137fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610ef89493929190613b4a565b60405160208183030381529060405280519060200120611a67565b858585611a81565b9050610f278187611ab1565b610f31818861180b565b50505050505050565b83421115610f7f57836040517f62791302000000000000000000000000000000000000000000000000000000008152600401610f769190613414565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610fae8c611b09565b89604051602001610fc496959493929190613b8f565b6040516020818303038152906040528051906020012090506000610fe782611a67565b90506000610ff782878787611a81565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461106b57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401611062929190613bf0565b60405180910390fd5b6110768a8a8a6111db565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6110af82610823565b6110b881611375565b6110c28383611532565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611157613181565b6111618383611b60565b905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b6111e88383836001611bc1565b505050565b60006111f984846110c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461127b578181101561126b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161126293929190613c19565b60405180910390fd5b61127a84848484036000611bc1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112f35760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112ea91906135c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113655760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161135c91906135c2565b60405180910390fd5b611370838383611d98565b505050565b611386816113816111d3565b611da8565b50565b60006113958383610cd2565b611470576001600b600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061140d6111d3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611475565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480156114f757507f000000000000000000000000000000000000000000000000000000000000000046145b15611524577f0000000000000000000000000000000000000000000000000000000000000000905061152f565b61152c611df9565b90505b90565b600061153e8383610cd2565b1561161a576000600b600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506115b76111d3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061161f565b600090505b92915050565b600065ffffffffffff8016821115611677576030826040517f6dfcc65000000000000000000000000000000000000000000000000000000000815260040161166e929190613c95565b60405180910390fd5b819050919050565b6000808360000180549050905060008082905060058311156117075760006116a684611e8f565b846116b19190613ced565b90506116c08760000182611f88565b60000160009054906101000a900465ffffffffffff1665ffffffffffff168665ffffffffffff1610156116f557809150611705565b6001816117029190613d21565b92505b505b600061171887600001878585611f9d565b90506000811461176a5761173b876000016001836117369190613ced565b611f88565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1661176d565b60005b94505050505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117eb5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117e291906135c2565b60405180910390fd5b6117f760008383611d98565b5050565b600061180643611625565b905090565b600061181683610a9e565b905081600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a461191a818361191586612016565b612028565b505050565b600061197061196b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122a1565b6122b2565b9050919050565b60006119828261230a565b9050919050565b60606119bf60057f000000000000000000000000000000000000000000000000000000000000000061235390919063ffffffff16565b905090565b60606119fa60067f000000000000000000000000000000000000000000000000000000000000000061235390919063ffffffff16565b905090565b6000808260000180549050905060008114611a5c57611a2d83600001600183611a289190613ced565b611f88565b60000160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff16611a5f565b60005b915050919050565b6000611a7a611a7461147b565b83612403565b9050919050565b600080600080611a9388888888612444565b925092509250611aa38282612538565b829350505050949350505050565b6000611abc83611b09565b9050808214611b045782816040517f752d88c0000000000000000000000000000000000000000000000000000000008152600401611afb929190613d55565b60405180910390fd5b505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b611b68613181565b611bb982600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061269c90919063ffffffff16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611c335760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611c2a91906135c2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ca55760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611c9c91906135c2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611d92578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611d899190613414565b60405180910390a35b50505050565b611da3838383612771565b505050565b611db28282610cd2565b611df55780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611dec929190613d7e565b60405180910390fd5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611e74959493929190613da7565b60405160208183030381529060405280519060200120905090565b6000808203611ea15760009050611f83565b60006001611eae84612822565b901c6001901b90506001818481611ec857611ec7613dfa565b5b048201901c90506001818481611ee157611ee0613dfa565b5b048201901c90506001818481611efa57611ef9613dfa565b5b048201901c90506001818481611f1357611f12613dfa565b5b048201901c90506001818481611f2c57611f2b613dfa565b5b048201901c90506001818481611f4557611f44613dfa565b5b048201901c90506001818481611f5e57611f5d613dfa565b5b048201901c9050611f7f81828581611f7957611f78613dfa565b5b04612903565b9150505b919050565b60008260005281602060002001905092915050565b60005b8183101561200b576000611fb4848461291c565b90508465ffffffffffff16611fc98783611f88565b60000160009054906101000a900465ffffffffffff1665ffffffffffff161115611ff557809250612005565b6001816120029190613d21565b93505b50611fa0565b819050949350505050565b600061202182610b33565b9050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156120645750600081115b1561229c57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612182576000806120f3600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129426120ee86612958565b6129c6565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612177929190613e29565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461229b5760008061220c600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a0661220786612958565b6129c6565b79ffffffffffffffffffffffffffffffffffffffffffffffffffff16915079ffffffffffffffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612290929190613e29565b60405180910390a250505b5b505050565b600081600001805490509050919050565b600063ffffffff8016821115612302576020826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016122f9929190613e8d565b60405180910390fd5b819050919050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060ff60001b83146123705761236983612a1c565b90506123fd565b81805461237c90613ac1565b80601f01602080910402602001604051908101604052809291908181526020018280546123a890613ac1565b80156123f55780601f106123ca576101008083540402835291602001916123f5565b820191906000526020600020905b8154815290600101906020018083116123d857829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561248457600060038592509250925061252e565b6000600188888888604051600081526020016040526040516124a99493929190613eb6565b6020604051602081039080840390855afa1580156124cb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361251f57600060016000801b9350935093505061252e565b8060008060001b935093509350505b9450945094915050565b6000600381111561254c5761254b613efb565b5b82600381111561255f5761255e613efb565b5b0315612698576001600381111561257957612578613efb565b5b82600381111561258c5761258b613efb565b5b036125c3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156125d7576125d6613efb565b5b8260038111156125ea576125e9613efb565b5b0361262f578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016126269190613414565b60405180910390fd5b60038081111561264257612641613efb565b5b82600381111561265557612654613efb565b5b0361269757806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161268e91906134f4565b60405180910390fd5b5b5050565b6126a4613181565b826000018263ffffffff16815481106126c0576126bf613f2a565b5b906000526020600020016040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b61277c838383612a90565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036128125760006127ba6107ea565b905060006127c6612cb5565b90508082111561280f5781816040517f1cb15d26000000000000000000000000000000000000000000000000000000008152600401612806929190613e29565b60405180910390fd5b50505b61281d838383612cd9565b505050565b600080600090506000608084901c111561284457608083901c92506080810190505b6000604084901c111561285f57604083901c92506040810190505b6000602084901c111561287a57602083901c92506020810190505b6000601084901c111561289557601083901c92506010810190505b6000600884901c11156128b057600883901c92506008810190505b6000600484901c11156128cb57600483901c92506004810190505b6000600284901c11156128e657600283901c92506002810190505b6000600184901c11156128fa576001810190505b80915050919050565b60008183106129125781612914565b825b905092915050565b6000600282841861292d9190613f59565b82841661293a9190613d21565b905092915050565b600081836129509190613f8a565b905092915050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff80168211156129be5760d0826040517f6dfcc6500000000000000000000000000000000000000000000000000000000081526004016129b5929190614013565b60405180910390fd5b819050919050565b6000806129fa6129d4610d3d565b6129ea6129e0886119ff565b868863ffffffff16565b87612d939092919063ffffffff16565b91509150935093915050565b60008183612a14919061403c565b905092915050565b60606000612a2983612db0565b90506000602067ffffffffffffffff811115612a4857612a47613b1b565b5b6040519080825280601f01601f191660200182016040528015612a7a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612ae2578060026000828254612ad69190613d21565b92505081905550612bb5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612b6e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401612b6593929190613c19565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612bfe5780600260008282540392505081905550612c4b565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612ca89190613414565b60405180910390a3505050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff8016905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603612d2657612d23600a612a06612d1e84612958565b6129c6565b50505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612d7357612d70600a612942612d6b84612958565b6129c6565b50505b612d8e612d7f84610a9e565b612d8884610a9e565b83612028565b505050565b600080612da4856000018585612e00565b91509150935093915050565b60008060ff8360001c169050601f811115612df7576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b6000806000858054905090506000811115613091576000612e2d87600184612e289190613ced565b611f88565b6040518060400160405290816000820160009054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016000820160069054906101000a900479ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff1679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152505090508565ffffffffffff16816000015165ffffffffffff161115612f1c576040517f2520601d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8565ffffffffffff16816000015165ffffffffffff1603612fa05784612f4e88600185612f499190613ced565b611f88565b60000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550613080565b8660405180604001604052808865ffffffffffff1681526020018779ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b806020015185935093505050613179565b8560405180604001604052808765ffffffffffff1681526020018679ffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548165ffffffffffff021916908365ffffffffffff16021790555060208201518160000160066101000a81548179ffffffffffffffffffffffffffffffffffffffffffffffffffff021916908379ffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550505060008492509250505b935093915050565b6040518060400160405280600065ffffffffffff168152602001600079ffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6131f9816131c4565b811461320457600080fd5b50565b600081359050613216816131f0565b92915050565b600060208284031215613232576132316131bf565b5b600061324084828501613207565b91505092915050565b60008115159050919050565b61325e81613249565b82525050565b60006020820190506132796000830184613255565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156132b957808201518184015260208101905061329e565b60008484015250505050565b6000601f19601f8301169050919050565b60006132e18261327f565b6132eb818561328a565b93506132fb81856020860161329b565b613304816132c5565b840191505092915050565b6000602082019050818103600083015261332981846132d6565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061335c82613331565b9050919050565b61336c81613351565b811461337757600080fd5b50565b60008135905061338981613363565b92915050565b6000819050919050565b6133a28161338f565b81146133ad57600080fd5b50565b6000813590506133bf81613399565b92915050565b600080604083850312156133dc576133db6131bf565b5b60006133ea8582860161337a565b92505060206133fb858286016133b0565b9150509250929050565b61340e8161338f565b82525050565b60006020820190506134296000830184613405565b92915050565b600080600060608486031215613448576134476131bf565b5b60006134568682870161337a565b93505060206134678682870161337a565b9250506040613478868287016133b0565b9150509250925092565b6000819050919050565b61349581613482565b81146134a057600080fd5b50565b6000813590506134b28161348c565b92915050565b6000602082840312156134ce576134cd6131bf565b5b60006134dc848285016134a3565b91505092915050565b6134ee81613482565b82525050565b600060208201905061350960008301846134e5565b92915050565b60008060408385031215613526576135256131bf565b5b6000613534858286016134a3565b92505060206135458582860161337a565b9150509250929050565b600060ff82169050919050565b6135658161354f565b82525050565b6000602082019050613580600083018461355c565b92915050565b60006020828403121561359c5761359b6131bf565b5b60006135aa8482850161337a565b91505092915050565b6135bc81613351565b82525050565b60006020820190506135d760008301846135b3565b92915050565b600063ffffffff82169050919050565b6135f6816135dd565b82525050565b600060208201905061361160008301846135ed565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61364c81613617565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6136878161338f565b82525050565b6000613699838361367e565b60208301905092915050565b6000602082019050919050565b60006136bd82613652565b6136c7818561365d565b93506136d28361366e565b8060005b838110156137035781516136ea888261368d565b97506136f5836136a5565b9250506001810190506136d6565b5085935050505092915050565b600060e082019050613725600083018a613643565b818103602083015261373781896132d6565b9050818103604083015261374b81886132d6565b905061375a6060830187613405565b61376760808301866135b3565b61377460a08301856134e5565b81810360c083015261378681846136b2565b905098975050505050505050565b6000602082840312156137aa576137a96131bf565b5b60006137b8848285016133b0565b91505092915050565b600065ffffffffffff82169050919050565b6137dc816137c1565b82525050565b60006020820190506137f760008301846137d3565b92915050565b6138068161354f565b811461381157600080fd5b50565b600081359050613823816137fd565b92915050565b60008060008060008060c08789031215613846576138456131bf565b5b600061385489828a0161337a565b965050602061386589828a016133b0565b955050604061387689828a016133b0565b945050606061388789828a01613814565b935050608061389889828a016134a3565b92505060a06138a989828a016134a3565b9150509295509295509295565b600080600080600080600060e0888a0312156138d5576138d46131bf565b5b60006138e38a828b0161337a565b97505060206138f48a828b0161337a565b96505060406139058a828b016133b0565b95505060606139168a828b016133b0565b94505060806139278a828b01613814565b93505060a06139388a828b016134a3565b92505060c06139498a828b016134a3565b91505092959891949750929550565b6000806040838503121561396f5761396e6131bf565b5b600061397d8582860161337a565b925050602061398e8582860161337a565b9150509250929050565b6139a1816135dd565b81146139ac57600080fd5b50565b6000813590506139be81613998565b92915050565b600080604083850312156139db576139da6131bf565b5b60006139e98582860161337a565b92505060206139fa858286016139af565b9150509250929050565b613a0d816137c1565b82525050565b600079ffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b613a4281613a13565b82525050565b604082016000820151613a5e6000850182613a04565b506020820151613a716020850182613a39565b50505050565b6000604082019050613a8c6000830184613a48565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613ad957607f821691505b602082108103613aec57613aeb613a92565b5b50919050565b6000604082019050613b076000830185613405565b613b1460208301846137d3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000608082019050613b5f60008301876134e5565b613b6c60208301866135b3565b613b796040830185613405565b613b866060830184613405565b95945050505050565b600060c082019050613ba460008301896134e5565b613bb160208301886135b3565b613bbe60408301876135b3565b613bcb6060830186613405565b613bd86080830185613405565b613be560a0830184613405565b979650505050505050565b6000604082019050613c0560008301856135b3565b613c1260208301846135b3565b9392505050565b6000606082019050613c2e60008301866135b3565b613c3b6020830185613405565b613c486040830184613405565b949350505050565b6000819050919050565b6000819050919050565b6000613c7f613c7a613c7584613c50565b613c5a565b61354f565b9050919050565b613c8f81613c64565b82525050565b6000604082019050613caa6000830185613c86565b613cb76020830184613405565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613cf88261338f565b9150613d038361338f565b9250828203905081811115613d1b57613d1a613cbe565b5b92915050565b6000613d2c8261338f565b9150613d378361338f565b9250828201905080821115613d4f57613d4e613cbe565b5b92915050565b6000604082019050613d6a60008301856135b3565b613d776020830184613405565b9392505050565b6000604082019050613d9360008301856135b3565b613da060208301846134e5565b9392505050565b600060a082019050613dbc60008301886134e5565b613dc960208301876134e5565b613dd660408301866134e5565b613de36060830185613405565b613df060808301846135b3565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050613e3e6000830185613405565b613e4b6020830184613405565b9392505050565b6000819050919050565b6000613e77613e72613e6d84613e52565b613c5a565b61354f565b9050919050565b613e8781613e5c565b82525050565b6000604082019050613ea26000830185613e7e565b613eaf6020830184613405565b9392505050565b6000608082019050613ecb60008301876134e5565b613ed8602083018661355c565b613ee560408301856134e5565b613ef260608301846134e5565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613f648261338f565b9150613f6f8361338f565b925082613f7f57613f7e613dfa565b5b828204905092915050565b6000613f9582613a13565b9150613fa083613a13565b9250828203905079ffffffffffffffffffffffffffffffffffffffffffffffffffff811115613fd257613fd1613cbe565b5b92915050565b6000819050919050565b6000613ffd613ff8613ff384613fd8565b613c5a565b61354f565b9050919050565b61400d81613fe2565b82525050565b60006040820190506140286000830185614004565b6140356020830184613405565b9392505050565b600061404782613a13565b915061405283613a13565b9250828201905079ffffffffffffffffffffffffffffffffffffffffffffffffffff81111561408457614083613cbe565b5b9291505056fea2646970667358221220950b8cbce733e310dbe6b55c695f6c2d6b6578448bf5ce7d5aa2c8796dd1297b64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x68B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x605 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FF JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x54D JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x56B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4CF JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4BF5D7E9 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x41B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x395 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x30D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x273 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x321C JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x342F JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x34B8 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x356B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x87D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x8F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B9 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x435 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x35FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH2 0xB8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3710 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x3794 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x519 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x537 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x37E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x555 PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x562 SWAP2 SWAP1 PUSH2 0x330F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x585 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xDDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CE SWAP2 SWAP1 PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x3264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x603 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x3829 JUMP JUMPDEST PUSH2 0xE74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x38B6 JUMP JUMPDEST PUSH2 0xF3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x629 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x659 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x654 SWAP2 SWAP1 PUSH2 0x350F JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x675 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x3958 JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x682 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A0 SWAP2 SWAP1 PUSH2 0x39C4 JUMP JUMPDEST PUSH2 0x114F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x3A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x72E JUMPI POP PUSH2 0x72D DUP3 PUSH2 0x1169 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x744 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x770 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x792 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D2 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x7DF DUP2 DUP6 DUP6 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7FF PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x80C DUP6 DUP3 DUP6 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x817 DUP6 DUP6 DUP6 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84C DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x855 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x85F DUP4 DUP4 PUSH2 0x1389 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x878 PUSH2 0x147B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x885 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x1532 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x903 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0x953 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94A SWAP3 SWAP2 SWAP1 PUSH2 0x3AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AC PUSH2 0x95F DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x167F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x9FB DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0xA05 DUP4 DUP4 PUSH2 0x1779 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA14 PUSH2 0x17FB JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0xA24 PUSH2 0xD3D JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6FF0714000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB11 PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xB1D DUP2 DUP4 PUSH2 0x180B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2C DUP3 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB86 DUP3 PUSH2 0x1977 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0xBA1 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0xBA9 PUSH2 0x19C4 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0x3B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC42 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND DUP4 LT PUSH2 0xC92 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0xECD3F81E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP3 SWAP2 SWAP1 PUSH2 0x3AF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAE PUSH2 0xC9E DUP5 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0xA PUSH2 0x167F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD47 PUSH2 0x17FB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xD5B SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD87 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x19FF JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE5C PUSH2 0x11D3 JUMP JUMPDEST SWAP1 POP PUSH2 0xE69 DUP2 DUP6 DUP6 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xEB9 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x4683AF0E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF1B PUSH2 0xF13 PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1A67 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH2 0xF27 DUP2 DUP8 PUSH2 0x1AB1 JUMP JUMPDEST PUSH2 0xF31 DUP2 DUP9 PUSH2 0x180B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xF7F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xFAE DUP13 PUSH2 0x1B09 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFE7 DUP3 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFF7 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x106B JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1062 SWAP3 SWAP2 SWAP1 PUSH2 0x3BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1076 DUP11 DUP11 DUP11 PUSH2 0x11DB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x10AF DUP3 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x10C2 DUP4 DUP4 PUSH2 0x1532 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1157 PUSH2 0x3181 JUMP JUMPDEST PUSH2 0x1161 DUP4 DUP4 PUSH2 0x1B60 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP5 DUP5 PUSH2 0x10C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x127B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x126B JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1262 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x127A DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1BC1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EA SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1365 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1370 DUP4 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1381 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x1DA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1395 DUP4 DUP4 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1470 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x140D PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x14F7 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1524 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x152F JUMP JUMPDEST PUSH2 0x152C PUSH2 0x1DF9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153E DUP4 DUP4 PUSH2 0xCD2 JUMP JUMPDEST ISZERO PUSH2 0x161A JUMPI PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x15B7 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x30 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166E SWAP3 SWAP2 SWAP1 PUSH2 0x3C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 PUSH2 0x16A6 DUP5 PUSH2 0x1E8F JUMP JUMPDEST DUP5 PUSH2 0x16B1 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST SWAP1 POP PUSH2 0x16C0 DUP8 PUSH1 0x0 ADD DUP3 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP7 PUSH6 0xFFFFFFFFFFFF AND LT ISZERO PUSH2 0x16F5 JUMPI DUP1 SWAP2 POP PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1702 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x1718 DUP8 PUSH1 0x0 ADD DUP8 DUP6 DUP6 PUSH2 0x1F9D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x176A JUMPI PUSH2 0x173B DUP8 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1736 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x176D JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E2 SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 NUMBER PUSH2 0x1625 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1816 DUP4 PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x191A DUP2 DUP4 PUSH2 0x1915 DUP7 PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1970 PUSH2 0x196B PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x22A1 JUMP JUMPDEST PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1982 DUP3 PUSH2 0x230A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19BF PUSH1 0x5 PUSH32 0x0 PUSH2 0x2353 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19FA PUSH1 0x6 PUSH32 0x0 PUSH2 0x2353 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x1A5C JUMPI PUSH2 0x1A2D DUP4 PUSH1 0x0 ADD PUSH1 0x1 DUP4 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7A PUSH2 0x1A74 PUSH2 0x147B JUMP JUMPDEST DUP4 PUSH2 0x2403 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1A93 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2444 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1AA3 DUP3 DUP3 PUSH2 0x2538 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ABC DUP4 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 EQ PUSH2 0x1B04 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH32 0x752D88C000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFB SWAP3 SWAP2 SWAP1 PUSH2 0x3D55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B68 PUSH2 0x3181 JUMP JUMPDEST PUSH2 0x1BB9 DUP3 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x269C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C33 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C2A SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x35C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1D92 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D89 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DA3 DUP4 DUP4 DUP4 PUSH2 0x2771 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1DB2 DUP3 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x1DF5 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP3 SWAP2 SWAP1 PUSH2 0x3D7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1E74 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SUB PUSH2 0x1EA1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1EAE DUP5 PUSH2 0x2822 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EC8 JUMPI PUSH2 0x1EC7 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EE1 JUMPI PUSH2 0x1EE0 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1EFA JUMPI PUSH2 0x1EF9 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F2C JUMPI PUSH2 0x1F2B PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F45 JUMPI PUSH2 0x1F44 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1F5E JUMPI PUSH2 0x1F5D PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1F7F DUP2 DUP3 DUP6 DUP2 PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2903 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x200B JUMPI PUSH1 0x0 PUSH2 0x1FB4 DUP5 DUP5 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP DUP5 PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x1FC9 DUP8 DUP4 PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1FF5 JUMPI DUP1 SWAP3 POP PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x2002 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP4 POP JUMPDEST POP PUSH2 0x1FA0 JUMP JUMPDEST DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2021 DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2064 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x229C JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2182 JUMPI PUSH1 0x0 DUP1 PUSH2 0x20F3 PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2942 PUSH2 0x20EE DUP7 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2177 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 PUSH2 0x220C PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x2A06 PUSH2 0x2207 DUP7 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2290 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x2302 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F9 SWAP3 SWAP2 SWAP1 PUSH2 0x3E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x2370 JUMPI PUSH2 0x2369 DUP4 PUSH2 0x2A1C JUMP JUMPDEST SWAP1 POP PUSH2 0x23FD JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x237C SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23A8 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x23F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2484 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x252E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x24A9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EB6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x251F JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x252E JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x254C JUMPI PUSH2 0x254B PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x2698 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2579 JUMPI PUSH2 0x2578 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x258C JUMPI PUSH2 0x258B PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25D7 JUMPI PUSH2 0x25D6 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x25EA JUMPI PUSH2 0x25E9 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x262F JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2655 JUMPI PUSH2 0x2654 PUSH2 0x3EFB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x2697 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268E SWAP2 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x26A4 PUSH2 0x3181 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x26C0 JUMPI PUSH2 0x26BF PUSH2 0x3F2A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x277C DUP4 DUP4 DUP4 PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2812 JUMPI PUSH1 0x0 PUSH2 0x27BA PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27C6 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x280F JUMPI DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x1CB15D2600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2806 SWAP3 SWAP2 SWAP1 PUSH2 0x3E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST PUSH2 0x281D DUP4 DUP4 DUP4 PUSH2 0x2CD9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2844 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x285F JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x287A JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2895 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28B0 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28CB JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28E6 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x28FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2912 JUMPI DUP2 PUSH2 0x2914 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x292D SWAP2 SWAP1 PUSH2 0x3F59 JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x293A SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2950 SWAP2 SWAP1 PUSH2 0x3F8A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x29BE JUMPI PUSH1 0xD0 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B5 SWAP3 SWAP2 SWAP1 PUSH2 0x4013 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29FA PUSH2 0x29D4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x29EA PUSH2 0x29E0 DUP9 PUSH2 0x19FF JUMP JUMPDEST DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x2D93 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A14 SWAP2 SWAP1 PUSH2 0x403C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2A29 DUP4 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A48 JUMPI PUSH2 0x2A47 PUSH2 0x3B1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A7A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AE2 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AD6 SWAP2 SWAP1 PUSH2 0x3D21 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2B6E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B65 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BFE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2C4B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2CA8 SWAP2 SWAP1 PUSH2 0x3414 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D26 JUMPI PUSH2 0x2D23 PUSH1 0xA PUSH2 0x2A06 PUSH2 0x2D1E DUP5 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D73 JUMPI PUSH2 0x2D70 PUSH1 0xA PUSH2 0x2942 PUSH2 0x2D6B DUP5 PUSH2 0x2958 JUMP JUMPDEST PUSH2 0x29C6 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x2D8E PUSH2 0x2D7F DUP5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x2D88 DUP5 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0x2028 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2DA4 DUP6 PUSH1 0x0 ADD DUP6 DUP6 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x2DF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x3091 JUMPI PUSH1 0x0 PUSH2 0x2E2D DUP8 PUSH1 0x1 DUP5 PUSH2 0x2E28 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND GT ISZERO PUSH2 0x2F1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x2520601D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND SUB PUSH2 0x2FA0 JUMPI DUP5 PUSH2 0x2F4E DUP9 PUSH1 0x1 DUP6 PUSH2 0x2F49 SWAP2 SWAP1 PUSH2 0x3CED JUMP JUMPDEST PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3080 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP6 SWAP4 POP SWAP4 POP POP POP PUSH2 0x3179 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP5 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31F9 DUP2 PUSH2 0x31C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3216 DUP2 PUSH2 0x31F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3232 JUMPI PUSH2 0x3231 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3240 DUP5 DUP3 DUP6 ADD PUSH2 0x3207 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x325E DUP2 PUSH2 0x3249 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3279 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3255 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x329E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E1 DUP3 PUSH2 0x327F JUMP JUMPDEST PUSH2 0x32EB DUP2 DUP6 PUSH2 0x328A JUMP JUMPDEST SWAP4 POP PUSH2 0x32FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x329B JUMP JUMPDEST PUSH2 0x3304 DUP2 PUSH2 0x32C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3329 DUP2 DUP5 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x335C DUP3 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x336C DUP2 PUSH2 0x3351 JUMP JUMPDEST DUP2 EQ PUSH2 0x3377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3389 DUP2 PUSH2 0x3363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33A2 DUP2 PUSH2 0x338F JUMP JUMPDEST DUP2 EQ PUSH2 0x33AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33BF DUP2 PUSH2 0x3399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33DC JUMPI PUSH2 0x33DB PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33EA DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x33FB DUP6 DUP3 DUP7 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x340E DUP2 PUSH2 0x338F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3429 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3448 JUMPI PUSH2 0x3447 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3456 DUP7 DUP3 DUP8 ADD PUSH2 0x337A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3467 DUP7 DUP3 DUP8 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3478 DUP7 DUP3 DUP8 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3495 DUP2 PUSH2 0x3482 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B2 DUP2 PUSH2 0x348C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34CE JUMPI PUSH2 0x34CD PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34DC DUP5 DUP3 DUP6 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34EE DUP2 PUSH2 0x3482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3509 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3526 JUMPI PUSH2 0x3525 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3534 DUP6 DUP3 DUP7 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3545 DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3565 DUP2 PUSH2 0x354F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3580 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x355C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359C JUMPI PUSH2 0x359B PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35AA DUP5 DUP3 DUP6 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x35BC DUP2 PUSH2 0x3351 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F6 DUP2 PUSH2 0x35DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x35ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364C DUP2 PUSH2 0x3617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3687 DUP2 PUSH2 0x338F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3699 DUP4 DUP4 PUSH2 0x367E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36BD DUP3 PUSH2 0x3652 JUMP JUMPDEST PUSH2 0x36C7 DUP2 DUP6 PUSH2 0x365D JUMP JUMPDEST SWAP4 POP PUSH2 0x36D2 DUP4 PUSH2 0x366E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3703 JUMPI DUP2 MLOAD PUSH2 0x36EA DUP9 DUP3 PUSH2 0x368D JUMP JUMPDEST SWAP8 POP PUSH2 0x36F5 DUP4 PUSH2 0x36A5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36D6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x3725 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x3643 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3737 DUP2 DUP10 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x374B DUP2 DUP9 PUSH2 0x32D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x375A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3767 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3774 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x34E5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x3786 DUP2 DUP5 PUSH2 0x36B2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37AA JUMPI PUSH2 0x37A9 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37B8 DUP5 DUP3 DUP6 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37DC DUP2 PUSH2 0x37C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x37F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3806 DUP2 PUSH2 0x354F JUMP JUMPDEST DUP2 EQ PUSH2 0x3811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3823 DUP2 PUSH2 0x37FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3846 JUMPI PUSH2 0x3845 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3854 DUP10 DUP3 DUP11 ADD PUSH2 0x337A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x3865 DUP10 DUP3 DUP11 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x3876 DUP10 DUP3 DUP11 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x3887 DUP10 DUP3 DUP11 ADD PUSH2 0x3814 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3898 DUP10 DUP3 DUP11 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x38A9 DUP10 DUP3 DUP11 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x38D5 JUMPI PUSH2 0x38D4 PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E3 DUP11 DUP3 DUP12 ADD PUSH2 0x337A JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x38F4 DUP11 DUP3 DUP12 ADD PUSH2 0x337A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x3905 DUP11 DUP3 DUP12 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x3916 DUP11 DUP3 DUP12 ADD PUSH2 0x33B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x3927 DUP11 DUP3 DUP12 ADD PUSH2 0x3814 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3938 DUP11 DUP3 DUP12 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3949 DUP11 DUP3 DUP12 ADD PUSH2 0x34A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x396F JUMPI PUSH2 0x396E PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397D DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x398E DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x39A1 DUP2 PUSH2 0x35DD JUMP JUMPDEST DUP2 EQ PUSH2 0x39AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39BE DUP2 PUSH2 0x3998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39DB JUMPI PUSH2 0x39DA PUSH2 0x31BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39E9 DUP6 DUP3 DUP7 ADD PUSH2 0x337A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39FA DUP6 DUP3 DUP7 ADD PUSH2 0x39AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A0D DUP2 PUSH2 0x37C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A42 DUP2 PUSH2 0x3A13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3A5E PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3A04 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3A71 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3A39 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A8C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3A48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3AD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3AEC JUMPI PUSH2 0x3AEB PUSH2 0x3A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3B07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3B14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3B5F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3B6C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3B79 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3B86 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3BA4 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3BB1 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3BBE PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3BCB PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3BD8 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3BE5 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3C12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C2E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3C3B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3C48 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7F PUSH2 0x3C7A PUSH2 0x3C75 DUP5 PUSH2 0x3C50 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C8F DUP2 PUSH2 0x3C64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3C86 JUMP JUMPDEST PUSH2 0x3CB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3CF8 DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D03 DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D1B JUMPI PUSH2 0x3D1A PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2C DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3D37 DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D6A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3D77 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D93 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x35B3 JUMP JUMPDEST PUSH2 0x3DA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DBC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DC9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DD6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3DE3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3DF0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x35B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E3E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3405 JUMP JUMPDEST PUSH2 0x3E4B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E77 PUSH2 0x3E72 PUSH2 0x3E6D DUP5 PUSH2 0x3E52 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E87 DUP2 PUSH2 0x3E5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3E7E JUMP JUMPDEST PUSH2 0x3EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3ECB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3ED8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x355C JUMP JUMPDEST PUSH2 0x3EE5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x34E5 JUMP JUMPDEST PUSH2 0x3EF2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x34E5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F64 DUP3 PUSH2 0x338F JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6F DUP4 PUSH2 0x338F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3F7F JUMPI PUSH2 0x3F7E PUSH2 0x3DFA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F95 DUP3 PUSH2 0x3A13 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA0 DUP4 PUSH2 0x3A13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FD2 JUMPI PUSH2 0x3FD1 PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FFD PUSH2 0x3FF8 PUSH2 0x3FF3 DUP5 PUSH2 0x3FD8 JUMP JUMPDEST PUSH2 0x3C5A JUMP JUMPDEST PUSH2 0x354F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x400D DUP2 PUSH2 0x3FE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4004 JUMP JUMPDEST PUSH2 0x4035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4047 DUP3 PUSH2 0x3A13 JUMP JUMPDEST SWAP2 POP PUSH2 0x4052 DUP4 PUSH2 0x3A13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH26 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4084 JUMPI PUSH2 0x4083 PUSH2 0x3CBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SIGNEXTEND DUP13 0xBC 0xE7 CALLER 0xE3 LT 0xDB 0xE6 0xB5 TLOAD PUSH10 0x5F6C2D6B6578448BF5CE PUSH30 0x5AA2C8796DD1297B64736F6C634300081800330000000000000000000000 ","sourceMap":"319:831:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3002:82:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3922:364:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;631:105:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3040:272:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5539:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5738:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3208:126:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;978:170:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:20;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;4922:341:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2789:96:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3402:135:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5954:554:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:672:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;391:62:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3411:163:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:8:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;3002:82:8:-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:10:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;3922:364:3:-;4009:7;4028:23;4054:7;:5;:7::i;:::-;4028:33;;4088:16;4075:29;;:9;:29;4071:115;;4147:9;4158:16;4127:48;;;;;;;;;;;;:::i;:::-;;;;;;;;4071:115;4202:77;4250:28;4268:9;4250:17;:28::i;:::-;4202:20;:29;4223:7;4202:29;;;;;;;;;;;;;;;:47;;:77;;;;:::i;:::-;4195:84;;;;;3922:364;;;;:::o;631:105:29:-;429:24;2464:16:0;2475:4;2464:10;:16::i;:::-;712:17:29::1;718:2;722:6;712:5;:17::i;:::-;631:105:::0;;;:::o;3040:272:3:-;3091:13;3180:18;:16;:18::i;:::-;3169:29;;:7;:5;:7::i;:::-;:29;;;3165:93;;3221:26;;;;;;;;;;;;;;3165:93;3267:38;;;;;;;;;;;;;;;;;;;3040:272;:::o;5539:117::-;5604:7;5630:10;:19;5641:7;5630:19;;;;;;;;;;;;;;;;;;;;;;;;;5623:26;;5539:117;;;:::o;5738:138::-;5800:15;5818:12;:10;:12::i;:::-;5800:30;;5840:29;5850:7;5859:9;5840;:29::i;:::-;5790:86;5738:138;:::o;3208:126:11:-;3278:6;3303:24;3319:7;3303:15;:24::i;:::-;3296:31;;3208:126;;;:::o;3299:116:8:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;978:170:29:-;1092:7;1122:19;1135:5;1122:12;:19::i;:::-;1115:26;;978:170;;;:::o;5144:557:20:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;4922:341:3:-;4998:7;5017:23;5043:7;:5;:7::i;:::-;5017:33;;5077:16;5064:29;;:9;:29;5060:115;;5136:9;5147:16;5116:48;;;;;;;;;;;;:::i;:::-;;;;;;;;5060:115;5191:65;5227:28;5245:9;5227:17;:28::i;:::-;5191:17;:35;;:65;;;;:::i;:::-;5184:72;;;;;4922:341;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2789:96:3:-;2835:6;2860:18;:16;:18::i;:::-;2853:25;;2789:96;:::o;2276:93:8:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3402:135:3:-;3466:7;3492:38;:20;:29;3513:7;3492:29;;;;;;;;;;;;;;;:36;:38::i;:::-;3485:45;;;;3402:135;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:8:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;5954:554:3:-;6159:6;6141:15;:24;6137:91;;;6210:6;6188:29;;;;;;;;;;;:::i;:::-;;;;;;;;6137:91;6237:14;6254:168;6281:86;2063:71;6340:9;6351:5;6358:6;6308:57;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6298:68;;;;;;6281:16;:86::i;:::-;6381:1;6396;6411;6254:13;:168::i;:::-;6237:185;;6432:31;6449:6;6457:5;6432:16;:31::i;:::-;6473:28;6483:6;6491:9;6473;:28::i;:::-;6127:381;5954:554;;;;;;:::o;1680:672:10:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;391:62:29:-;429:24;391:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:8:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;3411:163:11:-;3490:32;;:::i;:::-;3541:26;3554:7;3563:3;3541:12;:26::i;:::-;3534:33;;3411:163;;;;:::o;762:146:22:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;8989:128:8:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3845:262:20:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;14291:213:25:-;14347:6;14377:16;14369:24;;:5;:24;14365:103;;;14447:2;14451:5;14416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;14365:103;14491:5;14477:20;;14291:213;;;:::o;9441:606:27:-;9526:7;9545:11;9559:4;:17;;:24;;;;9545:38;;9594:11;9619:12;9634:3;9619:18;;9658:1;9652:3;:7;9648:234;;;9675:11;9695:14;9705:3;9695:9;:14::i;:::-;9689:3;:20;;;;:::i;:::-;9675:34;;9733:37;9747:4;:17;;9766:3;9733:13;:37::i;:::-;:42;;;;;;;;;;;;9727:48;;:3;:48;;;9723:149;;;9802:3;9795:10;;9723:149;;;9856:1;9850:3;:7;;;;:::i;:::-;9844:13;;9723:149;9661:221;9648:234;9892:11;9906:53;9925:4;:17;;9944:3;9949;9954:4;9906:18;:53::i;:::-;9892:67;;9984:1;9977:3;:8;:63;;9992:41;10006:4;:17;;10031:1;10025:3;:7;;;;:::i;:::-;9992:13;:41::i;:::-;:48;;;;;;;;;;;;9977:63;;;9988:1;9977:63;9970:70;;;;;;9441:606;;;;:::o;7721:208:8:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;931:109:28:-;977:6;1002:31;1020:12;1002:17;:31::i;:::-;995:38;;931:109;:::o;6686:312:3:-;6768:19;6790:18;6800:7;6790:9;:18::i;:::-;6768:40;;6840:9;6818:10;:19;6829:7;6818:19;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;6903:9;6865:48;;6890:11;6865:48;;6881:7;6865:48;;;;;;;;;;;;6923:68;6942:11;6955:9;6966:24;6982:7;6966:15;:24::i;:::-;6923:18;:68::i;:::-;6758:240;6686:312;;:::o;8572:162::-;8645:6;8670:57;8688:38;:20;:29;8709:7;8688:29;;;;;;;;;;;;;;;:36;:38::i;:::-;8670:17;:57::i;:::-;8663:64;;8572:162;;;:::o;2406:143:10:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;6021:126:20:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;10167:206:27:-;10229:7;10248:11;10262:4;:17;;:24;;;;10248:38;;10310:1;10303:3;:8;:63;;10318:41;10332:4;:17;;10357:1;10351:3;:7;;;;:::i;:::-;10318:13;:41::i;:::-;:48;;;;;;;;;;;;10303:63;;;10314:1;10303:63;10296:70;;;10167:206;;;:::o;4917:176:20:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:19:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;1265:222:15:-;1348:15;1366:16;1376:5;1366:9;:16::i;:::-;1348:34;;1405:7;1396:5;:16;1392:89;;1455:5;1462:7;1435:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1392:89;1338:149;1265:222;;:::o;759:395::-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;8811:199:3:-;8915:32;;:::i;:::-;8966:37;8999:3;8966:20;:29;8987:7;8966:29;;;;;;;;;;;;;;;:32;;:37;;;;:::i;:::-;8959:44;;8811:199;;;;:::o;9949:432:8:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;810:162:29:-;935:30;949:4;955:2;959:5;935:13;:30::i;:::-;810:162;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;4113:179:20:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;8587:1642:24:-;8635:7;8663:1;8658;:6;8654:45;;8687:1;8680:8;;;;8654:45;9378:14;9412:1;9401:7;9406:1;9401:4;:7::i;:::-;:12;;9395:1;:19;;9378:36;;9873:1;9862:6;9858:1;:10;;;;;:::i;:::-;;;9849:6;:19;9848:26;;9839:35;;9922:1;9911:6;9907:1;:10;;;;;:::i;:::-;;;9898:6;:19;9897:26;;9888:35;;9971:1;9960:6;9956:1;:10;;;;;:::i;:::-;;;9947:6;:19;9946:26;;9937:35;;10020:1;10009:6;10005:1;:10;;;;;:::i;:::-;;;9996:6;:19;9995:26;;9986:35;;10069:1;10058:6;10054:1;:10;;;;;:::i;:::-;;;10045:6;:19;10044:26;;10035:35;;10118:1;10107:6;10103:1;:10;;;;;:::i;:::-;;;10094:6;:19;10093:26;;10084:35;;10167:1;10156:6;10152:1;:10;;;;;:::i;:::-;;;10143:6;:19;10142:26;;10133:35;;10189:23;10193:6;10205;10201:1;:10;;;;;:::i;:::-;;;10189:3;:23::i;:::-;10182:30;;;8587:1642;;;;:::o;14099:265:27:-;14209:28;14282:9;14279:1;14272:20;14344:3;14337:4;14334:1;14324:18;14320:28;14305:43;;14099:265;;;;:::o;12736:433::-;12893:7;12912:230;12925:4;12919:3;:10;12912:230;;;12945:11;12959:23;12972:3;12977:4;12959:12;:23::i;:::-;12945:37;;13032:3;13000:35;;:24;13014:4;13020:3;13000:13;:24::i;:::-;:29;;;;;;;;;;;;:35;;;12996:136;;;13062:3;13055:10;;12996:136;;;13116:1;13110:3;:7;;;;:::i;:::-;13104:13;;12996:136;12931:211;12912:230;;;13158:4;13151:11;;12736:433;;;;;;:::o;3000:133:11:-;3082:7;3108:18;3118:7;3108:9;:18::i;:::-;3101:25;;3000:133;;;:::o;7717:780:3:-;7817:2;7809:10;;:4;:10;;;;:24;;;;;7832:1;7823:6;:10;7809:24;7805:686;;;7869:1;7853:18;;:4;:18;;;7849:315;;7892:16;7910;7930:150;7957:20;:26;7978:4;7957:26;;;;;;;;;;;;;;;8005:9;8036:26;8055:6;8036:18;:26::i;:::-;7930:5;:150::i;:::-;7891:189;;;;;;;;8124:4;8103:46;;;8130:8;8140;8103:46;;;;;;;:::i;:::-;;;;;;;;7873:291;;7849:315;8195:1;8181:16;;:2;:16;;;8177:304;;8218:16;8236;8256:143;8283:20;:24;8304:2;8283:24;;;;;;;;;;;;;;;8329:4;8355:26;8374:6;8355:18;:26::i;:::-;8256:5;:143::i;:::-;8217:182;;;;;;;;8443:2;8422:44;;;8447:8;8457;8422:44;;;;;;;:::i;:::-;;;;;;;;8199:282;;8177:304;7805:686;7717:780;;;:::o;11008:119:27:-;11070:7;11096:4;:17;;:24;;;;11089:31;;11008:119;;;:::o;15291:213:25:-;15347:6;15377:16;15369:24;;:5;:24;15365:103;;;15447:2;15451:5;15416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;15365:103;15491:5;15477:20;;15291:213;;;:::o;538:107:15:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;3385:267:16:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:21:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:19:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;11199:138:27:-;11269:20;;:::i;:::-;11308:4;:17;;11326:3;11308:22;;;;;;;;;;:::i;:::-;;;;;;;;;11301:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11199:138;;;;:::o;2327:413:11:-;2421:30;2435:4;2441:2;2445:5;2421:13;:30::i;:::-;2481:1;2465:18;;:4;:18;;;2461:226;;2499:14;2516:13;:11;:13::i;:::-;2499:30;;2543:11;2557:12;:10;:12::i;:::-;2543:26;;2596:3;2587:6;:12;2583:94;;;2650:6;2658:3;2626:36;;;;;;;;;;;;:::i;:::-;;;;;;;;2583:94;2485:202;;2461:226;2696:37;2717:4;2723:2;2727:5;2696:20;:37::i;:::-;2327:413;;;:::o;10699:983:24:-;10751:7;10770:14;10787:1;10770:18;;10841:1;10835:3;10826:5;:12;;:16;10822:99;;;10872:3;10862:13;;;;;10903:3;10893:13;;;;10822:99;10952:1;10947:2;10938:5;:11;;:15;10934:96;;;10983:2;10973:12;;;;;11013:2;11003:12;;;;10934:96;11061:1;11056:2;11047:5;:11;;:15;11043:96;;;11092:2;11082:12;;;;;11122:2;11112:12;;;;11043:96;11170:1;11165:2;11156:5;:11;;:15;11152:96;;;11201:2;11191:12;;;;;11231:2;11221:12;;;;11152:96;11278:1;11274;11265:5;:10;;:14;11261:93;;;11309:1;11299:11;;;;;11338:1;11328:11;;;;11261:93;11384:1;11380;11371:5;:10;;:14;11367:93;;;11415:1;11405:11;;;;;11444:1;11434:11;;;;11367:93;11490:1;11486;11477:5;:10;;:14;11473:93;;;11521:1;11511:11;;;;;11550:1;11540:11;;;;11473:93;11596:1;11592;11583:5;:10;;:14;11579:64;;;11627:1;11617:11;;;;11579:64;11669:6;11662:13;;;10699:983;;;:::o;2557:104::-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;2649:1;2641:13;2634:20;;2557:104;;;;:::o;2774:153::-;2836:7;2919:1;2914;2910;:5;2909:11;;;;:::i;:::-;2904:1;2900;:5;2899:21;;;;:::i;:::-;2892:28;;2774:153;;;;:::o;9379:101:3:-;9442:7;9472:1;9468;:5;;;;:::i;:::-;9461:12;;9379:101;;;;:::o;4169:218:25:-;4226:7;4257:17;4249:25;;:5;:25;4245:105;;;4328:3;4333:5;4297:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:105;4374:5;4359:21;;4169:218;;;:::o;9016:255:3:-;9183:7;9192;9218:46;9229:7;:5;:7::i;:::-;9238:25;9241:14;:5;:12;:14::i;:::-;9257:5;9238:2;:25;;:::i;:::-;9218:5;:10;;:46;;;;;:::i;:::-;9211:53;;;;9016:255;;;;;;:::o;9277:96::-;9335:7;9365:1;9361;:5;;;;:::i;:::-;9354:12;;9277:96;;;;:::o;2078:405:16:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;6271:1107:8:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2084:103:11:-;2137:7;2163:17;2156:24;;;;2084:103;:::o;7232:399:3:-;7351:1;7335:18;;:4;:18;;;7331:107;;7369:58;7375:17;7394:4;7400:26;7419:6;7400:18;:26::i;:::-;7369:5;:58::i;:::-;;;7331:107;7465:1;7451:16;;:2;:16;;;7447:110;;7483:63;7489:17;7508:9;7519:26;7538:6;7519:18;:26::i;:::-;7483:5;:63::i;:::-;;;7447:110;7566:58;7585:15;7595:4;7585:9;:15::i;:::-;7602:13;7612:2;7602:9;:13::i;:::-;7617:6;7566:18;:58::i;:::-;7232:399;;;:::o;8050:162:27:-;8132:7;8141;8167:38;8175:4;:17;;8194:3;8199:5;8167:7;:38::i;:::-;8160:45;;;;8050:162;;;;;;:::o;2555:245:16:-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;11513:870:27:-;11604:7;11613;11632:11;11646:4;:11;;;;11632:25;;11678:1;11672:3;:7;11668:709;;;11747:25;11775:28;11789:4;11801:1;11795:3;:7;;;;:::i;:::-;11775:13;:28::i;:::-;11747:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11889:3;11877:15;;:4;:9;;;:15;;;11873:91;;;11919:30;;;;;;;;;;;;;;11873:91;12040:3;12027:16;;:4;:9;;;:16;;;12023:189;;12101:5;12063:28;12077:4;12089:1;12083:3;:7;;;;:::i;:::-;12063:13;:28::i;:::-;:35;;;:43;;;;;;;;;;;;;;;;;;12023:189;;;12145:4;12155:41;;;;;;;;12176:3;12155:41;;;;;;12189:5;12155:41;;;;;12145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12023:189;12233:4;:11;;;12246:5;12225:27;;;;;;;;11668:709;12283:4;12293:41;;;;;;;;12314:3;12293:41;;;;;;12327:5;12293:41;;;;;12283:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12357:1;12360:5;12349:17;;;;;11513:870;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:31:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:118::-;7555:24;7573:5;7555:24;:::i;:::-;7550:3;7543:37;7468:118;;:::o;7592:222::-;7685:4;7723:2;7712:9;7708:18;7700:26;;7736:71;7804:1;7793:9;7789:17;7780:6;7736:71;:::i;:::-;7592:222;;;;:::o;7820:93::-;7856:7;7896:10;7889:5;7885:22;7874:33;;7820:93;;;:::o;7919:115::-;8004:23;8021:5;8004:23;:::i;:::-;7999:3;7992:36;7919:115;;:::o;8040:218::-;8131:4;8169:2;8158:9;8154:18;8146:26;;8182:69;8248:1;8237:9;8233:17;8224:6;8182:69;:::i;:::-;8040:218;;;;:::o;8264:149::-;8300:7;8340:66;8333:5;8329:78;8318:89;;8264:149;;;:::o;8419:115::-;8504:23;8521:5;8504:23;:::i;:::-;8499:3;8492:36;8419:115;;:::o;8540:114::-;8607:6;8641:5;8635:12;8625:22;;8540:114;;;:::o;8660:184::-;8759:11;8793:6;8788:3;8781:19;8833:4;8828:3;8824:14;8809:29;;8660:184;;;;:::o;8850:132::-;8917:4;8940:3;8932:11;;8970:4;8965:3;8961:14;8953:22;;8850:132;;;:::o;8988:108::-;9065:24;9083:5;9065:24;:::i;:::-;9060:3;9053:37;8988:108;;:::o;9102:179::-;9171:10;9192:46;9234:3;9226:6;9192:46;:::i;:::-;9270:4;9265:3;9261:14;9247:28;;9102:179;;;;:::o;9287:113::-;9357:4;9389;9384:3;9380:14;9372:22;;9287:113;;;:::o;9436:732::-;9555:3;9584:54;9632:5;9584:54;:::i;:::-;9654:86;9733:6;9728:3;9654:86;:::i;:::-;9647:93;;9764:56;9814:5;9764:56;:::i;:::-;9843:7;9874:1;9859:284;9884:6;9881:1;9878:13;9859:284;;;9960:6;9954:13;9987:63;10046:3;10031:13;9987:63;:::i;:::-;9980:70;;10073:60;10126:6;10073:60;:::i;:::-;10063:70;;9919:224;9906:1;9903;9899:9;9894:14;;9859:284;;;9863:14;10159:3;10152:10;;9560:608;;;9436:732;;;;:::o;10174:1215::-;10523:4;10561:3;10550:9;10546:19;10538:27;;10575:69;10641:1;10630:9;10626:17;10617:6;10575:69;:::i;:::-;10691:9;10685:4;10681:20;10676:2;10665:9;10661:18;10654:48;10719:78;10792:4;10783:6;10719:78;:::i;:::-;10711:86;;10844:9;10838:4;10834:20;10829:2;10818:9;10814:18;10807:48;10872:78;10945:4;10936:6;10872:78;:::i;:::-;10864:86;;10960:72;11028:2;11017:9;11013:18;11004:6;10960:72;:::i;:::-;11042:73;11110:3;11099:9;11095:19;11086:6;11042:73;:::i;:::-;11125;11193:3;11182:9;11178:19;11169:6;11125:73;:::i;:::-;11246:9;11240:4;11236:20;11230:3;11219:9;11215:19;11208:49;11274:108;11377:4;11368:6;11274:108;:::i;:::-;11266:116;;10174:1215;;;;;;;;;;:::o;11395:329::-;11454:6;11503:2;11491:9;11482:7;11478:23;11474:32;11471:119;;;11509:79;;:::i;:::-;11471:119;11629:1;11654:53;11699:7;11690:6;11679:9;11675:22;11654:53;:::i;:::-;11644:63;;11600:117;11395:329;;;;:::o;11730:97::-;11766:7;11806:14;11799:5;11795:26;11784:37;;11730:97;;;:::o;11833:115::-;11918:23;11935:5;11918:23;:::i;:::-;11913:3;11906:36;11833:115;;:::o;11954:218::-;12045:4;12083:2;12072:9;12068:18;12060:26;;12096:69;12162:1;12151:9;12147:17;12138:6;12096:69;:::i;:::-;11954:218;;;;:::o;12178:118::-;12249:22;12265:5;12249:22;:::i;:::-;12242:5;12239:33;12229:61;;12286:1;12283;12276:12;12229:61;12178:118;:::o;12302:135::-;12346:5;12384:6;12371:20;12362:29;;12400:31;12425:5;12400:31;:::i;:::-;12302:135;;;;:::o;12443:1053::-;12545:6;12553;12561;12569;12577;12585;12634:3;12622:9;12613:7;12609:23;12605:33;12602:120;;;12641:79;;:::i;:::-;12602:120;12761:1;12786:53;12831:7;12822:6;12811:9;12807:22;12786:53;:::i;:::-;12776:63;;12732:117;12888:2;12914:53;12959:7;12950:6;12939:9;12935:22;12914:53;:::i;:::-;12904:63;;12859:118;13016:2;13042:53;13087:7;13078:6;13067:9;13063:22;13042:53;:::i;:::-;13032:63;;12987:118;13144:2;13170:51;13213:7;13204:6;13193:9;13189:22;13170:51;:::i;:::-;13160:61;;13115:116;13270:3;13297:53;13342:7;13333:6;13322:9;13318:22;13297:53;:::i;:::-;13287:63;;13241:119;13399:3;13426:53;13471:7;13462:6;13451:9;13447:22;13426:53;:::i;:::-;13416:63;;13370:119;12443:1053;;;;;;;;:::o;13502:1199::-;13613:6;13621;13629;13637;13645;13653;13661;13710:3;13698:9;13689:7;13685:23;13681:33;13678:120;;;13717:79;;:::i;:::-;13678:120;13837:1;13862:53;13907:7;13898:6;13887:9;13883:22;13862:53;:::i;:::-;13852:63;;13808:117;13964:2;13990:53;14035:7;14026:6;14015:9;14011:22;13990:53;:::i;:::-;13980:63;;13935:118;14092:2;14118:53;14163:7;14154:6;14143:9;14139:22;14118:53;:::i;:::-;14108:63;;14063:118;14220:2;14246:53;14291:7;14282:6;14271:9;14267:22;14246:53;:::i;:::-;14236:63;;14191:118;14348:3;14375:51;14418:7;14409:6;14398:9;14394:22;14375:51;:::i;:::-;14365:61;;14319:117;14475:3;14502:53;14547:7;14538:6;14527:9;14523:22;14502:53;:::i;:::-;14492:63;;14446:119;14604:3;14631:53;14676:7;14667:6;14656:9;14652:22;14631:53;:::i;:::-;14621:63;;14575:119;13502:1199;;;;;;;;;;:::o;14707:474::-;14775:6;14783;14832:2;14820:9;14811:7;14807:23;14803:32;14800:119;;;14838:79;;:::i;:::-;14800:119;14958:1;14983:53;15028:7;15019:6;15008:9;15004:22;14983:53;:::i;:::-;14973:63;;14929:117;15085:2;15111:53;15156:7;15147:6;15136:9;15132:22;15111:53;:::i;:::-;15101:63;;15056:118;14707:474;;;;;:::o;15187:120::-;15259:23;15276:5;15259:23;:::i;:::-;15252:5;15249:34;15239:62;;15297:1;15294;15287:12;15239:62;15187:120;:::o;15313:137::-;15358:5;15396:6;15383:20;15374:29;;15412:32;15438:5;15412:32;:::i;:::-;15313:137;;;;:::o;15456:472::-;15523:6;15531;15580:2;15568:9;15559:7;15555:23;15551:32;15548:119;;;15586:79;;:::i;:::-;15548:119;15706:1;15731:53;15776:7;15767:6;15756:9;15752:22;15731:53;:::i;:::-;15721:63;;15677:117;15833:2;15859:52;15903:7;15894:6;15883:9;15879:22;15859:52;:::i;:::-;15849:62;;15804:117;15456:472;;;;;:::o;15934:105::-;16009:23;16026:5;16009:23;:::i;:::-;16004:3;15997:36;15934:105;;:::o;16045:138::-;16082:7;16122:54;16115:5;16111:66;16100:77;;16045:138;;;:::o;16189:108::-;16266:24;16284:5;16266:24;:::i;:::-;16261:3;16254:37;16189:108;;:::o;16379:519::-;16538:4;16533:3;16529:14;16625:4;16618:5;16614:16;16608:23;16644:61;16699:4;16694:3;16690:14;16676:12;16644:61;:::i;:::-;16553:162;16799:4;16792:5;16788:16;16782:23;16818:63;16875:4;16870:3;16866:14;16852:12;16818:63;:::i;:::-;16725:166;16507:391;16379:519;;:::o;16904:346::-;17059:4;17097:2;17086:9;17082:18;17074:26;;17110:133;17240:1;17229:9;17225:17;17216:6;17110:133;:::i;:::-;16904:346;;;;:::o;17256:180::-;17304:77;17301:1;17294:88;17401:4;17398:1;17391:15;17425:4;17422:1;17415:15;17442:320;17486:6;17523:1;17517:4;17513:12;17503:22;;17570:1;17564:4;17560:12;17591:18;17581:81;;17647:4;17639:6;17635:17;17625:27;;17581:81;17709:2;17701:6;17698:14;17678:18;17675:38;17672:84;;17728:18;;:::i;:::-;17672:84;17493:269;17442:320;;;:::o;17768:328::-;17887:4;17925:2;17914:9;17910:18;17902:26;;17938:71;18006:1;17995:9;17991:17;17982:6;17938:71;:::i;:::-;18019:70;18085:2;18074:9;18070:18;18061:6;18019:70;:::i;:::-;17768:328;;;;;:::o;18102:180::-;18150:77;18147:1;18140:88;18247:4;18244:1;18237:15;18271:4;18268:1;18261:15;18288:553;18465:4;18503:3;18492:9;18488:19;18480:27;;18517:71;18585:1;18574:9;18570:17;18561:6;18517:71;:::i;:::-;18598:72;18666:2;18655:9;18651:18;18642:6;18598:72;:::i;:::-;18680;18748:2;18737:9;18733:18;18724:6;18680:72;:::i;:::-;18762;18830:2;18819:9;18815:18;18806:6;18762:72;:::i;:::-;18288:553;;;;;;;:::o;18847:775::-;19080:4;19118:3;19107:9;19103:19;19095:27;;19132:71;19200:1;19189:9;19185:17;19176:6;19132:71;:::i;:::-;19213:72;19281:2;19270:9;19266:18;19257:6;19213:72;:::i;:::-;19295;19363:2;19352:9;19348:18;19339:6;19295:72;:::i;:::-;19377;19445:2;19434:9;19430:18;19421:6;19377:72;:::i;:::-;19459:73;19527:3;19516:9;19512:19;19503:6;19459:73;:::i;:::-;19542;19610:3;19599:9;19595:19;19586:6;19542:73;:::i;:::-;18847:775;;;;;;;;;:::o;19628:332::-;19749:4;19787:2;19776:9;19772:18;19764:26;;19800:71;19868:1;19857:9;19853:17;19844:6;19800:71;:::i;:::-;19881:72;19949:2;19938:9;19934:18;19925:6;19881:72;:::i;:::-;19628:332;;;;;:::o;19966:442::-;20115:4;20153:2;20142:9;20138:18;20130:26;;20166:71;20234:1;20223:9;20219:17;20210:6;20166:71;:::i;:::-;20247:72;20315:2;20304:9;20300:18;20291:6;20247:72;:::i;:::-;20329;20397:2;20386:9;20382:18;20373:6;20329:72;:::i;:::-;19966:442;;;;;;:::o;20414:86::-;20460:7;20489:5;20478:16;;20414:86;;;:::o;20506:60::-;20534:3;20555:5;20548:12;;20506:60;;;:::o;20572:156::-;20629:9;20662:60;20678:43;20687:33;20714:5;20687:33;:::i;:::-;20678:43;:::i;:::-;20662:60;:::i;:::-;20649:73;;20572:156;;;:::o;20734:145::-;20828:44;20866:5;20828:44;:::i;:::-;20823:3;20816:57;20734:145;;:::o;20885:346::-;21013:4;21051:2;21040:9;21036:18;21028:26;;21064:78;21139:1;21128:9;21124:17;21115:6;21064:78;:::i;:::-;21152:72;21220:2;21209:9;21205:18;21196:6;21152:72;:::i;:::-;20885:346;;;;;:::o;21237:180::-;21285:77;21282:1;21275:88;21382:4;21379:1;21372:15;21406:4;21403:1;21396:15;21423:194;21463:4;21483:20;21501:1;21483:20;:::i;:::-;21478:25;;21517:20;21535:1;21517:20;:::i;:::-;21512:25;;21561:1;21558;21554:9;21546:17;;21585:1;21579:4;21576:11;21573:37;;;21590:18;;:::i;:::-;21573:37;21423:194;;;;:::o;21623:191::-;21663:3;21682:20;21700:1;21682:20;:::i;:::-;21677:25;;21716:20;21734:1;21716:20;:::i;:::-;21711:25;;21759:1;21756;21752:9;21745:16;;21780:3;21777:1;21774:10;21771:36;;;21787:18;;:::i;:::-;21771:36;21623:191;;;;:::o;21820:332::-;21941:4;21979:2;21968:9;21964:18;21956:26;;21992:71;22060:1;22049:9;22045:17;22036:6;21992:71;:::i;:::-;22073:72;22141:2;22130:9;22126:18;22117:6;22073:72;:::i;:::-;21820:332;;;;;:::o;22158:::-;22279:4;22317:2;22306:9;22302:18;22294:26;;22330:71;22398:1;22387:9;22383:17;22374:6;22330:71;:::i;:::-;22411:72;22479:2;22468:9;22464:18;22455:6;22411:72;:::i;:::-;22158:332;;;;;:::o;22496:664::-;22701:4;22739:3;22728:9;22724:19;22716:27;;22753:71;22821:1;22810:9;22806:17;22797:6;22753:71;:::i;:::-;22834:72;22902:2;22891:9;22887:18;22878:6;22834:72;:::i;:::-;22916;22984:2;22973:9;22969:18;22960:6;22916:72;:::i;:::-;22998;23066:2;23055:9;23051:18;23042:6;22998:72;:::i;:::-;23080:73;23148:3;23137:9;23133:19;23124:6;23080:73;:::i;:::-;22496:664;;;;;;;;:::o;23166:180::-;23214:77;23211:1;23204:88;23311:4;23308:1;23301:15;23335:4;23332:1;23325:15;23352:332;23473:4;23511:2;23500:9;23496:18;23488:26;;23524:71;23592:1;23581:9;23577:17;23568:6;23524:71;:::i;:::-;23605:72;23673:2;23662:9;23658:18;23649:6;23605:72;:::i;:::-;23352:332;;;;;:::o;23690:86::-;23736:7;23765:5;23754:16;;23690:86;;;:::o;23782:156::-;23839:9;23872:60;23888:43;23897:33;23924:5;23897:33;:::i;:::-;23888:43;:::i;:::-;23872:60;:::i;:::-;23859:73;;23782:156;;;:::o;23944:145::-;24038:44;24076:5;24038:44;:::i;:::-;24033:3;24026:57;23944:145;;:::o;24095:346::-;24223:4;24261:2;24250:9;24246:18;24238:26;;24274:78;24349:1;24338:9;24334:17;24325:6;24274:78;:::i;:::-;24362:72;24430:2;24419:9;24415:18;24406:6;24362:72;:::i;:::-;24095:346;;;;;:::o;24447:545::-;24620:4;24658:3;24647:9;24643:19;24635:27;;24672:71;24740:1;24729:9;24725:17;24716:6;24672:71;:::i;:::-;24753:68;24817:2;24806:9;24802:18;24793:6;24753:68;:::i;:::-;24831:72;24899:2;24888:9;24884:18;24875:6;24831:72;:::i;:::-;24913;24981:2;24970:9;24966:18;24957:6;24913:72;:::i;:::-;24447:545;;;;;;;:::o;24998:180::-;25046:77;25043:1;25036:88;25143:4;25140:1;25133:15;25167:4;25164:1;25157:15;25184:180;25232:77;25229:1;25222:88;25329:4;25326:1;25319:15;25353:4;25350:1;25343:15;25370:185;25410:1;25427:20;25445:1;25427:20;:::i;:::-;25422:25;;25461:20;25479:1;25461:20;:::i;:::-;25456:25;;25500:1;25490:35;;25505:18;;:::i;:::-;25490:35;25547:1;25544;25540:9;25535:14;;25370:185;;;;:::o;25561:247::-;25601:4;25621:20;25639:1;25621:20;:::i;:::-;25616:25;;25655:20;25673:1;25655:20;:::i;:::-;25650:25;;25699:1;25696;25692:9;25684:17;;25723:54;25717:4;25714:64;25711:90;;;25781:18;;:::i;:::-;25711:90;25561:247;;;;:::o;25814:87::-;25861:7;25890:5;25879:16;;25814:87;;;:::o;25907:158::-;25965:9;25998:61;26014:44;26023:34;26051:5;26023:34;:::i;:::-;26014:44;:::i;:::-;25998:61;:::i;:::-;25985:74;;25907:158;;;:::o;26071:147::-;26166:45;26205:5;26166:45;:::i;:::-;26161:3;26154:58;26071:147;;:::o;26224:348::-;26353:4;26391:2;26380:9;26376:18;26368:26;;26404:79;26480:1;26469:9;26465:17;26456:6;26404:79;:::i;:::-;26493:72;26561:2;26550:9;26546:18;26537:6;26493:72;:::i;:::-;26224:348;;;;;:::o;26578:244::-;26618:3;26637:20;26655:1;26637:20;:::i;:::-;26632:25;;26671:20;26689:1;26671:20;:::i;:::-;26666:25;;26714:1;26711;26707:9;26700:16;;26737:54;26732:3;26729:63;26726:89;;;26795:18;;:::i;:::-;26726:89;26578:244;;;;:::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CheckpointUnorderedInsertion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededSafeSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"clock\",\"type\":\"uint48\"}],\"name\":\"ERC5805FutureLookup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC6372InconsistentClock\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"VotesExpiredSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotes\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"_key\",\"type\":\"uint48\"},{\"internalType\":\"uint208\",\"name\":\"_value\",\"type\":\"uint208\"}],\"internalType\":\"struct Checkpoints.Checkpoint208\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"CheckpointUnorderedInsertion()\":[{\"details\":\"A value was attempted to be inserted on a past checkpoint.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20ExceededSafeSupply(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded, introducing a risk of votes overflowing.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC5805FutureLookup(uint256,uint48)\":[{\"details\":\"Lookup to future votes is not available.\"}],\"ERC6372InconsistentClock()\":[{\"details\":\"The clock was incorrectly modified.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"VotesExpiredSignature(uint256)\":[{\"details\":\"The signature used has expired.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of voting units.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Machine-readable description of the clock as specified in EIP-6372.\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting), in which case {CLOCK_MODE} should be overridden as well to match.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. Requirements: - `timepoint` must be in the past. If operating using block numbers, the block must be already mined.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856\",\"dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2\"]},\"@openzeppelin/contracts/governance/utils/Votes.sol\":{\"keccak256\":\"0xb8f69828d41b3594afd7a8c6393565901c205d8b5baf5bd2e42dbac637172979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c790253821191ac46b2050d87df820d4209871f90c616381e2c2c00ff3eaac34\",\"dweb:/ipfs/QmcPETTyuZBzDRL39JNXj3SBMdx3Y9o4fPQLSZ27py5Jim\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a\",\"dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb\",\"dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x2a650f6e593cfe5ff2e514a17ea7f593ee70cefa1888066bc983a6308acff4b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3477b9665a4b6d19f86bf2cfbfa8c08ba41193f15e68c0d75c0cab7e1fc753\",\"dweb:/ipfs/QmbcurrTatN1PBmkCWdrED8zhAqx5ah9Qp6uR8YwkKWA8V\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xbdc5e074d7dd6678f67e92b1a51a20226801a407b0e1af3da367c5d1ff4519ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a36cca6b22fff3db16fc789ff6c60eea71d4b156065d4d0c83a0bc5e91a77a8b\",\"dweb:/ipfs/QmYN3exd5AemxjBrN8XMB1p5LbbE16uC3sjbYjwi8AjcGR\"]},\"@openzeppelin/contracts/utils/types/Time.sol\":{\"keccak256\":\"0xc7755af115020049e4140f224f9ee88d7e1799ffb0646f37bf0df24bf6213f58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f09bf94d5274334ec021f61a04659db303f31e60460e14b709c9bf187740111\",\"dweb:/ipfs/QmNvgomZYUwFAt4cZbPWAiTeSZQreGehY9BK5xyVJsUttb\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xa0d61cc696dd08870268b6228def96b7feff2a672f8a89b7364d1fa4e543b818\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c54e699ae5d30c5b4f1f1bc59db49a846c6f9515018d43f6747fe26fdcf6e378\",\"dweb:/ipfs/QmQK4besQw4rPSNN2iTq4Gz6FU5iwpjTpeuKF3T6H61McT\"]}},\"version\":1}"}},"contracts/TokenizedBallot.sol":{"IMyToken":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPastVotes(address,uint256)":"3a46b1a8"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"IMyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"keccak256\":\"0xec15550802b3a04ca457e2e69de4c944753334148026b247501fe0a212b84156\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ccf6039af8487e9c8539d9e7307850ecd434b1639e1923facb8884782b00c7\",\"dweb:/ipfs/QmXuyU1Ere8wg3kmHY5xvKn69QbQMZJPqFGggVb24Cf4VE\"]}},\"version\":1}"},"TokenizedBallot":{"abi":[{"inputs":[{"internalType":"bytes32[]","name":"_proposalNames","type":"bytes32[]"},{"internalType":"address","name":"_tokenContract","type":"address"},{"internalType":"uint256","name":"_targetBlockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"proposals","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"uint256","name":"voteCount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenContract","outputs":[{"internalType":"contract IMyToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proposal","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"votePowerSpent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerName","outputs":[{"internalType":"bytes32","name":"winnerName_","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winningProposal","outputs":[{"internalType":"uint256","name":"winningProposal_","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8434":{"entryPoint":null,"id":8434,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory":{"entryPoint":564,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory":{"entryPoint":680,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256_fromMemory":{"entryPoint":891,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_memory":{"entryPoint":422,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":279,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":453,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":763,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":505,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":731,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":832,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":368,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x32":{"entryPoint":1014,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":321,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":500,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":294,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":304,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":783,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":515,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":842,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5062:31","nodeType":"YulBlock","src":"0:5062:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"423:28:31","nodeType":"YulBlock","src":"423:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:31","nodeType":"YulLiteral","src":"440:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:31","nodeType":"YulLiteral","src":"443:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:31","nodeType":"YulIdentifier","src":"433:6:31"},"nativeSrc":"433:12:31","nodeType":"YulFunctionCall","src":"433:12:31"},"nativeSrc":"433:12:31","nodeType":"YulExpressionStatement","src":"433:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:31","nodeType":"YulFunctionDefinition","src":"334:117:31"},{"body":{"nativeSrc":"505:54:31","nodeType":"YulBlock","src":"505:54:31","statements":[{"nativeSrc":"515:38:31","nodeType":"YulAssignment","src":"515:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"533:5:31","nodeType":"YulIdentifier","src":"533:5:31"},{"kind":"number","nativeSrc":"540:2:31","nodeType":"YulLiteral","src":"540:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"529:3:31","nodeType":"YulIdentifier","src":"529:3:31"},"nativeSrc":"529:14:31","nodeType":"YulFunctionCall","src":"529:14:31"},{"arguments":[{"kind":"number","nativeSrc":"549:2:31","nodeType":"YulLiteral","src":"549:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"545:3:31","nodeType":"YulIdentifier","src":"545:3:31"},"nativeSrc":"545:7:31","nodeType":"YulFunctionCall","src":"545:7:31"}],"functionName":{"name":"and","nativeSrc":"525:3:31","nodeType":"YulIdentifier","src":"525:3:31"},"nativeSrc":"525:28:31","nodeType":"YulFunctionCall","src":"525:28:31"},"variableNames":[{"name":"result","nativeSrc":"515:6:31","nodeType":"YulIdentifier","src":"515:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"457:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"488:5:31","nodeType":"YulTypedName","src":"488:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"498:6:31","nodeType":"YulTypedName","src":"498:6:31","type":""}],"src":"457:102:31"},{"body":{"nativeSrc":"593:152:31","nodeType":"YulBlock","src":"593:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"610:1:31","nodeType":"YulLiteral","src":"610:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"613:77:31","nodeType":"YulLiteral","src":"613:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"603:6:31","nodeType":"YulIdentifier","src":"603:6:31"},"nativeSrc":"603:88:31","nodeType":"YulFunctionCall","src":"603:88:31"},"nativeSrc":"603:88:31","nodeType":"YulExpressionStatement","src":"603:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"707:1:31","nodeType":"YulLiteral","src":"707:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"710:4:31","nodeType":"YulLiteral","src":"710:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"700:6:31","nodeType":"YulIdentifier","src":"700:6:31"},"nativeSrc":"700:15:31","nodeType":"YulFunctionCall","src":"700:15:31"},"nativeSrc":"700:15:31","nodeType":"YulExpressionStatement","src":"700:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"731:1:31","nodeType":"YulLiteral","src":"731:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"734:4:31","nodeType":"YulLiteral","src":"734:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"724:6:31","nodeType":"YulIdentifier","src":"724:6:31"},"nativeSrc":"724:15:31","nodeType":"YulFunctionCall","src":"724:15:31"},"nativeSrc":"724:15:31","nodeType":"YulExpressionStatement","src":"724:15:31"}]},"name":"panic_error_0x41","nativeSrc":"565:180:31","nodeType":"YulFunctionDefinition","src":"565:180:31"},{"body":{"nativeSrc":"794:238:31","nodeType":"YulBlock","src":"794:238:31","statements":[{"nativeSrc":"804:58:31","nodeType":"YulVariableDeclaration","src":"804:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"826:6:31","nodeType":"YulIdentifier","src":"826:6:31"},{"arguments":[{"name":"size","nativeSrc":"856:4:31","nodeType":"YulIdentifier","src":"856:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"834:21:31","nodeType":"YulIdentifier","src":"834:21:31"},"nativeSrc":"834:27:31","nodeType":"YulFunctionCall","src":"834:27:31"}],"functionName":{"name":"add","nativeSrc":"822:3:31","nodeType":"YulIdentifier","src":"822:3:31"},"nativeSrc":"822:40:31","nodeType":"YulFunctionCall","src":"822:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"808:10:31","nodeType":"YulTypedName","src":"808:10:31","type":""}]},{"body":{"nativeSrc":"973:22:31","nodeType":"YulBlock","src":"973:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"975:16:31","nodeType":"YulIdentifier","src":"975:16:31"},"nativeSrc":"975:18:31","nodeType":"YulFunctionCall","src":"975:18:31"},"nativeSrc":"975:18:31","nodeType":"YulExpressionStatement","src":"975:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"916:10:31","nodeType":"YulIdentifier","src":"916:10:31"},{"kind":"number","nativeSrc":"928:18:31","nodeType":"YulLiteral","src":"928:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"913:2:31","nodeType":"YulIdentifier","src":"913:2:31"},"nativeSrc":"913:34:31","nodeType":"YulFunctionCall","src":"913:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"952:10:31","nodeType":"YulIdentifier","src":"952:10:31"},{"name":"memPtr","nativeSrc":"964:6:31","nodeType":"YulIdentifier","src":"964:6:31"}],"functionName":{"name":"lt","nativeSrc":"949:2:31","nodeType":"YulIdentifier","src":"949:2:31"},"nativeSrc":"949:22:31","nodeType":"YulFunctionCall","src":"949:22:31"}],"functionName":{"name":"or","nativeSrc":"910:2:31","nodeType":"YulIdentifier","src":"910:2:31"},"nativeSrc":"910:62:31","nodeType":"YulFunctionCall","src":"910:62:31"},"nativeSrc":"907:88:31","nodeType":"YulIf","src":"907:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1011:2:31","nodeType":"YulLiteral","src":"1011:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1015:10:31","nodeType":"YulIdentifier","src":"1015:10:31"}],"functionName":{"name":"mstore","nativeSrc":"1004:6:31","nodeType":"YulIdentifier","src":"1004:6:31"},"nativeSrc":"1004:22:31","nodeType":"YulFunctionCall","src":"1004:22:31"},"nativeSrc":"1004:22:31","nodeType":"YulExpressionStatement","src":"1004:22:31"}]},"name":"finalize_allocation","nativeSrc":"751:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"780:6:31","nodeType":"YulTypedName","src":"780:6:31","type":""},{"name":"size","nativeSrc":"788:4:31","nodeType":"YulTypedName","src":"788:4:31","type":""}],"src":"751:281:31"},{"body":{"nativeSrc":"1079:88:31","nodeType":"YulBlock","src":"1079:88:31","statements":[{"nativeSrc":"1089:30:31","nodeType":"YulAssignment","src":"1089:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1099:18:31","nodeType":"YulIdentifier","src":"1099:18:31"},"nativeSrc":"1099:20:31","nodeType":"YulFunctionCall","src":"1099:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"1089:6:31","nodeType":"YulIdentifier","src":"1089:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1148:6:31","nodeType":"YulIdentifier","src":"1148:6:31"},{"name":"size","nativeSrc":"1156:4:31","nodeType":"YulIdentifier","src":"1156:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1128:19:31","nodeType":"YulIdentifier","src":"1128:19:31"},"nativeSrc":"1128:33:31","nodeType":"YulFunctionCall","src":"1128:33:31"},"nativeSrc":"1128:33:31","nodeType":"YulExpressionStatement","src":"1128:33:31"}]},"name":"allocate_memory","nativeSrc":"1038:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1063:4:31","nodeType":"YulTypedName","src":"1063:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1072:6:31","nodeType":"YulTypedName","src":"1072:6:31","type":""}],"src":"1038:129:31"},{"body":{"nativeSrc":"1255:229:31","nodeType":"YulBlock","src":"1255:229:31","statements":[{"body":{"nativeSrc":"1360:22:31","nodeType":"YulBlock","src":"1360:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1362:16:31","nodeType":"YulIdentifier","src":"1362:16:31"},"nativeSrc":"1362:18:31","nodeType":"YulFunctionCall","src":"1362:18:31"},"nativeSrc":"1362:18:31","nodeType":"YulExpressionStatement","src":"1362:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1332:6:31","nodeType":"YulIdentifier","src":"1332:6:31"},{"kind":"number","nativeSrc":"1340:18:31","nodeType":"YulLiteral","src":"1340:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1329:2:31","nodeType":"YulIdentifier","src":"1329:2:31"},"nativeSrc":"1329:30:31","nodeType":"YulFunctionCall","src":"1329:30:31"},"nativeSrc":"1326:56:31","nodeType":"YulIf","src":"1326:56:31"},{"nativeSrc":"1392:25:31","nodeType":"YulAssignment","src":"1392:25:31","value":{"arguments":[{"name":"length","nativeSrc":"1404:6:31","nodeType":"YulIdentifier","src":"1404:6:31"},{"kind":"number","nativeSrc":"1412:4:31","nodeType":"YulLiteral","src":"1412:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"1400:3:31","nodeType":"YulIdentifier","src":"1400:3:31"},"nativeSrc":"1400:17:31","nodeType":"YulFunctionCall","src":"1400:17:31"},"variableNames":[{"name":"size","nativeSrc":"1392:4:31","nodeType":"YulIdentifier","src":"1392:4:31"}]},{"nativeSrc":"1454:23:31","nodeType":"YulAssignment","src":"1454:23:31","value":{"arguments":[{"name":"size","nativeSrc":"1466:4:31","nodeType":"YulIdentifier","src":"1466:4:31"},{"kind":"number","nativeSrc":"1472:4:31","nodeType":"YulLiteral","src":"1472:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1462:3:31","nodeType":"YulIdentifier","src":"1462:3:31"},"nativeSrc":"1462:15:31","nodeType":"YulFunctionCall","src":"1462:15:31"},"variableNames":[{"name":"size","nativeSrc":"1454:4:31","nodeType":"YulIdentifier","src":"1454:4:31"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"1173:311:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1239:6:31","nodeType":"YulTypedName","src":"1239:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1250:4:31","nodeType":"YulTypedName","src":"1250:4:31","type":""}],"src":"1173:311:31"},{"body":{"nativeSrc":"1579:28:31","nodeType":"YulBlock","src":"1579:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1596:1:31","nodeType":"YulLiteral","src":"1596:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1599:1:31","nodeType":"YulLiteral","src":"1599:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1589:6:31","nodeType":"YulIdentifier","src":"1589:6:31"},"nativeSrc":"1589:12:31","nodeType":"YulFunctionCall","src":"1589:12:31"},"nativeSrc":"1589:12:31","nodeType":"YulExpressionStatement","src":"1589:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"1490:117:31","nodeType":"YulFunctionDefinition","src":"1490:117:31"},{"body":{"nativeSrc":"1658:32:31","nodeType":"YulBlock","src":"1658:32:31","statements":[{"nativeSrc":"1668:16:31","nodeType":"YulAssignment","src":"1668:16:31","value":{"name":"value","nativeSrc":"1679:5:31","nodeType":"YulIdentifier","src":"1679:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1668:7:31","nodeType":"YulIdentifier","src":"1668:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1613:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1640:5:31","nodeType":"YulTypedName","src":"1640:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1650:7:31","nodeType":"YulTypedName","src":"1650:7:31","type":""}],"src":"1613:77:31"},{"body":{"nativeSrc":"1739:79:31","nodeType":"YulBlock","src":"1739:79:31","statements":[{"body":{"nativeSrc":"1796:16:31","nodeType":"YulBlock","src":"1796:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1805:1:31","nodeType":"YulLiteral","src":"1805:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1808:1:31","nodeType":"YulLiteral","src":"1808:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1798:6:31","nodeType":"YulIdentifier","src":"1798:6:31"},"nativeSrc":"1798:12:31","nodeType":"YulFunctionCall","src":"1798:12:31"},"nativeSrc":"1798:12:31","nodeType":"YulExpressionStatement","src":"1798:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1762:5:31","nodeType":"YulIdentifier","src":"1762:5:31"},{"arguments":[{"name":"value","nativeSrc":"1787:5:31","nodeType":"YulIdentifier","src":"1787:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1769:17:31","nodeType":"YulIdentifier","src":"1769:17:31"},"nativeSrc":"1769:24:31","nodeType":"YulFunctionCall","src":"1769:24:31"}],"functionName":{"name":"eq","nativeSrc":"1759:2:31","nodeType":"YulIdentifier","src":"1759:2:31"},"nativeSrc":"1759:35:31","nodeType":"YulFunctionCall","src":"1759:35:31"}],"functionName":{"name":"iszero","nativeSrc":"1752:6:31","nodeType":"YulIdentifier","src":"1752:6:31"},"nativeSrc":"1752:43:31","nodeType":"YulFunctionCall","src":"1752:43:31"},"nativeSrc":"1749:63:31","nodeType":"YulIf","src":"1749:63:31"}]},"name":"validator_revert_t_bytes32","nativeSrc":"1696:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1732:5:31","nodeType":"YulTypedName","src":"1732:5:31","type":""}],"src":"1696:122:31"},{"body":{"nativeSrc":"1887:80:31","nodeType":"YulBlock","src":"1887:80:31","statements":[{"nativeSrc":"1897:22:31","nodeType":"YulAssignment","src":"1897:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"1912:6:31","nodeType":"YulIdentifier","src":"1912:6:31"}],"functionName":{"name":"mload","nativeSrc":"1906:5:31","nodeType":"YulIdentifier","src":"1906:5:31"},"nativeSrc":"1906:13:31","nodeType":"YulFunctionCall","src":"1906:13:31"},"variableNames":[{"name":"value","nativeSrc":"1897:5:31","nodeType":"YulIdentifier","src":"1897:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1955:5:31","nodeType":"YulIdentifier","src":"1955:5:31"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1928:26:31","nodeType":"YulIdentifier","src":"1928:26:31"},"nativeSrc":"1928:33:31","nodeType":"YulFunctionCall","src":"1928:33:31"},"nativeSrc":"1928:33:31","nodeType":"YulExpressionStatement","src":"1928:33:31"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"1824:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1865:6:31","nodeType":"YulTypedName","src":"1865:6:31","type":""},{"name":"end","nativeSrc":"1873:3:31","nodeType":"YulTypedName","src":"1873:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1881:5:31","nodeType":"YulTypedName","src":"1881:5:31","type":""}],"src":"1824:143:31"},{"body":{"nativeSrc":"2103:619:31","nodeType":"YulBlock","src":"2103:619:31","statements":[{"nativeSrc":"2113:90:31","nodeType":"YulAssignment","src":"2113:90:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2195:6:31","nodeType":"YulIdentifier","src":"2195:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"2138:56:31","nodeType":"YulIdentifier","src":"2138:56:31"},"nativeSrc":"2138:64:31","nodeType":"YulFunctionCall","src":"2138:64:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"2122:15:31","nodeType":"YulIdentifier","src":"2122:15:31"},"nativeSrc":"2122:81:31","nodeType":"YulFunctionCall","src":"2122:81:31"},"variableNames":[{"name":"array","nativeSrc":"2113:5:31","nodeType":"YulIdentifier","src":"2113:5:31"}]},{"nativeSrc":"2212:16:31","nodeType":"YulVariableDeclaration","src":"2212:16:31","value":{"name":"array","nativeSrc":"2223:5:31","nodeType":"YulIdentifier","src":"2223:5:31"},"variables":[{"name":"dst","nativeSrc":"2216:3:31","nodeType":"YulTypedName","src":"2216:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2245:5:31","nodeType":"YulIdentifier","src":"2245:5:31"},{"name":"length","nativeSrc":"2252:6:31","nodeType":"YulIdentifier","src":"2252:6:31"}],"functionName":{"name":"mstore","nativeSrc":"2238:6:31","nodeType":"YulIdentifier","src":"2238:6:31"},"nativeSrc":"2238:21:31","nodeType":"YulFunctionCall","src":"2238:21:31"},"nativeSrc":"2238:21:31","nodeType":"YulExpressionStatement","src":"2238:21:31"},{"nativeSrc":"2268:23:31","nodeType":"YulAssignment","src":"2268:23:31","value":{"arguments":[{"name":"array","nativeSrc":"2279:5:31","nodeType":"YulIdentifier","src":"2279:5:31"},{"kind":"number","nativeSrc":"2286:4:31","nodeType":"YulLiteral","src":"2286:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2275:3:31","nodeType":"YulIdentifier","src":"2275:3:31"},"nativeSrc":"2275:16:31","nodeType":"YulFunctionCall","src":"2275:16:31"},"variableNames":[{"name":"dst","nativeSrc":"2268:3:31","nodeType":"YulIdentifier","src":"2268:3:31"}]},{"nativeSrc":"2301:44:31","nodeType":"YulVariableDeclaration","src":"2301:44:31","value":{"arguments":[{"name":"offset","nativeSrc":"2319:6:31","nodeType":"YulIdentifier","src":"2319:6:31"},{"arguments":[{"name":"length","nativeSrc":"2331:6:31","nodeType":"YulIdentifier","src":"2331:6:31"},{"kind":"number","nativeSrc":"2339:4:31","nodeType":"YulLiteral","src":"2339:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"2327:3:31","nodeType":"YulIdentifier","src":"2327:3:31"},"nativeSrc":"2327:17:31","nodeType":"YulFunctionCall","src":"2327:17:31"}],"functionName":{"name":"add","nativeSrc":"2315:3:31","nodeType":"YulIdentifier","src":"2315:3:31"},"nativeSrc":"2315:30:31","nodeType":"YulFunctionCall","src":"2315:30:31"},"variables":[{"name":"srcEnd","nativeSrc":"2305:6:31","nodeType":"YulTypedName","src":"2305:6:31","type":""}]},{"body":{"nativeSrc":"2373:103:31","nodeType":"YulBlock","src":"2373:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2387:77:31","nodeType":"YulIdentifier","src":"2387:77:31"},"nativeSrc":"2387:79:31","nodeType":"YulFunctionCall","src":"2387:79:31"},"nativeSrc":"2387:79:31","nodeType":"YulExpressionStatement","src":"2387:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"2360:6:31","nodeType":"YulIdentifier","src":"2360:6:31"},{"name":"end","nativeSrc":"2368:3:31","nodeType":"YulIdentifier","src":"2368:3:31"}],"functionName":{"name":"gt","nativeSrc":"2357:2:31","nodeType":"YulIdentifier","src":"2357:2:31"},"nativeSrc":"2357:15:31","nodeType":"YulFunctionCall","src":"2357:15:31"},"nativeSrc":"2354:122:31","nodeType":"YulIf","src":"2354:122:31"},{"body":{"nativeSrc":"2561:155:31","nodeType":"YulBlock","src":"2561:155:31","statements":[{"nativeSrc":"2576:21:31","nodeType":"YulVariableDeclaration","src":"2576:21:31","value":{"name":"src","nativeSrc":"2594:3:31","nodeType":"YulIdentifier","src":"2594:3:31"},"variables":[{"name":"elementPos","nativeSrc":"2580:10:31","nodeType":"YulTypedName","src":"2580:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"2618:3:31","nodeType":"YulIdentifier","src":"2618:3:31"},{"arguments":[{"name":"elementPos","nativeSrc":"2655:10:31","nodeType":"YulIdentifier","src":"2655:10:31"},{"name":"end","nativeSrc":"2667:3:31","nodeType":"YulIdentifier","src":"2667:3:31"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"2623:31:31","nodeType":"YulIdentifier","src":"2623:31:31"},"nativeSrc":"2623:48:31","nodeType":"YulFunctionCall","src":"2623:48:31"}],"functionName":{"name":"mstore","nativeSrc":"2611:6:31","nodeType":"YulIdentifier","src":"2611:6:31"},"nativeSrc":"2611:61:31","nodeType":"YulFunctionCall","src":"2611:61:31"},"nativeSrc":"2611:61:31","nodeType":"YulExpressionStatement","src":"2611:61:31"},{"nativeSrc":"2685:21:31","nodeType":"YulAssignment","src":"2685:21:31","value":{"arguments":[{"name":"dst","nativeSrc":"2696:3:31","nodeType":"YulIdentifier","src":"2696:3:31"},{"kind":"number","nativeSrc":"2701:4:31","nodeType":"YulLiteral","src":"2701:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2692:3:31","nodeType":"YulIdentifier","src":"2692:3:31"},"nativeSrc":"2692:14:31","nodeType":"YulFunctionCall","src":"2692:14:31"},"variableNames":[{"name":"dst","nativeSrc":"2685:3:31","nodeType":"YulIdentifier","src":"2685:3:31"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"2514:3:31","nodeType":"YulIdentifier","src":"2514:3:31"},{"name":"srcEnd","nativeSrc":"2519:6:31","nodeType":"YulIdentifier","src":"2519:6:31"}],"functionName":{"name":"lt","nativeSrc":"2511:2:31","nodeType":"YulIdentifier","src":"2511:2:31"},"nativeSrc":"2511:15:31","nodeType":"YulFunctionCall","src":"2511:15:31"},"nativeSrc":"2485:231:31","nodeType":"YulForLoop","post":{"nativeSrc":"2527:25:31","nodeType":"YulBlock","src":"2527:25:31","statements":[{"nativeSrc":"2529:21:31","nodeType":"YulAssignment","src":"2529:21:31","value":{"arguments":[{"name":"src","nativeSrc":"2540:3:31","nodeType":"YulIdentifier","src":"2540:3:31"},{"kind":"number","nativeSrc":"2545:4:31","nodeType":"YulLiteral","src":"2545:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2536:3:31","nodeType":"YulIdentifier","src":"2536:3:31"},"nativeSrc":"2536:14:31","nodeType":"YulFunctionCall","src":"2536:14:31"},"variableNames":[{"name":"src","nativeSrc":"2529:3:31","nodeType":"YulIdentifier","src":"2529:3:31"}]}]},"pre":{"nativeSrc":"2489:21:31","nodeType":"YulBlock","src":"2489:21:31","statements":[{"nativeSrc":"2491:17:31","nodeType":"YulVariableDeclaration","src":"2491:17:31","value":{"name":"offset","nativeSrc":"2502:6:31","nodeType":"YulIdentifier","src":"2502:6:31"},"variables":[{"name":"src","nativeSrc":"2495:3:31","nodeType":"YulTypedName","src":"2495:3:31","type":""}]}]},"src":"2485:231:31"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nativeSrc":"1990:732:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2073:6:31","nodeType":"YulTypedName","src":"2073:6:31","type":""},{"name":"length","nativeSrc":"2081:6:31","nodeType":"YulTypedName","src":"2081:6:31","type":""},{"name":"end","nativeSrc":"2089:3:31","nodeType":"YulTypedName","src":"2089:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2097:5:31","nodeType":"YulTypedName","src":"2097:5:31","type":""}],"src":"1990:732:31"},{"body":{"nativeSrc":"2833:297:31","nodeType":"YulBlock","src":"2833:297:31","statements":[{"body":{"nativeSrc":"2882:83:31","nodeType":"YulBlock","src":"2882:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2884:77:31","nodeType":"YulIdentifier","src":"2884:77:31"},"nativeSrc":"2884:79:31","nodeType":"YulFunctionCall","src":"2884:79:31"},"nativeSrc":"2884:79:31","nodeType":"YulExpressionStatement","src":"2884:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2861:6:31","nodeType":"YulIdentifier","src":"2861:6:31"},{"kind":"number","nativeSrc":"2869:4:31","nodeType":"YulLiteral","src":"2869:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2857:3:31","nodeType":"YulIdentifier","src":"2857:3:31"},"nativeSrc":"2857:17:31","nodeType":"YulFunctionCall","src":"2857:17:31"},{"name":"end","nativeSrc":"2876:3:31","nodeType":"YulIdentifier","src":"2876:3:31"}],"functionName":{"name":"slt","nativeSrc":"2853:3:31","nodeType":"YulIdentifier","src":"2853:3:31"},"nativeSrc":"2853:27:31","nodeType":"YulFunctionCall","src":"2853:27:31"}],"functionName":{"name":"iszero","nativeSrc":"2846:6:31","nodeType":"YulIdentifier","src":"2846:6:31"},"nativeSrc":"2846:35:31","nodeType":"YulFunctionCall","src":"2846:35:31"},"nativeSrc":"2843:122:31","nodeType":"YulIf","src":"2843:122:31"},{"nativeSrc":"2974:27:31","nodeType":"YulVariableDeclaration","src":"2974:27:31","value":{"arguments":[{"name":"offset","nativeSrc":"2994:6:31","nodeType":"YulIdentifier","src":"2994:6:31"}],"functionName":{"name":"mload","nativeSrc":"2988:5:31","nodeType":"YulIdentifier","src":"2988:5:31"},"nativeSrc":"2988:13:31","nodeType":"YulFunctionCall","src":"2988:13:31"},"variables":[{"name":"length","nativeSrc":"2978:6:31","nodeType":"YulTypedName","src":"2978:6:31","type":""}]},{"nativeSrc":"3010:114:31","nodeType":"YulAssignment","src":"3010:114:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3097:6:31","nodeType":"YulIdentifier","src":"3097:6:31"},{"kind":"number","nativeSrc":"3105:4:31","nodeType":"YulLiteral","src":"3105:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3093:3:31","nodeType":"YulIdentifier","src":"3093:3:31"},"nativeSrc":"3093:17:31","nodeType":"YulFunctionCall","src":"3093:17:31"},{"name":"length","nativeSrc":"3112:6:31","nodeType":"YulIdentifier","src":"3112:6:31"},{"name":"end","nativeSrc":"3120:3:31","nodeType":"YulIdentifier","src":"3120:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nativeSrc":"3019:73:31","nodeType":"YulIdentifier","src":"3019:73:31"},"nativeSrc":"3019:105:31","nodeType":"YulFunctionCall","src":"3019:105:31"},"variableNames":[{"name":"array","nativeSrc":"3010:5:31","nodeType":"YulIdentifier","src":"3010:5:31"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nativeSrc":"2745:385:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2811:6:31","nodeType":"YulTypedName","src":"2811:6:31","type":""},{"name":"end","nativeSrc":"2819:3:31","nodeType":"YulTypedName","src":"2819:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2827:5:31","nodeType":"YulTypedName","src":"2827:5:31","type":""}],"src":"2745:385:31"},{"body":{"nativeSrc":"3181:81:31","nodeType":"YulBlock","src":"3181:81:31","statements":[{"nativeSrc":"3191:65:31","nodeType":"YulAssignment","src":"3191:65:31","value":{"arguments":[{"name":"value","nativeSrc":"3206:5:31","nodeType":"YulIdentifier","src":"3206:5:31"},{"kind":"number","nativeSrc":"3213:42:31","nodeType":"YulLiteral","src":"3213:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3202:3:31","nodeType":"YulIdentifier","src":"3202:3:31"},"nativeSrc":"3202:54:31","nodeType":"YulFunctionCall","src":"3202:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3191:7:31","nodeType":"YulIdentifier","src":"3191:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3136:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3163:5:31","nodeType":"YulTypedName","src":"3163:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3173:7:31","nodeType":"YulTypedName","src":"3173:7:31","type":""}],"src":"3136:126:31"},{"body":{"nativeSrc":"3313:51:31","nodeType":"YulBlock","src":"3313:51:31","statements":[{"nativeSrc":"3323:35:31","nodeType":"YulAssignment","src":"3323:35:31","value":{"arguments":[{"name":"value","nativeSrc":"3352:5:31","nodeType":"YulIdentifier","src":"3352:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3334:17:31","nodeType":"YulIdentifier","src":"3334:17:31"},"nativeSrc":"3334:24:31","nodeType":"YulFunctionCall","src":"3334:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3323:7:31","nodeType":"YulIdentifier","src":"3323:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"3268:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3295:5:31","nodeType":"YulTypedName","src":"3295:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3305:7:31","nodeType":"YulTypedName","src":"3305:7:31","type":""}],"src":"3268:96:31"},{"body":{"nativeSrc":"3413:79:31","nodeType":"YulBlock","src":"3413:79:31","statements":[{"body":{"nativeSrc":"3470:16:31","nodeType":"YulBlock","src":"3470:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3479:1:31","nodeType":"YulLiteral","src":"3479:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3482:1:31","nodeType":"YulLiteral","src":"3482:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3472:6:31","nodeType":"YulIdentifier","src":"3472:6:31"},"nativeSrc":"3472:12:31","nodeType":"YulFunctionCall","src":"3472:12:31"},"nativeSrc":"3472:12:31","nodeType":"YulExpressionStatement","src":"3472:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3436:5:31","nodeType":"YulIdentifier","src":"3436:5:31"},{"arguments":[{"name":"value","nativeSrc":"3461:5:31","nodeType":"YulIdentifier","src":"3461:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3443:17:31","nodeType":"YulIdentifier","src":"3443:17:31"},"nativeSrc":"3443:24:31","nodeType":"YulFunctionCall","src":"3443:24:31"}],"functionName":{"name":"eq","nativeSrc":"3433:2:31","nodeType":"YulIdentifier","src":"3433:2:31"},"nativeSrc":"3433:35:31","nodeType":"YulFunctionCall","src":"3433:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3426:6:31","nodeType":"YulIdentifier","src":"3426:6:31"},"nativeSrc":"3426:43:31","nodeType":"YulFunctionCall","src":"3426:43:31"},"nativeSrc":"3423:63:31","nodeType":"YulIf","src":"3423:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"3370:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3406:5:31","nodeType":"YulTypedName","src":"3406:5:31","type":""}],"src":"3370:122:31"},{"body":{"nativeSrc":"3561:80:31","nodeType":"YulBlock","src":"3561:80:31","statements":[{"nativeSrc":"3571:22:31","nodeType":"YulAssignment","src":"3571:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"3586:6:31","nodeType":"YulIdentifier","src":"3586:6:31"}],"functionName":{"name":"mload","nativeSrc":"3580:5:31","nodeType":"YulIdentifier","src":"3580:5:31"},"nativeSrc":"3580:13:31","nodeType":"YulFunctionCall","src":"3580:13:31"},"variableNames":[{"name":"value","nativeSrc":"3571:5:31","nodeType":"YulIdentifier","src":"3571:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3629:5:31","nodeType":"YulIdentifier","src":"3629:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3602:26:31","nodeType":"YulIdentifier","src":"3602:26:31"},"nativeSrc":"3602:33:31","nodeType":"YulFunctionCall","src":"3602:33:31"},"nativeSrc":"3602:33:31","nodeType":"YulExpressionStatement","src":"3602:33:31"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"3498:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3539:6:31","nodeType":"YulTypedName","src":"3539:6:31","type":""},{"name":"end","nativeSrc":"3547:3:31","nodeType":"YulTypedName","src":"3547:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3555:5:31","nodeType":"YulTypedName","src":"3555:5:31","type":""}],"src":"3498:143:31"},{"body":{"nativeSrc":"3692:32:31","nodeType":"YulBlock","src":"3692:32:31","statements":[{"nativeSrc":"3702:16:31","nodeType":"YulAssignment","src":"3702:16:31","value":{"name":"value","nativeSrc":"3713:5:31","nodeType":"YulIdentifier","src":"3713:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3702:7:31","nodeType":"YulIdentifier","src":"3702:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3647:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3674:5:31","nodeType":"YulTypedName","src":"3674:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3684:7:31","nodeType":"YulTypedName","src":"3684:7:31","type":""}],"src":"3647:77:31"},{"body":{"nativeSrc":"3773:79:31","nodeType":"YulBlock","src":"3773:79:31","statements":[{"body":{"nativeSrc":"3830:16:31","nodeType":"YulBlock","src":"3830:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3839:1:31","nodeType":"YulLiteral","src":"3839:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3842:1:31","nodeType":"YulLiteral","src":"3842:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3832:6:31","nodeType":"YulIdentifier","src":"3832:6:31"},"nativeSrc":"3832:12:31","nodeType":"YulFunctionCall","src":"3832:12:31"},"nativeSrc":"3832:12:31","nodeType":"YulExpressionStatement","src":"3832:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3796:5:31","nodeType":"YulIdentifier","src":"3796:5:31"},{"arguments":[{"name":"value","nativeSrc":"3821:5:31","nodeType":"YulIdentifier","src":"3821:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3803:17:31","nodeType":"YulIdentifier","src":"3803:17:31"},"nativeSrc":"3803:24:31","nodeType":"YulFunctionCall","src":"3803:24:31"}],"functionName":{"name":"eq","nativeSrc":"3793:2:31","nodeType":"YulIdentifier","src":"3793:2:31"},"nativeSrc":"3793:35:31","nodeType":"YulFunctionCall","src":"3793:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3786:6:31","nodeType":"YulIdentifier","src":"3786:6:31"},"nativeSrc":"3786:43:31","nodeType":"YulFunctionCall","src":"3786:43:31"},"nativeSrc":"3783:63:31","nodeType":"YulIf","src":"3783:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"3730:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3766:5:31","nodeType":"YulTypedName","src":"3766:5:31","type":""}],"src":"3730:122:31"},{"body":{"nativeSrc":"3921:80:31","nodeType":"YulBlock","src":"3921:80:31","statements":[{"nativeSrc":"3931:22:31","nodeType":"YulAssignment","src":"3931:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"3946:6:31","nodeType":"YulIdentifier","src":"3946:6:31"}],"functionName":{"name":"mload","nativeSrc":"3940:5:31","nodeType":"YulIdentifier","src":"3940:5:31"},"nativeSrc":"3940:13:31","nodeType":"YulFunctionCall","src":"3940:13:31"},"variableNames":[{"name":"value","nativeSrc":"3931:5:31","nodeType":"YulIdentifier","src":"3931:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3989:5:31","nodeType":"YulIdentifier","src":"3989:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3962:26:31","nodeType":"YulIdentifier","src":"3962:26:31"},"nativeSrc":"3962:33:31","nodeType":"YulFunctionCall","src":"3962:33:31"},"nativeSrc":"3962:33:31","nodeType":"YulExpressionStatement","src":"3962:33:31"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3858:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3899:6:31","nodeType":"YulTypedName","src":"3899:6:31","type":""},{"name":"end","nativeSrc":"3907:3:31","nodeType":"YulTypedName","src":"3907:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3915:5:31","nodeType":"YulTypedName","src":"3915:5:31","type":""}],"src":"3858:143:31"},{"body":{"nativeSrc":"4143:730:31","nodeType":"YulBlock","src":"4143:730:31","statements":[{"body":{"nativeSrc":"4189:83:31","nodeType":"YulBlock","src":"4189:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4191:77:31","nodeType":"YulIdentifier","src":"4191:77:31"},"nativeSrc":"4191:79:31","nodeType":"YulFunctionCall","src":"4191:79:31"},"nativeSrc":"4191:79:31","nodeType":"YulExpressionStatement","src":"4191:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4164:7:31","nodeType":"YulIdentifier","src":"4164:7:31"},{"name":"headStart","nativeSrc":"4173:9:31","nodeType":"YulIdentifier","src":"4173:9:31"}],"functionName":{"name":"sub","nativeSrc":"4160:3:31","nodeType":"YulIdentifier","src":"4160:3:31"},"nativeSrc":"4160:23:31","nodeType":"YulFunctionCall","src":"4160:23:31"},{"kind":"number","nativeSrc":"4185:2:31","nodeType":"YulLiteral","src":"4185:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4156:3:31","nodeType":"YulIdentifier","src":"4156:3:31"},"nativeSrc":"4156:32:31","nodeType":"YulFunctionCall","src":"4156:32:31"},"nativeSrc":"4153:119:31","nodeType":"YulIf","src":"4153:119:31"},{"nativeSrc":"4282:306:31","nodeType":"YulBlock","src":"4282:306:31","statements":[{"nativeSrc":"4297:38:31","nodeType":"YulVariableDeclaration","src":"4297:38:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4321:9:31","nodeType":"YulIdentifier","src":"4321:9:31"},{"kind":"number","nativeSrc":"4332:1:31","nodeType":"YulLiteral","src":"4332:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4317:3:31","nodeType":"YulIdentifier","src":"4317:3:31"},"nativeSrc":"4317:17:31","nodeType":"YulFunctionCall","src":"4317:17:31"}],"functionName":{"name":"mload","nativeSrc":"4311:5:31","nodeType":"YulIdentifier","src":"4311:5:31"},"nativeSrc":"4311:24:31","nodeType":"YulFunctionCall","src":"4311:24:31"},"variables":[{"name":"offset","nativeSrc":"4301:6:31","nodeType":"YulTypedName","src":"4301:6:31","type":""}]},{"body":{"nativeSrc":"4382:83:31","nodeType":"YulBlock","src":"4382:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4384:77:31","nodeType":"YulIdentifier","src":"4384:77:31"},"nativeSrc":"4384:79:31","nodeType":"YulFunctionCall","src":"4384:79:31"},"nativeSrc":"4384:79:31","nodeType":"YulExpressionStatement","src":"4384:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4354:6:31","nodeType":"YulIdentifier","src":"4354:6:31"},{"kind":"number","nativeSrc":"4362:18:31","nodeType":"YulLiteral","src":"4362:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4351:2:31","nodeType":"YulIdentifier","src":"4351:2:31"},"nativeSrc":"4351:30:31","nodeType":"YulFunctionCall","src":"4351:30:31"},"nativeSrc":"4348:117:31","nodeType":"YulIf","src":"4348:117:31"},{"nativeSrc":"4479:99:31","nodeType":"YulAssignment","src":"4479:99:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4550:9:31","nodeType":"YulIdentifier","src":"4550:9:31"},{"name":"offset","nativeSrc":"4561:6:31","nodeType":"YulIdentifier","src":"4561:6:31"}],"functionName":{"name":"add","nativeSrc":"4546:3:31","nodeType":"YulIdentifier","src":"4546:3:31"},"nativeSrc":"4546:22:31","nodeType":"YulFunctionCall","src":"4546:22:31"},{"name":"dataEnd","nativeSrc":"4570:7:31","nodeType":"YulIdentifier","src":"4570:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory","nativeSrc":"4489:56:31","nodeType":"YulIdentifier","src":"4489:56:31"},"nativeSrc":"4489:89:31","nodeType":"YulFunctionCall","src":"4489:89:31"},"variableNames":[{"name":"value0","nativeSrc":"4479:6:31","nodeType":"YulIdentifier","src":"4479:6:31"}]}]},{"nativeSrc":"4598:129:31","nodeType":"YulBlock","src":"4598:129:31","statements":[{"nativeSrc":"4613:16:31","nodeType":"YulVariableDeclaration","src":"4613:16:31","value":{"kind":"number","nativeSrc":"4627:2:31","nodeType":"YulLiteral","src":"4627:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4617:6:31","nodeType":"YulTypedName","src":"4617:6:31","type":""}]},{"nativeSrc":"4643:74:31","nodeType":"YulAssignment","src":"4643:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4689:9:31","nodeType":"YulIdentifier","src":"4689:9:31"},{"name":"offset","nativeSrc":"4700:6:31","nodeType":"YulIdentifier","src":"4700:6:31"}],"functionName":{"name":"add","nativeSrc":"4685:3:31","nodeType":"YulIdentifier","src":"4685:3:31"},"nativeSrc":"4685:22:31","nodeType":"YulFunctionCall","src":"4685:22:31"},{"name":"dataEnd","nativeSrc":"4709:7:31","nodeType":"YulIdentifier","src":"4709:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"4653:31:31","nodeType":"YulIdentifier","src":"4653:31:31"},"nativeSrc":"4653:64:31","nodeType":"YulFunctionCall","src":"4653:64:31"},"variableNames":[{"name":"value1","nativeSrc":"4643:6:31","nodeType":"YulIdentifier","src":"4643:6:31"}]}]},{"nativeSrc":"4737:129:31","nodeType":"YulBlock","src":"4737:129:31","statements":[{"nativeSrc":"4752:16:31","nodeType":"YulVariableDeclaration","src":"4752:16:31","value":{"kind":"number","nativeSrc":"4766:2:31","nodeType":"YulLiteral","src":"4766:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4756:6:31","nodeType":"YulTypedName","src":"4756:6:31","type":""}]},{"nativeSrc":"4782:74:31","nodeType":"YulAssignment","src":"4782:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4828:9:31","nodeType":"YulIdentifier","src":"4828:9:31"},{"name":"offset","nativeSrc":"4839:6:31","nodeType":"YulIdentifier","src":"4839:6:31"}],"functionName":{"name":"add","nativeSrc":"4824:3:31","nodeType":"YulIdentifier","src":"4824:3:31"},"nativeSrc":"4824:22:31","nodeType":"YulFunctionCall","src":"4824:22:31"},{"name":"dataEnd","nativeSrc":"4848:7:31","nodeType":"YulIdentifier","src":"4848:7:31"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"4792:31:31","nodeType":"YulIdentifier","src":"4792:31:31"},"nativeSrc":"4792:64:31","nodeType":"YulFunctionCall","src":"4792:64:31"},"variableNames":[{"name":"value2","nativeSrc":"4782:6:31","nodeType":"YulIdentifier","src":"4782:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256_fromMemory","nativeSrc":"4007:866:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4097:9:31","nodeType":"YulTypedName","src":"4097:9:31","type":""},{"name":"dataEnd","nativeSrc":"4108:7:31","nodeType":"YulTypedName","src":"4108:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4120:6:31","nodeType":"YulTypedName","src":"4120:6:31","type":""},{"name":"value1","nativeSrc":"4128:6:31","nodeType":"YulTypedName","src":"4128:6:31","type":""},{"name":"value2","nativeSrc":"4136:6:31","nodeType":"YulTypedName","src":"4136:6:31","type":""}],"src":"4007:866:31"},{"body":{"nativeSrc":"4907:152:31","nodeType":"YulBlock","src":"4907:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4924:1:31","nodeType":"YulLiteral","src":"4924:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"4927:77:31","nodeType":"YulLiteral","src":"4927:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4917:6:31","nodeType":"YulIdentifier","src":"4917:6:31"},"nativeSrc":"4917:88:31","nodeType":"YulFunctionCall","src":"4917:88:31"},"nativeSrc":"4917:88:31","nodeType":"YulExpressionStatement","src":"4917:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5021:1:31","nodeType":"YulLiteral","src":"5021:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"5024:4:31","nodeType":"YulLiteral","src":"5024:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"5014:6:31","nodeType":"YulIdentifier","src":"5014:6:31"},"nativeSrc":"5014:15:31","nodeType":"YulFunctionCall","src":"5014:15:31"},"nativeSrc":"5014:15:31","nodeType":"YulExpressionStatement","src":"5014:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5045:1:31","nodeType":"YulLiteral","src":"5045:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5048:4:31","nodeType":"YulLiteral","src":"5048:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5038:6:31","nodeType":"YulIdentifier","src":"5038:6:31"},"nativeSrc":"5038:15:31","nodeType":"YulFunctionCall","src":"5038:15:31"},"nativeSrc":"5038:15:31","nodeType":"YulExpressionStatement","src":"5038:15:31"}]},"name":"panic_error_0x32","nativeSrc":"4879:180:31","nodeType":"YulFunctionDefinition","src":"4879:180:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000cbf38038062000cbf83398181016040528101906200003791906200037b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555060005b83518110156200010d5760016040518060400160405280868481518110620000ae57620000ad620003f6565b5b602002602001015181526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050808060010191505062000081565b5050505062000425565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200017b8262000130565b810181811067ffffffffffffffff821117156200019d576200019c62000141565b5b80604052505050565b6000620001b262000117565b9050620001c0828262000170565b919050565b600067ffffffffffffffff821115620001e357620001e262000141565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6200020e81620001f9565b81146200021a57600080fd5b50565b6000815190506200022e8162000203565b92915050565b60006200024b6200024584620001c5565b620001a6565b90508083825260208201905060208402830185811115620002715762000270620001f4565b5b835b818110156200029e57806200028988826200021d565b84526020840193505060208101905062000273565b5050509392505050565b600082601f830112620002c057620002bf6200012b565b5b8151620002d284826020860162000234565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030882620002db565b9050919050565b6200031a81620002fb565b81146200032657600080fd5b50565b6000815190506200033a816200030f565b92915050565b6000819050919050565b620003558162000340565b81146200036157600080fd5b50565b60008151905062000375816200034a565b92915050565b60008060006060848603121562000397576200039662000121565b5b600084015167ffffffffffffffff811115620003b857620003b762000126565b5b620003c686828701620002a8565b9350506020620003d98682870162000329565b9250506040620003ec8682870162000364565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61088a80620004356000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063609ff1bd1161005b578063609ff1bd146100ef5780639e90d0d91461010d578063b384abef1461013d578063e2ba53f0146101595761007d565b8063013cf08b146100825780632a8cd29e146100b357806355a373d6146100d1575b600080fd5b61009c6004803603810190610097919061049e565b610177565b6040516100aa9291906104f3565b60405180910390f35b6100bb6101ab565b6040516100c8919061051c565b60405180910390f35b6100d96101b1565b6040516100e691906105b6565b60405180910390f35b6100f76101d5565b604051610104919061051c565b60405180910390f35b6101276004803603810190610122919061060f565b610257565b604051610134919061051c565b60405180910390f35b6101576004803603810190610152919061063c565b61026f565b005b61016161042f565b60405161016e919061067c565b60405180910390f35b6001818154811061018757600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b60018054905081101561025257816001828154811061020157610200610697565b5b9060005260206000209060020201600101541115610245576001818154811061022d5761022c610697565b5b90600052602060002090600202016001015491508092505b80806001019150506101df565b505090565b60036020528060005260406000206000915090505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a46b1a8336002546040518363ffffffff1660e01b815260040161030d9291906106d5565b602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e9190610713565b610358919061076f565b1015610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610800565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103e89190610820565b92505081905550806001838154811061040457610403610697565b5b906000526020600020906002020160010160008282546104249190610820565b925050819055505050565b6000600161043b6101d5565b8154811061044c5761044b610697565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b61047b81610468565b811461048657600080fd5b50565b60008135905061049881610472565b92915050565b6000602082840312156104b4576104b3610463565b5b60006104c284828501610489565b91505092915050565b6000819050919050565b6104de816104cb565b82525050565b6104ed81610468565b82525050565b600060408201905061050860008301856104d5565b61051560208301846104e4565b9392505050565b600060208201905061053160008301846104e4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061057c61057761057284610537565b610557565b610537565b9050919050565b600061058e82610561565b9050919050565b60006105a082610583565b9050919050565b6105b081610595565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b60006105dc82610537565b9050919050565b6105ec816105d1565b81146105f757600080fd5b50565b600081359050610609816105e3565b92915050565b60006020828403121561062557610624610463565b5b6000610633848285016105fa565b91505092915050565b6000806040838503121561065357610652610463565b5b600061066185828601610489565b925050602061067285828601610489565b9150509250929050565b600060208201905061069160008301846104d5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6106cf816105d1565b82525050565b60006040820190506106ea60008301856106c6565b6106f760208301846104e4565b9392505050565b60008151905061070d81610472565b92915050565b60006020828403121561072957610728610463565b5b6000610737848285016106fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061077a82610468565b915061078583610468565b925082820390508181111561079d5761079c610740565b5b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000600082015250565b60006107ea6017836107a3565b91506107f5826107b4565b602082019050919050565b60006020820190508181036000830152610819816107dd565b9050919050565b600061082b82610468565b915061083683610468565b925082820190508082111561084e5761084d610740565b5b9291505056fea2646970667358221220285e78c6028292ce6c1c5d70ce6ad821631cd89d5fb840445d918042d5de879664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCBF CODESIZE SUB DUP1 PUSH3 0xCBF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x37B JUMP JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x10D JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xAE JUMPI PUSH3 0xAD PUSH3 0x3F6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH3 0x81 JUMP JUMPDEST POP POP POP POP PUSH3 0x425 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x17B DUP3 PUSH3 0x130 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x19D JUMPI PUSH3 0x19C PUSH3 0x141 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B2 PUSH3 0x117 JUMP JUMPDEST SWAP1 POP PUSH3 0x1C0 DUP3 DUP3 PUSH3 0x170 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1E3 JUMPI PUSH3 0x1E2 PUSH3 0x141 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20E DUP2 PUSH3 0x1F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x22E DUP2 PUSH3 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B PUSH3 0x245 DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH3 0x1A6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x271 JUMPI PUSH3 0x270 PUSH3 0x1F4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x29E JUMPI DUP1 PUSH3 0x289 DUP9 DUP3 PUSH3 0x21D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x273 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2C0 JUMPI PUSH3 0x2BF PUSH3 0x12B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x308 DUP3 PUSH3 0x2DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x31A DUP2 PUSH3 0x2FB JUMP JUMPDEST DUP2 EQ PUSH3 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x33A DUP2 PUSH3 0x30F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x355 DUP2 PUSH3 0x340 JUMP JUMPDEST DUP2 EQ PUSH3 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x375 DUP2 PUSH3 0x34A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x397 JUMPI PUSH3 0x396 PUSH3 0x121 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3B8 JUMPI PUSH3 0x3B7 PUSH3 0x126 JUMP JUMPDEST JUMPDEST PUSH3 0x3C6 DUP7 DUP3 DUP8 ADD PUSH3 0x2A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3D9 DUP7 DUP3 DUP8 ADD PUSH3 0x329 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3EC DUP7 DUP3 DUP8 ADD PUSH3 0x364 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x88A DUP1 PUSH3 0x435 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x9E90D0D9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x159 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2A8CD29E EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0xD1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP3 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x252 JUMPI DUP2 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x201 JUMPI PUSH2 0x200 PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x245 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1DF JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A46B1A8 CALLER PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x404 JUMPI PUSH2 0x403 PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x43B PUSH2 0x1D5 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47B DUP2 PUSH2 0x468 JUMP JUMPDEST DUP2 EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x498 DUP2 PUSH2 0x472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP5 DUP3 DUP6 ADD PUSH2 0x489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x508 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x515 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C PUSH2 0x577 PUSH2 0x572 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58E DUP3 PUSH2 0x561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP3 PUSH2 0x583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DC DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EC DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x609 DUP2 PUSH2 0x5E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP5 DUP3 DUP6 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x653 JUMPI PUSH2 0x652 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x661 DUP6 DUP3 DUP7 ADD PUSH2 0x489 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x672 DUP6 DUP3 DUP7 ADD PUSH2 0x489 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x691 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x6F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x70D DUP2 PUSH2 0x472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x737 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP3 PUSH2 0x468 JUMP JUMPDEST SWAP2 POP PUSH2 0x785 DUP4 PUSH2 0x468 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x740 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820766F74696E6720706F776572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA PUSH1 0x17 DUP4 PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F5 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x819 DUP2 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x468 JUMP JUMPDEST SWAP2 POP PUSH2 0x836 DUP4 PUSH2 0x468 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84D PUSH2 0x740 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 MCOPY PUSH25 0xC6028292CE6C1C5D70CE6AD821631CD89D5FB840445D918042 0xD5 0xDE DUP8 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"223:1782:30:-:0;;;489:410;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:14;594:13;;:40;;;;;;;;;;;;;;;;;;664:18;644:17;:38;;;;759:6;754:139;775:14;:21;771:1;:25;754:139;;;817:9;832:49;;;;;;;;848:14;863:1;848:17;;;;;;;;:::i;:::-;;;;;;;;832:49;;;;878:1;832:49;;;817:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:3;;;;;;;754:139;;;;489:410;;;223:1782;;7:75:31;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:77;1650:7;1679:5;1668:16;;1613:77;;;:::o;1696:122::-;1769:24;1787:5;1769:24;:::i;:::-;1762:5;1759:35;1749:63;;1808:1;1805;1798:12;1749:63;1696:122;:::o;1824:143::-;1881:5;1912:6;1906:13;1897:22;;1928:33;1955:5;1928:33;:::i;:::-;1824:143;;;;:::o;1990:732::-;2097:5;2122:81;2138:64;2195:6;2138:64;:::i;:::-;2122:81;:::i;:::-;2113:90;;2223:5;2252:6;2245:5;2238:21;2286:4;2279:5;2275:16;2268:23;;2339:4;2331:6;2327:17;2319:6;2315:30;2368:3;2360:6;2357:15;2354:122;;;2387:79;;:::i;:::-;2354:122;2502:6;2485:231;2519:6;2514:3;2511:15;2485:231;;;2594:3;2623:48;2667:3;2655:10;2623:48;:::i;:::-;2618:3;2611:61;2701:4;2696:3;2692:14;2685:21;;2561:155;2545:4;2540:3;2536:14;2529:21;;2485:231;;;2489:21;2103:619;;1990:732;;;;;:::o;2745:385::-;2827:5;2876:3;2869:4;2861:6;2857:17;2853:27;2843:122;;2884:79;;:::i;:::-;2843:122;2994:6;2988:13;3019:105;3120:3;3112:6;3105:4;3097:6;3093:17;3019:105;:::i;:::-;3010:114;;2833:297;2745:385;;;;:::o;3136:126::-;3173:7;3213:42;3206:5;3202:54;3191:65;;3136:126;;;:::o;3268:96::-;3305:7;3334:24;3352:5;3334:24;:::i;:::-;3323:35;;3268:96;;;:::o;3370:122::-;3443:24;3461:5;3443:24;:::i;:::-;3436:5;3433:35;3423:63;;3482:1;3479;3472:12;3423:63;3370:122;:::o;3498:143::-;3555:5;3586:6;3580:13;3571:22;;3602:33;3629:5;3602:33;:::i;:::-;3498:143;;;;:::o;3647:77::-;3684:7;3713:5;3702:16;;3647:77;;;:::o;3730:122::-;3803:24;3821:5;3803:24;:::i;:::-;3796:5;3793:35;3783:63;;3842:1;3839;3832:12;3783:63;3730:122;:::o;3858:143::-;3915:5;3946:6;3940:13;3931:22;;3962:33;3989:5;3962:33;:::i;:::-;3858:143;;;;:::o;4007:866::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4332:1;4321:9;4317:17;4311:24;4362:18;4354:6;4351:30;4348:117;;;4384:79;;:::i;:::-;4348:117;4489:89;4570:7;4561:6;4550:9;4546:22;4489:89;:::i;:::-;4479:99;;4282:306;4627:2;4653:64;4709:7;4700:6;4689:9;4685:22;4653:64;:::i;:::-;4643:74;;4598:129;4766:2;4792:64;4848:7;4839:6;4828:9;4824:22;4792:64;:::i;:::-;4782:74;;4737:129;4007:866;;;;;:::o;4879:180::-;4927:77;4924:1;4917:88;5024:4;5021:1;5014:15;5048:4;5045:1;5038:15;223:1782:30;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@proposals_8383":{"entryPoint":375,"id":8383,"parameterSlots":0,"returnSlots":0},"@targetBlockNumber_8385":{"entryPoint":427,"id":8385,"parameterSlots":0,"returnSlots":0},"@tokenContract_8379":{"entryPoint":433,"id":8379,"parameterSlots":0,"returnSlots":0},"@votePowerSpent_8389":{"entryPoint":599,"id":8389,"parameterSlots":0,"returnSlots":0},"@vote_8473":{"entryPoint":623,"id":8473,"parameterSlots":2,"returnSlots":0},"@winnerName_8529":{"entryPoint":1071,"id":8529,"parameterSlots":0,"returnSlots":1},"@winningProposal_8515":{"entryPoint":469,"id":8515,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1811,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":1596,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1734,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IMyToken_$8371_to_t_address_fromStack":{"entryPoint":1447,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c_to_t_string_memory_ptr_fromStack":{"entryPoint":2013,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1749,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":1660,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":1267,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IMyToken_$8371__to_t_address__fromStack_reversed":{"entryPoint":1462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2048,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1308,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1955,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1903,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1489,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1227,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1128,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IMyToken_$8371_to_t_address":{"entryPoint":1429,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":1411,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":1377,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":1367,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1856,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1687,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1123,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c":{"entryPoint":1972,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1507,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1138,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7285:31","nodeType":"YulBlock","src":"0:7285:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"379:32:31","nodeType":"YulBlock","src":"379:32:31","statements":[{"nativeSrc":"389:16:31","nodeType":"YulAssignment","src":"389:16:31","value":{"name":"value","nativeSrc":"400:5:31","nodeType":"YulIdentifier","src":"400:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:31","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:31","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:31","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:77:31"},{"body":{"nativeSrc":"460:79:31","nodeType":"YulBlock","src":"460:79:31","statements":[{"body":{"nativeSrc":"517:16:31","nodeType":"YulBlock","src":"517:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:31","nodeType":"YulLiteral","src":"526:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:31","nodeType":"YulLiteral","src":"529:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:31","nodeType":"YulIdentifier","src":"519:6:31"},"nativeSrc":"519:12:31","nodeType":"YulFunctionCall","src":"519:12:31"},"nativeSrc":"519:12:31","nodeType":"YulExpressionStatement","src":"519:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:31","nodeType":"YulIdentifier","src":"483:5:31"},{"arguments":[{"name":"value","nativeSrc":"508:5:31","nodeType":"YulIdentifier","src":"508:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:31","nodeType":"YulIdentifier","src":"490:17:31"},"nativeSrc":"490:24:31","nodeType":"YulFunctionCall","src":"490:24:31"}],"functionName":{"name":"eq","nativeSrc":"480:2:31","nodeType":"YulIdentifier","src":"480:2:31"},"nativeSrc":"480:35:31","nodeType":"YulFunctionCall","src":"480:35:31"}],"functionName":{"name":"iszero","nativeSrc":"473:6:31","nodeType":"YulIdentifier","src":"473:6:31"},"nativeSrc":"473:43:31","nodeType":"YulFunctionCall","src":"473:43:31"},"nativeSrc":"470:63:31","nodeType":"YulIf","src":"470:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:31","nodeType":"YulTypedName","src":"453:5:31","type":""}],"src":"417:122:31"},{"body":{"nativeSrc":"597:87:31","nodeType":"YulBlock","src":"597:87:31","statements":[{"nativeSrc":"607:29:31","nodeType":"YulAssignment","src":"607:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"629:6:31","nodeType":"YulIdentifier","src":"629:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"616:12:31","nodeType":"YulIdentifier","src":"616:12:31"},"nativeSrc":"616:20:31","nodeType":"YulFunctionCall","src":"616:20:31"},"variableNames":[{"name":"value","nativeSrc":"607:5:31","nodeType":"YulIdentifier","src":"607:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"672:5:31","nodeType":"YulIdentifier","src":"672:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"645:26:31","nodeType":"YulIdentifier","src":"645:26:31"},"nativeSrc":"645:33:31","nodeType":"YulFunctionCall","src":"645:33:31"},"nativeSrc":"645:33:31","nodeType":"YulExpressionStatement","src":"645:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"545:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"575:6:31","nodeType":"YulTypedName","src":"575:6:31","type":""},{"name":"end","nativeSrc":"583:3:31","nodeType":"YulTypedName","src":"583:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"591:5:31","nodeType":"YulTypedName","src":"591:5:31","type":""}],"src":"545:139:31"},{"body":{"nativeSrc":"756:263:31","nodeType":"YulBlock","src":"756:263:31","statements":[{"body":{"nativeSrc":"802:83:31","nodeType":"YulBlock","src":"802:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"804:77:31","nodeType":"YulIdentifier","src":"804:77:31"},"nativeSrc":"804:79:31","nodeType":"YulFunctionCall","src":"804:79:31"},"nativeSrc":"804:79:31","nodeType":"YulExpressionStatement","src":"804:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"777:7:31","nodeType":"YulIdentifier","src":"777:7:31"},{"name":"headStart","nativeSrc":"786:9:31","nodeType":"YulIdentifier","src":"786:9:31"}],"functionName":{"name":"sub","nativeSrc":"773:3:31","nodeType":"YulIdentifier","src":"773:3:31"},"nativeSrc":"773:23:31","nodeType":"YulFunctionCall","src":"773:23:31"},{"kind":"number","nativeSrc":"798:2:31","nodeType":"YulLiteral","src":"798:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"769:3:31","nodeType":"YulIdentifier","src":"769:3:31"},"nativeSrc":"769:32:31","nodeType":"YulFunctionCall","src":"769:32:31"},"nativeSrc":"766:119:31","nodeType":"YulIf","src":"766:119:31"},{"nativeSrc":"895:117:31","nodeType":"YulBlock","src":"895:117:31","statements":[{"nativeSrc":"910:15:31","nodeType":"YulVariableDeclaration","src":"910:15:31","value":{"kind":"number","nativeSrc":"924:1:31","nodeType":"YulLiteral","src":"924:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"914:6:31","nodeType":"YulTypedName","src":"914:6:31","type":""}]},{"nativeSrc":"939:63:31","nodeType":"YulAssignment","src":"939:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"974:9:31","nodeType":"YulIdentifier","src":"974:9:31"},{"name":"offset","nativeSrc":"985:6:31","nodeType":"YulIdentifier","src":"985:6:31"}],"functionName":{"name":"add","nativeSrc":"970:3:31","nodeType":"YulIdentifier","src":"970:3:31"},"nativeSrc":"970:22:31","nodeType":"YulFunctionCall","src":"970:22:31"},{"name":"dataEnd","nativeSrc":"994:7:31","nodeType":"YulIdentifier","src":"994:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"949:20:31","nodeType":"YulIdentifier","src":"949:20:31"},"nativeSrc":"949:53:31","nodeType":"YulFunctionCall","src":"949:53:31"},"variableNames":[{"name":"value0","nativeSrc":"939:6:31","nodeType":"YulIdentifier","src":"939:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"690:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"726:9:31","nodeType":"YulTypedName","src":"726:9:31","type":""},{"name":"dataEnd","nativeSrc":"737:7:31","nodeType":"YulTypedName","src":"737:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"749:6:31","nodeType":"YulTypedName","src":"749:6:31","type":""}],"src":"690:329:31"},{"body":{"nativeSrc":"1070:32:31","nodeType":"YulBlock","src":"1070:32:31","statements":[{"nativeSrc":"1080:16:31","nodeType":"YulAssignment","src":"1080:16:31","value":{"name":"value","nativeSrc":"1091:5:31","nodeType":"YulIdentifier","src":"1091:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1080:7:31","nodeType":"YulIdentifier","src":"1080:7:31"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1025:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1052:5:31","nodeType":"YulTypedName","src":"1052:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1062:7:31","nodeType":"YulTypedName","src":"1062:7:31","type":""}],"src":"1025:77:31"},{"body":{"nativeSrc":"1173:53:31","nodeType":"YulBlock","src":"1173:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1190:3:31","nodeType":"YulIdentifier","src":"1190:3:31"},{"arguments":[{"name":"value","nativeSrc":"1213:5:31","nodeType":"YulIdentifier","src":"1213:5:31"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1195:17:31","nodeType":"YulIdentifier","src":"1195:17:31"},"nativeSrc":"1195:24:31","nodeType":"YulFunctionCall","src":"1195:24:31"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:31","nodeType":"YulIdentifier","src":"1183:6:31"},"nativeSrc":"1183:37:31","nodeType":"YulFunctionCall","src":"1183:37:31"},"nativeSrc":"1183:37:31","nodeType":"YulExpressionStatement","src":"1183:37:31"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1108:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1161:5:31","nodeType":"YulTypedName","src":"1161:5:31","type":""},{"name":"pos","nativeSrc":"1168:3:31","nodeType":"YulTypedName","src":"1168:3:31","type":""}],"src":"1108:118:31"},{"body":{"nativeSrc":"1297:53:31","nodeType":"YulBlock","src":"1297:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1314:3:31","nodeType":"YulIdentifier","src":"1314:3:31"},{"arguments":[{"name":"value","nativeSrc":"1337:5:31","nodeType":"YulIdentifier","src":"1337:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1319:17:31","nodeType":"YulIdentifier","src":"1319:17:31"},"nativeSrc":"1319:24:31","nodeType":"YulFunctionCall","src":"1319:24:31"}],"functionName":{"name":"mstore","nativeSrc":"1307:6:31","nodeType":"YulIdentifier","src":"1307:6:31"},"nativeSrc":"1307:37:31","nodeType":"YulFunctionCall","src":"1307:37:31"},"nativeSrc":"1307:37:31","nodeType":"YulExpressionStatement","src":"1307:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1232:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1285:5:31","nodeType":"YulTypedName","src":"1285:5:31","type":""},{"name":"pos","nativeSrc":"1292:3:31","nodeType":"YulTypedName","src":"1292:3:31","type":""}],"src":"1232:118:31"},{"body":{"nativeSrc":"1482:206:31","nodeType":"YulBlock","src":"1482:206:31","statements":[{"nativeSrc":"1492:26:31","nodeType":"YulAssignment","src":"1492:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1504:9:31","nodeType":"YulIdentifier","src":"1504:9:31"},{"kind":"number","nativeSrc":"1515:2:31","nodeType":"YulLiteral","src":"1515:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1500:3:31","nodeType":"YulIdentifier","src":"1500:3:31"},"nativeSrc":"1500:18:31","nodeType":"YulFunctionCall","src":"1500:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1492:4:31","nodeType":"YulIdentifier","src":"1492:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1572:6:31","nodeType":"YulIdentifier","src":"1572:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1585:9:31","nodeType":"YulIdentifier","src":"1585:9:31"},{"kind":"number","nativeSrc":"1596:1:31","nodeType":"YulLiteral","src":"1596:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1581:3:31","nodeType":"YulIdentifier","src":"1581:3:31"},"nativeSrc":"1581:17:31","nodeType":"YulFunctionCall","src":"1581:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"1528:43:31","nodeType":"YulIdentifier","src":"1528:43:31"},"nativeSrc":"1528:71:31","nodeType":"YulFunctionCall","src":"1528:71:31"},"nativeSrc":"1528:71:31","nodeType":"YulExpressionStatement","src":"1528:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"1653:6:31","nodeType":"YulIdentifier","src":"1653:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1666:9:31","nodeType":"YulIdentifier","src":"1666:9:31"},{"kind":"number","nativeSrc":"1677:2:31","nodeType":"YulLiteral","src":"1677:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1662:3:31","nodeType":"YulIdentifier","src":"1662:3:31"},"nativeSrc":"1662:18:31","nodeType":"YulFunctionCall","src":"1662:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1609:43:31","nodeType":"YulIdentifier","src":"1609:43:31"},"nativeSrc":"1609:72:31","nodeType":"YulFunctionCall","src":"1609:72:31"},"nativeSrc":"1609:72:31","nodeType":"YulExpressionStatement","src":"1609:72:31"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nativeSrc":"1356:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1446:9:31","nodeType":"YulTypedName","src":"1446:9:31","type":""},{"name":"value1","nativeSrc":"1458:6:31","nodeType":"YulTypedName","src":"1458:6:31","type":""},{"name":"value0","nativeSrc":"1466:6:31","nodeType":"YulTypedName","src":"1466:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1477:4:31","nodeType":"YulTypedName","src":"1477:4:31","type":""}],"src":"1356:332:31"},{"body":{"nativeSrc":"1792:124:31","nodeType":"YulBlock","src":"1792:124:31","statements":[{"nativeSrc":"1802:26:31","nodeType":"YulAssignment","src":"1802:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1814:9:31","nodeType":"YulIdentifier","src":"1814:9:31"},{"kind":"number","nativeSrc":"1825:2:31","nodeType":"YulLiteral","src":"1825:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1810:3:31","nodeType":"YulIdentifier","src":"1810:3:31"},"nativeSrc":"1810:18:31","nodeType":"YulFunctionCall","src":"1810:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1802:4:31","nodeType":"YulIdentifier","src":"1802:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1882:6:31","nodeType":"YulIdentifier","src":"1882:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1895:9:31","nodeType":"YulIdentifier","src":"1895:9:31"},{"kind":"number","nativeSrc":"1906:1:31","nodeType":"YulLiteral","src":"1906:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1891:3:31","nodeType":"YulIdentifier","src":"1891:3:31"},"nativeSrc":"1891:17:31","nodeType":"YulFunctionCall","src":"1891:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1838:43:31","nodeType":"YulIdentifier","src":"1838:43:31"},"nativeSrc":"1838:71:31","nodeType":"YulFunctionCall","src":"1838:71:31"},"nativeSrc":"1838:71:31","nodeType":"YulExpressionStatement","src":"1838:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1694:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1764:9:31","nodeType":"YulTypedName","src":"1764:9:31","type":""},{"name":"value0","nativeSrc":"1776:6:31","nodeType":"YulTypedName","src":"1776:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1787:4:31","nodeType":"YulTypedName","src":"1787:4:31","type":""}],"src":"1694:222:31"},{"body":{"nativeSrc":"1967:81:31","nodeType":"YulBlock","src":"1967:81:31","statements":[{"nativeSrc":"1977:65:31","nodeType":"YulAssignment","src":"1977:65:31","value":{"arguments":[{"name":"value","nativeSrc":"1992:5:31","nodeType":"YulIdentifier","src":"1992:5:31"},{"kind":"number","nativeSrc":"1999:42:31","nodeType":"YulLiteral","src":"1999:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1988:3:31","nodeType":"YulIdentifier","src":"1988:3:31"},"nativeSrc":"1988:54:31","nodeType":"YulFunctionCall","src":"1988:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1977:7:31","nodeType":"YulIdentifier","src":"1977:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1922:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1949:5:31","nodeType":"YulTypedName","src":"1949:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1959:7:31","nodeType":"YulTypedName","src":"1959:7:31","type":""}],"src":"1922:126:31"},{"body":{"nativeSrc":"2086:28:31","nodeType":"YulBlock","src":"2086:28:31","statements":[{"nativeSrc":"2096:12:31","nodeType":"YulAssignment","src":"2096:12:31","value":{"name":"value","nativeSrc":"2103:5:31","nodeType":"YulIdentifier","src":"2103:5:31"},"variableNames":[{"name":"ret","nativeSrc":"2096:3:31","nodeType":"YulIdentifier","src":"2096:3:31"}]}]},"name":"identity","nativeSrc":"2054:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2072:5:31","nodeType":"YulTypedName","src":"2072:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2082:3:31","nodeType":"YulTypedName","src":"2082:3:31","type":""}],"src":"2054:60:31"},{"body":{"nativeSrc":"2180:82:31","nodeType":"YulBlock","src":"2180:82:31","statements":[{"nativeSrc":"2190:66:31","nodeType":"YulAssignment","src":"2190:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2248:5:31","nodeType":"YulIdentifier","src":"2248:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2230:17:31","nodeType":"YulIdentifier","src":"2230:17:31"},"nativeSrc":"2230:24:31","nodeType":"YulFunctionCall","src":"2230:24:31"}],"functionName":{"name":"identity","nativeSrc":"2221:8:31","nodeType":"YulIdentifier","src":"2221:8:31"},"nativeSrc":"2221:34:31","nodeType":"YulFunctionCall","src":"2221:34:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2203:17:31","nodeType":"YulIdentifier","src":"2203:17:31"},"nativeSrc":"2203:53:31","nodeType":"YulFunctionCall","src":"2203:53:31"},"variableNames":[{"name":"converted","nativeSrc":"2190:9:31","nodeType":"YulIdentifier","src":"2190:9:31"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2120:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2160:5:31","nodeType":"YulTypedName","src":"2160:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2170:9:31","nodeType":"YulTypedName","src":"2170:9:31","type":""}],"src":"2120:142:31"},{"body":{"nativeSrc":"2328:66:31","nodeType":"YulBlock","src":"2328:66:31","statements":[{"nativeSrc":"2338:50:31","nodeType":"YulAssignment","src":"2338:50:31","value":{"arguments":[{"name":"value","nativeSrc":"2382:5:31","nodeType":"YulIdentifier","src":"2382:5:31"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2351:30:31","nodeType":"YulIdentifier","src":"2351:30:31"},"nativeSrc":"2351:37:31","nodeType":"YulFunctionCall","src":"2351:37:31"},"variableNames":[{"name":"converted","nativeSrc":"2338:9:31","nodeType":"YulIdentifier","src":"2338:9:31"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"2268:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2308:5:31","nodeType":"YulTypedName","src":"2308:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2318:9:31","nodeType":"YulTypedName","src":"2318:9:31","type":""}],"src":"2268:126:31"},{"body":{"nativeSrc":"2477:66:31","nodeType":"YulBlock","src":"2477:66:31","statements":[{"nativeSrc":"2487:50:31","nodeType":"YulAssignment","src":"2487:50:31","value":{"arguments":[{"name":"value","nativeSrc":"2531:5:31","nodeType":"YulIdentifier","src":"2531:5:31"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"2500:30:31","nodeType":"YulIdentifier","src":"2500:30:31"},"nativeSrc":"2500:37:31","nodeType":"YulFunctionCall","src":"2500:37:31"},"variableNames":[{"name":"converted","nativeSrc":"2487:9:31","nodeType":"YulIdentifier","src":"2487:9:31"}]}]},"name":"convert_t_contract$_IMyToken_$8371_to_t_address","nativeSrc":"2400:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2457:5:31","nodeType":"YulTypedName","src":"2457:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2467:9:31","nodeType":"YulTypedName","src":"2467:9:31","type":""}],"src":"2400:143:31"},{"body":{"nativeSrc":"2631:83:31","nodeType":"YulBlock","src":"2631:83:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2648:3:31","nodeType":"YulIdentifier","src":"2648:3:31"},{"arguments":[{"name":"value","nativeSrc":"2701:5:31","nodeType":"YulIdentifier","src":"2701:5:31"}],"functionName":{"name":"convert_t_contract$_IMyToken_$8371_to_t_address","nativeSrc":"2653:47:31","nodeType":"YulIdentifier","src":"2653:47:31"},"nativeSrc":"2653:54:31","nodeType":"YulFunctionCall","src":"2653:54:31"}],"functionName":{"name":"mstore","nativeSrc":"2641:6:31","nodeType":"YulIdentifier","src":"2641:6:31"},"nativeSrc":"2641:67:31","nodeType":"YulFunctionCall","src":"2641:67:31"},"nativeSrc":"2641:67:31","nodeType":"YulExpressionStatement","src":"2641:67:31"}]},"name":"abi_encode_t_contract$_IMyToken_$8371_to_t_address_fromStack","nativeSrc":"2549:165:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2619:5:31","nodeType":"YulTypedName","src":"2619:5:31","type":""},{"name":"pos","nativeSrc":"2626:3:31","nodeType":"YulTypedName","src":"2626:3:31","type":""}],"src":"2549:165:31"},{"body":{"nativeSrc":"2835:141:31","nodeType":"YulBlock","src":"2835:141:31","statements":[{"nativeSrc":"2845:26:31","nodeType":"YulAssignment","src":"2845:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"2857:9:31","nodeType":"YulIdentifier","src":"2857:9:31"},{"kind":"number","nativeSrc":"2868:2:31","nodeType":"YulLiteral","src":"2868:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2853:3:31","nodeType":"YulIdentifier","src":"2853:3:31"},"nativeSrc":"2853:18:31","nodeType":"YulFunctionCall","src":"2853:18:31"},"variableNames":[{"name":"tail","nativeSrc":"2845:4:31","nodeType":"YulIdentifier","src":"2845:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2942:6:31","nodeType":"YulIdentifier","src":"2942:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"2955:9:31","nodeType":"YulIdentifier","src":"2955:9:31"},{"kind":"number","nativeSrc":"2966:1:31","nodeType":"YulLiteral","src":"2966:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2951:3:31","nodeType":"YulIdentifier","src":"2951:3:31"},"nativeSrc":"2951:17:31","nodeType":"YulFunctionCall","src":"2951:17:31"}],"functionName":{"name":"abi_encode_t_contract$_IMyToken_$8371_to_t_address_fromStack","nativeSrc":"2881:60:31","nodeType":"YulIdentifier","src":"2881:60:31"},"nativeSrc":"2881:88:31","nodeType":"YulFunctionCall","src":"2881:88:31"},"nativeSrc":"2881:88:31","nodeType":"YulExpressionStatement","src":"2881:88:31"}]},"name":"abi_encode_tuple_t_contract$_IMyToken_$8371__to_t_address__fromStack_reversed","nativeSrc":"2720:256:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2807:9:31","nodeType":"YulTypedName","src":"2807:9:31","type":""},{"name":"value0","nativeSrc":"2819:6:31","nodeType":"YulTypedName","src":"2819:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2830:4:31","nodeType":"YulTypedName","src":"2830:4:31","type":""}],"src":"2720:256:31"},{"body":{"nativeSrc":"3027:51:31","nodeType":"YulBlock","src":"3027:51:31","statements":[{"nativeSrc":"3037:35:31","nodeType":"YulAssignment","src":"3037:35:31","value":{"arguments":[{"name":"value","nativeSrc":"3066:5:31","nodeType":"YulIdentifier","src":"3066:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3048:17:31","nodeType":"YulIdentifier","src":"3048:17:31"},"nativeSrc":"3048:24:31","nodeType":"YulFunctionCall","src":"3048:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"3037:7:31","nodeType":"YulIdentifier","src":"3037:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"2982:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3009:5:31","nodeType":"YulTypedName","src":"3009:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3019:7:31","nodeType":"YulTypedName","src":"3019:7:31","type":""}],"src":"2982:96:31"},{"body":{"nativeSrc":"3127:79:31","nodeType":"YulBlock","src":"3127:79:31","statements":[{"body":{"nativeSrc":"3184:16:31","nodeType":"YulBlock","src":"3184:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3193:1:31","nodeType":"YulLiteral","src":"3193:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3196:1:31","nodeType":"YulLiteral","src":"3196:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3186:6:31","nodeType":"YulIdentifier","src":"3186:6:31"},"nativeSrc":"3186:12:31","nodeType":"YulFunctionCall","src":"3186:12:31"},"nativeSrc":"3186:12:31","nodeType":"YulExpressionStatement","src":"3186:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3150:5:31","nodeType":"YulIdentifier","src":"3150:5:31"},{"arguments":[{"name":"value","nativeSrc":"3175:5:31","nodeType":"YulIdentifier","src":"3175:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3157:17:31","nodeType":"YulIdentifier","src":"3157:17:31"},"nativeSrc":"3157:24:31","nodeType":"YulFunctionCall","src":"3157:24:31"}],"functionName":{"name":"eq","nativeSrc":"3147:2:31","nodeType":"YulIdentifier","src":"3147:2:31"},"nativeSrc":"3147:35:31","nodeType":"YulFunctionCall","src":"3147:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3140:6:31","nodeType":"YulIdentifier","src":"3140:6:31"},"nativeSrc":"3140:43:31","nodeType":"YulFunctionCall","src":"3140:43:31"},"nativeSrc":"3137:63:31","nodeType":"YulIf","src":"3137:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"3084:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3120:5:31","nodeType":"YulTypedName","src":"3120:5:31","type":""}],"src":"3084:122:31"},{"body":{"nativeSrc":"3264:87:31","nodeType":"YulBlock","src":"3264:87:31","statements":[{"nativeSrc":"3274:29:31","nodeType":"YulAssignment","src":"3274:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"3296:6:31","nodeType":"YulIdentifier","src":"3296:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3283:12:31","nodeType":"YulIdentifier","src":"3283:12:31"},"nativeSrc":"3283:20:31","nodeType":"YulFunctionCall","src":"3283:20:31"},"variableNames":[{"name":"value","nativeSrc":"3274:5:31","nodeType":"YulIdentifier","src":"3274:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3339:5:31","nodeType":"YulIdentifier","src":"3339:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3312:26:31","nodeType":"YulIdentifier","src":"3312:26:31"},"nativeSrc":"3312:33:31","nodeType":"YulFunctionCall","src":"3312:33:31"},"nativeSrc":"3312:33:31","nodeType":"YulExpressionStatement","src":"3312:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"3212:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3242:6:31","nodeType":"YulTypedName","src":"3242:6:31","type":""},{"name":"end","nativeSrc":"3250:3:31","nodeType":"YulTypedName","src":"3250:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3258:5:31","nodeType":"YulTypedName","src":"3258:5:31","type":""}],"src":"3212:139:31"},{"body":{"nativeSrc":"3423:263:31","nodeType":"YulBlock","src":"3423:263:31","statements":[{"body":{"nativeSrc":"3469:83:31","nodeType":"YulBlock","src":"3469:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3471:77:31","nodeType":"YulIdentifier","src":"3471:77:31"},"nativeSrc":"3471:79:31","nodeType":"YulFunctionCall","src":"3471:79:31"},"nativeSrc":"3471:79:31","nodeType":"YulExpressionStatement","src":"3471:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3444:7:31","nodeType":"YulIdentifier","src":"3444:7:31"},{"name":"headStart","nativeSrc":"3453:9:31","nodeType":"YulIdentifier","src":"3453:9:31"}],"functionName":{"name":"sub","nativeSrc":"3440:3:31","nodeType":"YulIdentifier","src":"3440:3:31"},"nativeSrc":"3440:23:31","nodeType":"YulFunctionCall","src":"3440:23:31"},{"kind":"number","nativeSrc":"3465:2:31","nodeType":"YulLiteral","src":"3465:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3436:3:31","nodeType":"YulIdentifier","src":"3436:3:31"},"nativeSrc":"3436:32:31","nodeType":"YulFunctionCall","src":"3436:32:31"},"nativeSrc":"3433:119:31","nodeType":"YulIf","src":"3433:119:31"},{"nativeSrc":"3562:117:31","nodeType":"YulBlock","src":"3562:117:31","statements":[{"nativeSrc":"3577:15:31","nodeType":"YulVariableDeclaration","src":"3577:15:31","value":{"kind":"number","nativeSrc":"3591:1:31","nodeType":"YulLiteral","src":"3591:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3581:6:31","nodeType":"YulTypedName","src":"3581:6:31","type":""}]},{"nativeSrc":"3606:63:31","nodeType":"YulAssignment","src":"3606:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3641:9:31","nodeType":"YulIdentifier","src":"3641:9:31"},{"name":"offset","nativeSrc":"3652:6:31","nodeType":"YulIdentifier","src":"3652:6:31"}],"functionName":{"name":"add","nativeSrc":"3637:3:31","nodeType":"YulIdentifier","src":"3637:3:31"},"nativeSrc":"3637:22:31","nodeType":"YulFunctionCall","src":"3637:22:31"},{"name":"dataEnd","nativeSrc":"3661:7:31","nodeType":"YulIdentifier","src":"3661:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3616:20:31","nodeType":"YulIdentifier","src":"3616:20:31"},"nativeSrc":"3616:53:31","nodeType":"YulFunctionCall","src":"3616:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3606:6:31","nodeType":"YulIdentifier","src":"3606:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3357:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3393:9:31","nodeType":"YulTypedName","src":"3393:9:31","type":""},{"name":"dataEnd","nativeSrc":"3404:7:31","nodeType":"YulTypedName","src":"3404:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3416:6:31","nodeType":"YulTypedName","src":"3416:6:31","type":""}],"src":"3357:329:31"},{"body":{"nativeSrc":"3775:391:31","nodeType":"YulBlock","src":"3775:391:31","statements":[{"body":{"nativeSrc":"3821:83:31","nodeType":"YulBlock","src":"3821:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3823:77:31","nodeType":"YulIdentifier","src":"3823:77:31"},"nativeSrc":"3823:79:31","nodeType":"YulFunctionCall","src":"3823:79:31"},"nativeSrc":"3823:79:31","nodeType":"YulExpressionStatement","src":"3823:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3796:7:31","nodeType":"YulIdentifier","src":"3796:7:31"},{"name":"headStart","nativeSrc":"3805:9:31","nodeType":"YulIdentifier","src":"3805:9:31"}],"functionName":{"name":"sub","nativeSrc":"3792:3:31","nodeType":"YulIdentifier","src":"3792:3:31"},"nativeSrc":"3792:23:31","nodeType":"YulFunctionCall","src":"3792:23:31"},{"kind":"number","nativeSrc":"3817:2:31","nodeType":"YulLiteral","src":"3817:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3788:3:31","nodeType":"YulIdentifier","src":"3788:3:31"},"nativeSrc":"3788:32:31","nodeType":"YulFunctionCall","src":"3788:32:31"},"nativeSrc":"3785:119:31","nodeType":"YulIf","src":"3785:119:31"},{"nativeSrc":"3914:117:31","nodeType":"YulBlock","src":"3914:117:31","statements":[{"nativeSrc":"3929:15:31","nodeType":"YulVariableDeclaration","src":"3929:15:31","value":{"kind":"number","nativeSrc":"3943:1:31","nodeType":"YulLiteral","src":"3943:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3933:6:31","nodeType":"YulTypedName","src":"3933:6:31","type":""}]},{"nativeSrc":"3958:63:31","nodeType":"YulAssignment","src":"3958:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3993:9:31","nodeType":"YulIdentifier","src":"3993:9:31"},{"name":"offset","nativeSrc":"4004:6:31","nodeType":"YulIdentifier","src":"4004:6:31"}],"functionName":{"name":"add","nativeSrc":"3989:3:31","nodeType":"YulIdentifier","src":"3989:3:31"},"nativeSrc":"3989:22:31","nodeType":"YulFunctionCall","src":"3989:22:31"},{"name":"dataEnd","nativeSrc":"4013:7:31","nodeType":"YulIdentifier","src":"4013:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3968:20:31","nodeType":"YulIdentifier","src":"3968:20:31"},"nativeSrc":"3968:53:31","nodeType":"YulFunctionCall","src":"3968:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3958:6:31","nodeType":"YulIdentifier","src":"3958:6:31"}]}]},{"nativeSrc":"4041:118:31","nodeType":"YulBlock","src":"4041:118:31","statements":[{"nativeSrc":"4056:16:31","nodeType":"YulVariableDeclaration","src":"4056:16:31","value":{"kind":"number","nativeSrc":"4070:2:31","nodeType":"YulLiteral","src":"4070:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4060:6:31","nodeType":"YulTypedName","src":"4060:6:31","type":""}]},{"nativeSrc":"4086:63:31","nodeType":"YulAssignment","src":"4086:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4121:9:31","nodeType":"YulIdentifier","src":"4121:9:31"},{"name":"offset","nativeSrc":"4132:6:31","nodeType":"YulIdentifier","src":"4132:6:31"}],"functionName":{"name":"add","nativeSrc":"4117:3:31","nodeType":"YulIdentifier","src":"4117:3:31"},"nativeSrc":"4117:22:31","nodeType":"YulFunctionCall","src":"4117:22:31"},{"name":"dataEnd","nativeSrc":"4141:7:31","nodeType":"YulIdentifier","src":"4141:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4096:20:31","nodeType":"YulIdentifier","src":"4096:20:31"},"nativeSrc":"4096:53:31","nodeType":"YulFunctionCall","src":"4096:53:31"},"variableNames":[{"name":"value1","nativeSrc":"4086:6:31","nodeType":"YulIdentifier","src":"4086:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nativeSrc":"3692:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3737:9:31","nodeType":"YulTypedName","src":"3737:9:31","type":""},{"name":"dataEnd","nativeSrc":"3748:7:31","nodeType":"YulTypedName","src":"3748:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3760:6:31","nodeType":"YulTypedName","src":"3760:6:31","type":""},{"name":"value1","nativeSrc":"3768:6:31","nodeType":"YulTypedName","src":"3768:6:31","type":""}],"src":"3692:474:31"},{"body":{"nativeSrc":"4270:124:31","nodeType":"YulBlock","src":"4270:124:31","statements":[{"nativeSrc":"4280:26:31","nodeType":"YulAssignment","src":"4280:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4292:9:31","nodeType":"YulIdentifier","src":"4292:9:31"},{"kind":"number","nativeSrc":"4303:2:31","nodeType":"YulLiteral","src":"4303:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4288:3:31","nodeType":"YulIdentifier","src":"4288:3:31"},"nativeSrc":"4288:18:31","nodeType":"YulFunctionCall","src":"4288:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4280:4:31","nodeType":"YulIdentifier","src":"4280:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4360:6:31","nodeType":"YulIdentifier","src":"4360:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4373:9:31","nodeType":"YulIdentifier","src":"4373:9:31"},{"kind":"number","nativeSrc":"4384:1:31","nodeType":"YulLiteral","src":"4384:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4369:3:31","nodeType":"YulIdentifier","src":"4369:3:31"},"nativeSrc":"4369:17:31","nodeType":"YulFunctionCall","src":"4369:17:31"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4316:43:31","nodeType":"YulIdentifier","src":"4316:43:31"},"nativeSrc":"4316:71:31","nodeType":"YulFunctionCall","src":"4316:71:31"},"nativeSrc":"4316:71:31","nodeType":"YulExpressionStatement","src":"4316:71:31"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4172:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4242:9:31","nodeType":"YulTypedName","src":"4242:9:31","type":""},{"name":"value0","nativeSrc":"4254:6:31","nodeType":"YulTypedName","src":"4254:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4265:4:31","nodeType":"YulTypedName","src":"4265:4:31","type":""}],"src":"4172:222:31"},{"body":{"nativeSrc":"4428:152:31","nodeType":"YulBlock","src":"4428:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4445:1:31","nodeType":"YulLiteral","src":"4445:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"4448:77:31","nodeType":"YulLiteral","src":"4448:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4438:6:31","nodeType":"YulIdentifier","src":"4438:6:31"},"nativeSrc":"4438:88:31","nodeType":"YulFunctionCall","src":"4438:88:31"},"nativeSrc":"4438:88:31","nodeType":"YulExpressionStatement","src":"4438:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4542:1:31","nodeType":"YulLiteral","src":"4542:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"4545:4:31","nodeType":"YulLiteral","src":"4545:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"4535:6:31","nodeType":"YulIdentifier","src":"4535:6:31"},"nativeSrc":"4535:15:31","nodeType":"YulFunctionCall","src":"4535:15:31"},"nativeSrc":"4535:15:31","nodeType":"YulExpressionStatement","src":"4535:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4566:1:31","nodeType":"YulLiteral","src":"4566:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"4569:4:31","nodeType":"YulLiteral","src":"4569:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4559:6:31","nodeType":"YulIdentifier","src":"4559:6:31"},"nativeSrc":"4559:15:31","nodeType":"YulFunctionCall","src":"4559:15:31"},"nativeSrc":"4559:15:31","nodeType":"YulExpressionStatement","src":"4559:15:31"}]},"name":"panic_error_0x32","nativeSrc":"4400:180:31","nodeType":"YulFunctionDefinition","src":"4400:180:31"},{"body":{"nativeSrc":"4651:53:31","nodeType":"YulBlock","src":"4651:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4668:3:31","nodeType":"YulIdentifier","src":"4668:3:31"},{"arguments":[{"name":"value","nativeSrc":"4691:5:31","nodeType":"YulIdentifier","src":"4691:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4673:17:31","nodeType":"YulIdentifier","src":"4673:17:31"},"nativeSrc":"4673:24:31","nodeType":"YulFunctionCall","src":"4673:24:31"}],"functionName":{"name":"mstore","nativeSrc":"4661:6:31","nodeType":"YulIdentifier","src":"4661:6:31"},"nativeSrc":"4661:37:31","nodeType":"YulFunctionCall","src":"4661:37:31"},"nativeSrc":"4661:37:31","nodeType":"YulExpressionStatement","src":"4661:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4586:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4639:5:31","nodeType":"YulTypedName","src":"4639:5:31","type":""},{"name":"pos","nativeSrc":"4646:3:31","nodeType":"YulTypedName","src":"4646:3:31","type":""}],"src":"4586:118:31"},{"body":{"nativeSrc":"4836:206:31","nodeType":"YulBlock","src":"4836:206:31","statements":[{"nativeSrc":"4846:26:31","nodeType":"YulAssignment","src":"4846:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4858:9:31","nodeType":"YulIdentifier","src":"4858:9:31"},{"kind":"number","nativeSrc":"4869:2:31","nodeType":"YulLiteral","src":"4869:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4854:3:31","nodeType":"YulIdentifier","src":"4854:3:31"},"nativeSrc":"4854:18:31","nodeType":"YulFunctionCall","src":"4854:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4846:4:31","nodeType":"YulIdentifier","src":"4846:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4926:6:31","nodeType":"YulIdentifier","src":"4926:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"4939:9:31","nodeType":"YulIdentifier","src":"4939:9:31"},{"kind":"number","nativeSrc":"4950:1:31","nodeType":"YulLiteral","src":"4950:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4935:3:31","nodeType":"YulIdentifier","src":"4935:3:31"},"nativeSrc":"4935:17:31","nodeType":"YulFunctionCall","src":"4935:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4882:43:31","nodeType":"YulIdentifier","src":"4882:43:31"},"nativeSrc":"4882:71:31","nodeType":"YulFunctionCall","src":"4882:71:31"},"nativeSrc":"4882:71:31","nodeType":"YulExpressionStatement","src":"4882:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"5007:6:31","nodeType":"YulIdentifier","src":"5007:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"5020:9:31","nodeType":"YulIdentifier","src":"5020:9:31"},{"kind":"number","nativeSrc":"5031:2:31","nodeType":"YulLiteral","src":"5031:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5016:3:31","nodeType":"YulIdentifier","src":"5016:3:31"},"nativeSrc":"5016:18:31","nodeType":"YulFunctionCall","src":"5016:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4963:43:31","nodeType":"YulIdentifier","src":"4963:43:31"},"nativeSrc":"4963:72:31","nodeType":"YulFunctionCall","src":"4963:72:31"},"nativeSrc":"4963:72:31","nodeType":"YulExpressionStatement","src":"4963:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4710:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4800:9:31","nodeType":"YulTypedName","src":"4800:9:31","type":""},{"name":"value1","nativeSrc":"4812:6:31","nodeType":"YulTypedName","src":"4812:6:31","type":""},{"name":"value0","nativeSrc":"4820:6:31","nodeType":"YulTypedName","src":"4820:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4831:4:31","nodeType":"YulTypedName","src":"4831:4:31","type":""}],"src":"4710:332:31"},{"body":{"nativeSrc":"5111:80:31","nodeType":"YulBlock","src":"5111:80:31","statements":[{"nativeSrc":"5121:22:31","nodeType":"YulAssignment","src":"5121:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"5136:6:31","nodeType":"YulIdentifier","src":"5136:6:31"}],"functionName":{"name":"mload","nativeSrc":"5130:5:31","nodeType":"YulIdentifier","src":"5130:5:31"},"nativeSrc":"5130:13:31","nodeType":"YulFunctionCall","src":"5130:13:31"},"variableNames":[{"name":"value","nativeSrc":"5121:5:31","nodeType":"YulIdentifier","src":"5121:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5179:5:31","nodeType":"YulIdentifier","src":"5179:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"5152:26:31","nodeType":"YulIdentifier","src":"5152:26:31"},"nativeSrc":"5152:33:31","nodeType":"YulFunctionCall","src":"5152:33:31"},"nativeSrc":"5152:33:31","nodeType":"YulExpressionStatement","src":"5152:33:31"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5048:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5089:6:31","nodeType":"YulTypedName","src":"5089:6:31","type":""},{"name":"end","nativeSrc":"5097:3:31","nodeType":"YulTypedName","src":"5097:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5105:5:31","nodeType":"YulTypedName","src":"5105:5:31","type":""}],"src":"5048:143:31"},{"body":{"nativeSrc":"5274:274:31","nodeType":"YulBlock","src":"5274:274:31","statements":[{"body":{"nativeSrc":"5320:83:31","nodeType":"YulBlock","src":"5320:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5322:77:31","nodeType":"YulIdentifier","src":"5322:77:31"},"nativeSrc":"5322:79:31","nodeType":"YulFunctionCall","src":"5322:79:31"},"nativeSrc":"5322:79:31","nodeType":"YulExpressionStatement","src":"5322:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5295:7:31","nodeType":"YulIdentifier","src":"5295:7:31"},{"name":"headStart","nativeSrc":"5304:9:31","nodeType":"YulIdentifier","src":"5304:9:31"}],"functionName":{"name":"sub","nativeSrc":"5291:3:31","nodeType":"YulIdentifier","src":"5291:3:31"},"nativeSrc":"5291:23:31","nodeType":"YulFunctionCall","src":"5291:23:31"},{"kind":"number","nativeSrc":"5316:2:31","nodeType":"YulLiteral","src":"5316:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5287:3:31","nodeType":"YulIdentifier","src":"5287:3:31"},"nativeSrc":"5287:32:31","nodeType":"YulFunctionCall","src":"5287:32:31"},"nativeSrc":"5284:119:31","nodeType":"YulIf","src":"5284:119:31"},{"nativeSrc":"5413:128:31","nodeType":"YulBlock","src":"5413:128:31","statements":[{"nativeSrc":"5428:15:31","nodeType":"YulVariableDeclaration","src":"5428:15:31","value":{"kind":"number","nativeSrc":"5442:1:31","nodeType":"YulLiteral","src":"5442:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5432:6:31","nodeType":"YulTypedName","src":"5432:6:31","type":""}]},{"nativeSrc":"5457:74:31","nodeType":"YulAssignment","src":"5457:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5503:9:31","nodeType":"YulIdentifier","src":"5503:9:31"},{"name":"offset","nativeSrc":"5514:6:31","nodeType":"YulIdentifier","src":"5514:6:31"}],"functionName":{"name":"add","nativeSrc":"5499:3:31","nodeType":"YulIdentifier","src":"5499:3:31"},"nativeSrc":"5499:22:31","nodeType":"YulFunctionCall","src":"5499:22:31"},{"name":"dataEnd","nativeSrc":"5523:7:31","nodeType":"YulIdentifier","src":"5523:7:31"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"5467:31:31","nodeType":"YulIdentifier","src":"5467:31:31"},"nativeSrc":"5467:64:31","nodeType":"YulFunctionCall","src":"5467:64:31"},"variableNames":[{"name":"value0","nativeSrc":"5457:6:31","nodeType":"YulIdentifier","src":"5457:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5197:351:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5244:9:31","nodeType":"YulTypedName","src":"5244:9:31","type":""},{"name":"dataEnd","nativeSrc":"5255:7:31","nodeType":"YulTypedName","src":"5255:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5267:6:31","nodeType":"YulTypedName","src":"5267:6:31","type":""}],"src":"5197:351:31"},{"body":{"nativeSrc":"5582:152:31","nodeType":"YulBlock","src":"5582:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5599:1:31","nodeType":"YulLiteral","src":"5599:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5602:77:31","nodeType":"YulLiteral","src":"5602:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5592:6:31","nodeType":"YulIdentifier","src":"5592:6:31"},"nativeSrc":"5592:88:31","nodeType":"YulFunctionCall","src":"5592:88:31"},"nativeSrc":"5592:88:31","nodeType":"YulExpressionStatement","src":"5592:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5696:1:31","nodeType":"YulLiteral","src":"5696:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"5699:4:31","nodeType":"YulLiteral","src":"5699:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5689:6:31","nodeType":"YulIdentifier","src":"5689:6:31"},"nativeSrc":"5689:15:31","nodeType":"YulFunctionCall","src":"5689:15:31"},"nativeSrc":"5689:15:31","nodeType":"YulExpressionStatement","src":"5689:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5720:1:31","nodeType":"YulLiteral","src":"5720:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5723:4:31","nodeType":"YulLiteral","src":"5723:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5713:6:31","nodeType":"YulIdentifier","src":"5713:6:31"},"nativeSrc":"5713:15:31","nodeType":"YulFunctionCall","src":"5713:15:31"},"nativeSrc":"5713:15:31","nodeType":"YulExpressionStatement","src":"5713:15:31"}]},"name":"panic_error_0x11","nativeSrc":"5554:180:31","nodeType":"YulFunctionDefinition","src":"5554:180:31"},{"body":{"nativeSrc":"5785:149:31","nodeType":"YulBlock","src":"5785:149:31","statements":[{"nativeSrc":"5795:25:31","nodeType":"YulAssignment","src":"5795:25:31","value":{"arguments":[{"name":"x","nativeSrc":"5818:1:31","nodeType":"YulIdentifier","src":"5818:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5800:17:31","nodeType":"YulIdentifier","src":"5800:17:31"},"nativeSrc":"5800:20:31","nodeType":"YulFunctionCall","src":"5800:20:31"},"variableNames":[{"name":"x","nativeSrc":"5795:1:31","nodeType":"YulIdentifier","src":"5795:1:31"}]},{"nativeSrc":"5829:25:31","nodeType":"YulAssignment","src":"5829:25:31","value":{"arguments":[{"name":"y","nativeSrc":"5852:1:31","nodeType":"YulIdentifier","src":"5852:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5834:17:31","nodeType":"YulIdentifier","src":"5834:17:31"},"nativeSrc":"5834:20:31","nodeType":"YulFunctionCall","src":"5834:20:31"},"variableNames":[{"name":"y","nativeSrc":"5829:1:31","nodeType":"YulIdentifier","src":"5829:1:31"}]},{"nativeSrc":"5863:17:31","nodeType":"YulAssignment","src":"5863:17:31","value":{"arguments":[{"name":"x","nativeSrc":"5875:1:31","nodeType":"YulIdentifier","src":"5875:1:31"},{"name":"y","nativeSrc":"5878:1:31","nodeType":"YulIdentifier","src":"5878:1:31"}],"functionName":{"name":"sub","nativeSrc":"5871:3:31","nodeType":"YulIdentifier","src":"5871:3:31"},"nativeSrc":"5871:9:31","nodeType":"YulFunctionCall","src":"5871:9:31"},"variableNames":[{"name":"diff","nativeSrc":"5863:4:31","nodeType":"YulIdentifier","src":"5863:4:31"}]},{"body":{"nativeSrc":"5905:22:31","nodeType":"YulBlock","src":"5905:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5907:16:31","nodeType":"YulIdentifier","src":"5907:16:31"},"nativeSrc":"5907:18:31","nodeType":"YulFunctionCall","src":"5907:18:31"},"nativeSrc":"5907:18:31","nodeType":"YulExpressionStatement","src":"5907:18:31"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"5896:4:31","nodeType":"YulIdentifier","src":"5896:4:31"},{"name":"x","nativeSrc":"5902:1:31","nodeType":"YulIdentifier","src":"5902:1:31"}],"functionName":{"name":"gt","nativeSrc":"5893:2:31","nodeType":"YulIdentifier","src":"5893:2:31"},"nativeSrc":"5893:11:31","nodeType":"YulFunctionCall","src":"5893:11:31"},"nativeSrc":"5890:37:31","nodeType":"YulIf","src":"5890:37:31"}]},"name":"checked_sub_t_uint256","nativeSrc":"5740:194:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5771:1:31","nodeType":"YulTypedName","src":"5771:1:31","type":""},{"name":"y","nativeSrc":"5774:1:31","nodeType":"YulTypedName","src":"5774:1:31","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"5780:4:31","nodeType":"YulTypedName","src":"5780:4:31","type":""}],"src":"5740:194:31"},{"body":{"nativeSrc":"6036:73:31","nodeType":"YulBlock","src":"6036:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6053:3:31","nodeType":"YulIdentifier","src":"6053:3:31"},{"name":"length","nativeSrc":"6058:6:31","nodeType":"YulIdentifier","src":"6058:6:31"}],"functionName":{"name":"mstore","nativeSrc":"6046:6:31","nodeType":"YulIdentifier","src":"6046:6:31"},"nativeSrc":"6046:19:31","nodeType":"YulFunctionCall","src":"6046:19:31"},"nativeSrc":"6046:19:31","nodeType":"YulExpressionStatement","src":"6046:19:31"},{"nativeSrc":"6074:29:31","nodeType":"YulAssignment","src":"6074:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"6093:3:31","nodeType":"YulIdentifier","src":"6093:3:31"},{"kind":"number","nativeSrc":"6098:4:31","nodeType":"YulLiteral","src":"6098:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6089:3:31","nodeType":"YulIdentifier","src":"6089:3:31"},"nativeSrc":"6089:14:31","nodeType":"YulFunctionCall","src":"6089:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"6074:11:31","nodeType":"YulIdentifier","src":"6074:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5940:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6008:3:31","nodeType":"YulTypedName","src":"6008:3:31","type":""},{"name":"length","nativeSrc":"6013:6:31","nodeType":"YulTypedName","src":"6013:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6024:11:31","nodeType":"YulTypedName","src":"6024:11:31","type":""}],"src":"5940:169:31"},{"body":{"nativeSrc":"6221:67:31","nodeType":"YulBlock","src":"6221:67:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6243:6:31","nodeType":"YulIdentifier","src":"6243:6:31"},{"kind":"number","nativeSrc":"6251:1:31","nodeType":"YulLiteral","src":"6251:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6239:3:31","nodeType":"YulIdentifier","src":"6239:3:31"},"nativeSrc":"6239:14:31","nodeType":"YulFunctionCall","src":"6239:14:31"},{"hexValue":"4e6f7420656e6f75676820766f74696e6720706f776572","kind":"string","nativeSrc":"6255:25:31","nodeType":"YulLiteral","src":"6255:25:31","type":"","value":"Not enough voting power"}],"functionName":{"name":"mstore","nativeSrc":"6232:6:31","nodeType":"YulIdentifier","src":"6232:6:31"},"nativeSrc":"6232:49:31","nodeType":"YulFunctionCall","src":"6232:49:31"},"nativeSrc":"6232:49:31","nodeType":"YulExpressionStatement","src":"6232:49:31"}]},"name":"store_literal_in_memory_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c","nativeSrc":"6115:173:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6213:6:31","nodeType":"YulTypedName","src":"6213:6:31","type":""}],"src":"6115:173:31"},{"body":{"nativeSrc":"6440:220:31","nodeType":"YulBlock","src":"6440:220:31","statements":[{"nativeSrc":"6450:74:31","nodeType":"YulAssignment","src":"6450:74:31","value":{"arguments":[{"name":"pos","nativeSrc":"6516:3:31","nodeType":"YulIdentifier","src":"6516:3:31"},{"kind":"number","nativeSrc":"6521:2:31","nodeType":"YulLiteral","src":"6521:2:31","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6457:58:31","nodeType":"YulIdentifier","src":"6457:58:31"},"nativeSrc":"6457:67:31","nodeType":"YulFunctionCall","src":"6457:67:31"},"variableNames":[{"name":"pos","nativeSrc":"6450:3:31","nodeType":"YulIdentifier","src":"6450:3:31"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6622:3:31","nodeType":"YulIdentifier","src":"6622:3:31"}],"functionName":{"name":"store_literal_in_memory_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c","nativeSrc":"6533:88:31","nodeType":"YulIdentifier","src":"6533:88:31"},"nativeSrc":"6533:93:31","nodeType":"YulFunctionCall","src":"6533:93:31"},"nativeSrc":"6533:93:31","nodeType":"YulExpressionStatement","src":"6533:93:31"},{"nativeSrc":"6635:19:31","nodeType":"YulAssignment","src":"6635:19:31","value":{"arguments":[{"name":"pos","nativeSrc":"6646:3:31","nodeType":"YulIdentifier","src":"6646:3:31"},{"kind":"number","nativeSrc":"6651:2:31","nodeType":"YulLiteral","src":"6651:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6642:3:31","nodeType":"YulIdentifier","src":"6642:3:31"},"nativeSrc":"6642:12:31","nodeType":"YulFunctionCall","src":"6642:12:31"},"variableNames":[{"name":"end","nativeSrc":"6635:3:31","nodeType":"YulIdentifier","src":"6635:3:31"}]}]},"name":"abi_encode_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c_to_t_string_memory_ptr_fromStack","nativeSrc":"6294:366:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6428:3:31","nodeType":"YulTypedName","src":"6428:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6436:3:31","nodeType":"YulTypedName","src":"6436:3:31","type":""}],"src":"6294:366:31"},{"body":{"nativeSrc":"6837:248:31","nodeType":"YulBlock","src":"6837:248:31","statements":[{"nativeSrc":"6847:26:31","nodeType":"YulAssignment","src":"6847:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"6859:9:31","nodeType":"YulIdentifier","src":"6859:9:31"},{"kind":"number","nativeSrc":"6870:2:31","nodeType":"YulLiteral","src":"6870:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6855:3:31","nodeType":"YulIdentifier","src":"6855:3:31"},"nativeSrc":"6855:18:31","nodeType":"YulFunctionCall","src":"6855:18:31"},"variableNames":[{"name":"tail","nativeSrc":"6847:4:31","nodeType":"YulIdentifier","src":"6847:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6894:9:31","nodeType":"YulIdentifier","src":"6894:9:31"},{"kind":"number","nativeSrc":"6905:1:31","nodeType":"YulLiteral","src":"6905:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6890:3:31","nodeType":"YulIdentifier","src":"6890:3:31"},"nativeSrc":"6890:17:31","nodeType":"YulFunctionCall","src":"6890:17:31"},{"arguments":[{"name":"tail","nativeSrc":"6913:4:31","nodeType":"YulIdentifier","src":"6913:4:31"},{"name":"headStart","nativeSrc":"6919:9:31","nodeType":"YulIdentifier","src":"6919:9:31"}],"functionName":{"name":"sub","nativeSrc":"6909:3:31","nodeType":"YulIdentifier","src":"6909:3:31"},"nativeSrc":"6909:20:31","nodeType":"YulFunctionCall","src":"6909:20:31"}],"functionName":{"name":"mstore","nativeSrc":"6883:6:31","nodeType":"YulIdentifier","src":"6883:6:31"},"nativeSrc":"6883:47:31","nodeType":"YulFunctionCall","src":"6883:47:31"},"nativeSrc":"6883:47:31","nodeType":"YulExpressionStatement","src":"6883:47:31"},{"nativeSrc":"6939:139:31","nodeType":"YulAssignment","src":"6939:139:31","value":{"arguments":[{"name":"tail","nativeSrc":"7073:4:31","nodeType":"YulIdentifier","src":"7073:4:31"}],"functionName":{"name":"abi_encode_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c_to_t_string_memory_ptr_fromStack","nativeSrc":"6947:124:31","nodeType":"YulIdentifier","src":"6947:124:31"},"nativeSrc":"6947:131:31","nodeType":"YulFunctionCall","src":"6947:131:31"},"variableNames":[{"name":"tail","nativeSrc":"6939:4:31","nodeType":"YulIdentifier","src":"6939:4:31"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6666:419:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6817:9:31","nodeType":"YulTypedName","src":"6817:9:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6832:4:31","nodeType":"YulTypedName","src":"6832:4:31","type":""}],"src":"6666:419:31"},{"body":{"nativeSrc":"7135:147:31","nodeType":"YulBlock","src":"7135:147:31","statements":[{"nativeSrc":"7145:25:31","nodeType":"YulAssignment","src":"7145:25:31","value":{"arguments":[{"name":"x","nativeSrc":"7168:1:31","nodeType":"YulIdentifier","src":"7168:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7150:17:31","nodeType":"YulIdentifier","src":"7150:17:31"},"nativeSrc":"7150:20:31","nodeType":"YulFunctionCall","src":"7150:20:31"},"variableNames":[{"name":"x","nativeSrc":"7145:1:31","nodeType":"YulIdentifier","src":"7145:1:31"}]},{"nativeSrc":"7179:25:31","nodeType":"YulAssignment","src":"7179:25:31","value":{"arguments":[{"name":"y","nativeSrc":"7202:1:31","nodeType":"YulIdentifier","src":"7202:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7184:17:31","nodeType":"YulIdentifier","src":"7184:17:31"},"nativeSrc":"7184:20:31","nodeType":"YulFunctionCall","src":"7184:20:31"},"variableNames":[{"name":"y","nativeSrc":"7179:1:31","nodeType":"YulIdentifier","src":"7179:1:31"}]},{"nativeSrc":"7213:16:31","nodeType":"YulAssignment","src":"7213:16:31","value":{"arguments":[{"name":"x","nativeSrc":"7224:1:31","nodeType":"YulIdentifier","src":"7224:1:31"},{"name":"y","nativeSrc":"7227:1:31","nodeType":"YulIdentifier","src":"7227:1:31"}],"functionName":{"name":"add","nativeSrc":"7220:3:31","nodeType":"YulIdentifier","src":"7220:3:31"},"nativeSrc":"7220:9:31","nodeType":"YulFunctionCall","src":"7220:9:31"},"variableNames":[{"name":"sum","nativeSrc":"7213:3:31","nodeType":"YulIdentifier","src":"7213:3:31"}]},{"body":{"nativeSrc":"7253:22:31","nodeType":"YulBlock","src":"7253:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7255:16:31","nodeType":"YulIdentifier","src":"7255:16:31"},"nativeSrc":"7255:18:31","nodeType":"YulFunctionCall","src":"7255:18:31"},"nativeSrc":"7255:18:31","nodeType":"YulExpressionStatement","src":"7255:18:31"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7245:1:31","nodeType":"YulIdentifier","src":"7245:1:31"},{"name":"sum","nativeSrc":"7248:3:31","nodeType":"YulIdentifier","src":"7248:3:31"}],"functionName":{"name":"gt","nativeSrc":"7242:2:31","nodeType":"YulIdentifier","src":"7242:2:31"},"nativeSrc":"7242:10:31","nodeType":"YulFunctionCall","src":"7242:10:31"},"nativeSrc":"7239:36:31","nodeType":"YulIf","src":"7239:36:31"}]},"name":"checked_add_t_uint256","nativeSrc":"7091:191:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7122:1:31","nodeType":"YulTypedName","src":"7122:1:31","type":""},{"name":"y","nativeSrc":"7125:1:31","nodeType":"YulTypedName","src":"7125:1:31","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7131:3:31","nodeType":"YulTypedName","src":"7131:3:31","type":""}],"src":"7091:191:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IMyToken_$8371_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMyToken_$8371_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMyToken_$8371_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMyToken_$8371__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMyToken_$8371_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough voting power\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb7ed42afd4451c9c9b5948642a1d717f9ac8691cb1f1fd48aca298e4895546c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061007d5760003560e01c8063609ff1bd1161005b578063609ff1bd146100ef5780639e90d0d91461010d578063b384abef1461013d578063e2ba53f0146101595761007d565b8063013cf08b146100825780632a8cd29e146100b357806355a373d6146100d1575b600080fd5b61009c6004803603810190610097919061049e565b610177565b6040516100aa9291906104f3565b60405180910390f35b6100bb6101ab565b6040516100c8919061051c565b60405180910390f35b6100d96101b1565b6040516100e691906105b6565b60405180910390f35b6100f76101d5565b604051610104919061051c565b60405180910390f35b6101276004803603810190610122919061060f565b610257565b604051610134919061051c565b60405180910390f35b6101576004803603810190610152919061063c565b61026f565b005b61016161042f565b60405161016e919061067c565b60405180910390f35b6001818154811061018757600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000905060005b60018054905081101561025257816001828154811061020157610200610697565b5b9060005260206000209060020201600101541115610245576001818154811061022d5761022c610697565b5b90600052602060002090600202016001015491508092505b80806001019150506101df565b505090565b60036020528060005260406000206000915090505481565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a46b1a8336002546040518363ffffffff1660e01b815260040161030d9291906106d5565b602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e9190610713565b610358919061076f565b1015610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090610800565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103e89190610820565b92505081905550806001838154811061040457610403610697565b5b906000526020600020906002020160010160008282546104249190610820565b925050819055505050565b6000600161043b6101d5565b8154811061044c5761044b610697565b5b906000526020600020906002020160000154905090565b600080fd5b6000819050919050565b61047b81610468565b811461048657600080fd5b50565b60008135905061049881610472565b92915050565b6000602082840312156104b4576104b3610463565b5b60006104c284828501610489565b91505092915050565b6000819050919050565b6104de816104cb565b82525050565b6104ed81610468565b82525050565b600060408201905061050860008301856104d5565b61051560208301846104e4565b9392505050565b600060208201905061053160008301846104e4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061057c61057761057284610537565b610557565b610537565b9050919050565b600061058e82610561565b9050919050565b60006105a082610583565b9050919050565b6105b081610595565b82525050565b60006020820190506105cb60008301846105a7565b92915050565b60006105dc82610537565b9050919050565b6105ec816105d1565b81146105f757600080fd5b50565b600081359050610609816105e3565b92915050565b60006020828403121561062557610624610463565b5b6000610633848285016105fa565b91505092915050565b6000806040838503121561065357610652610463565b5b600061066185828601610489565b925050602061067285828601610489565b9150509250929050565b600060208201905061069160008301846104d5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6106cf816105d1565b82525050565b60006040820190506106ea60008301856106c6565b6106f760208301846104e4565b9392505050565b60008151905061070d81610472565b92915050565b60006020828403121561072957610728610463565b5b6000610737848285016106fe565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061077a82610468565b915061078583610468565b925082820390508181111561079d5761079c610740565b5b92915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820766f74696e6720706f776572000000000000000000600082015250565b60006107ea6017836107a3565b91506107f5826107b4565b602082019050919050565b60006020820190508181036000830152610819816107dd565b9050919050565b600061082b82610468565b915061083683610468565b925082820190508082111561084e5761084d610740565b5b9291505056fea2646970667358221220285e78c6028292ce6c1c5d70ce6ad821631cd89d5fb840445d918042d5de879664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x9E90D0D9 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0xB384ABEF EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x159 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2A8CD29E EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0xD1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP3 SWAP2 SWAP1 PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x51C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x252 JUMPI DUP2 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x201 JUMPI PUSH2 0x200 PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x245 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x22D JUMPI PUSH2 0x22C PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1DF JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3A46B1A8 CALLER PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP3 SWAP2 SWAP1 PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x76F JUMP JUMPDEST LT ISZERO PUSH2 0x399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP1 PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x404 JUMPI PUSH2 0x403 PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x43B PUSH2 0x1D5 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x44C JUMPI PUSH2 0x44B PUSH2 0x697 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47B DUP2 PUSH2 0x468 JUMP JUMPDEST DUP2 EQ PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x498 DUP2 PUSH2 0x472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B4 JUMPI PUSH2 0x4B3 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP5 DUP3 DUP6 ADD PUSH2 0x489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4ED DUP2 PUSH2 0x468 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x508 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x515 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x531 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C PUSH2 0x577 PUSH2 0x572 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58E DUP3 PUSH2 0x561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP3 PUSH2 0x583 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DC DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EC DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x609 DUP2 PUSH2 0x5E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x625 JUMPI PUSH2 0x624 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x633 DUP5 DUP3 DUP6 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x653 JUMPI PUSH2 0x652 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x661 DUP6 DUP3 DUP7 ADD PUSH2 0x489 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x672 DUP6 DUP3 DUP7 ADD PUSH2 0x489 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x691 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6CF DUP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6EA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x6F7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x70D DUP2 PUSH2 0x472 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x729 JUMPI PUSH2 0x728 PUSH2 0x463 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x737 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP3 PUSH2 0x468 JUMP JUMPDEST SWAP2 POP PUSH2 0x785 DUP4 PUSH2 0x468 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x740 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820766F74696E6720706F776572000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA PUSH1 0x17 DUP4 PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x7F5 DUP3 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x819 DUP2 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP3 PUSH2 0x468 JUMP JUMPDEST SWAP2 POP PUSH2 0x836 DUP4 PUSH2 0x468 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x84E JUMPI PUSH2 0x84D PUSH2 0x740 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 MCOPY PUSH25 0xC6028292CE6C1C5D70CE6AD821631CD89D5FB840445D918042 0xD5 0xDE DUP8 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"223:1782:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;397:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1518:349;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;435:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;905:607;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1873:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;397:32::-;;;;:::o;329:29::-;;;;;;;;;;;;:::o;1518:349::-;1566:21;1599;1623:1;1599:25;;1639:6;1634:227;1655:9;:16;;;;1651:1;:20;1634:227;;;1721:16;1696:9;1706:1;1696:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;:41;1692:159;;;1776:9;1786:1;1776:12;;;;;;;;:::i;:::-;;;;;;;;;;;;:22;;;1757:41;;1835:1;1816:20;;1692:159;1673:3;;;;;;;1634:227;;;;1589:278;1518:349;:::o;435:47::-;;;;;;;;;;;;;;;;;:::o;905:607::-;1376:6;1346:14;:26;1361:10;1346:26;;;;;;;;;;;;;;;;1286:13;;;;;;;;;;:26;;;1313:10;1325:17;;1286:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:86;;;;:::i;:::-;:96;;1278:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;1450:6;1420:14;:26;1435:10;1420:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;1499:6;1466:9;1476:8;1466:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;:39;;;;;;;:::i;:::-;;;;;;;;905:607;;:::o;1873:130::-;1918:19;1963:9;1973:17;:15;:17::i;:::-;1963:28;;;;;;;;:::i;:::-;;;;;;;;;;;;:33;;;1949:47;;1873:130;:::o;88:117:31:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:::-;1319:24;1337:5;1319:24;:::i;:::-;1314:3;1307:37;1232:118;;:::o;1356:332::-;1477:4;1515:2;1504:9;1500:18;1492:26;;1528:71;1596:1;1585:9;1581:17;1572:6;1528:71;:::i;:::-;1609:72;1677:2;1666:9;1662:18;1653:6;1609:72;:::i;:::-;1356:332;;;;;:::o;1694:222::-;1787:4;1825:2;1814:9;1810:18;1802:26;;1838:71;1906:1;1895:9;1891:17;1882:6;1838:71;:::i;:::-;1694:222;;;;:::o;1922:126::-;1959:7;1999:42;1992:5;1988:54;1977:65;;1922:126;;;:::o;2054:60::-;2082:3;2103:5;2096:12;;2054:60;;;:::o;2120:142::-;2170:9;2203:53;2221:34;2230:24;2248:5;2230:24;:::i;:::-;2221:34;:::i;:::-;2203:53;:::i;:::-;2190:66;;2120:142;;;:::o;2268:126::-;2318:9;2351:37;2382:5;2351:37;:::i;:::-;2338:50;;2268:126;;;:::o;2400:143::-;2467:9;2500:37;2531:5;2500:37;:::i;:::-;2487:50;;2400:143;;;:::o;2549:165::-;2653:54;2701:5;2653:54;:::i;:::-;2648:3;2641:67;2549:165;;:::o;2720:256::-;2830:4;2868:2;2857:9;2853:18;2845:26;;2881:88;2966:1;2955:9;2951:17;2942:6;2881:88;:::i;:::-;2720:256;;;;:::o;2982:96::-;3019:7;3048:24;3066:5;3048:24;:::i;:::-;3037:35;;2982:96;;;:::o;3084:122::-;3157:24;3175:5;3157:24;:::i;:::-;3150:5;3147:35;3137:63;;3196:1;3193;3186:12;3137:63;3084:122;:::o;3212:139::-;3258:5;3296:6;3283:20;3274:29;;3312:33;3339:5;3312:33;:::i;:::-;3212:139;;;;:::o;3357:329::-;3416:6;3465:2;3453:9;3444:7;3440:23;3436:32;3433:119;;;3471:79;;:::i;:::-;3433:119;3591:1;3616:53;3661:7;3652:6;3641:9;3637:22;3616:53;:::i;:::-;3606:63;;3562:117;3357:329;;;;:::o;3692:474::-;3760:6;3768;3817:2;3805:9;3796:7;3792:23;3788:32;3785:119;;;3823:79;;:::i;:::-;3785:119;3943:1;3968:53;4013:7;4004:6;3993:9;3989:22;3968:53;:::i;:::-;3958:63;;3914:117;4070:2;4096:53;4141:7;4132:6;4121:9;4117:22;4096:53;:::i;:::-;4086:63;;4041:118;3692:474;;;;;:::o;4172:222::-;4265:4;4303:2;4292:9;4288:18;4280:26;;4316:71;4384:1;4373:9;4369:17;4360:6;4316:71;:::i;:::-;4172:222;;;;:::o;4400:180::-;4448:77;4445:1;4438:88;4545:4;4542:1;4535:15;4569:4;4566:1;4559:15;4586:118;4673:24;4691:5;4673:24;:::i;:::-;4668:3;4661:37;4586:118;;:::o;4710:332::-;4831:4;4869:2;4858:9;4854:18;4846:26;;4882:71;4950:1;4939:9;4935:17;4926:6;4882:71;:::i;:::-;4963:72;5031:2;5020:9;5016:18;5007:6;4963:72;:::i;:::-;4710:332;;;;;:::o;5048:143::-;5105:5;5136:6;5130:13;5121:22;;5152:33;5179:5;5152:33;:::i;:::-;5048:143;;;;:::o;5197:351::-;5267:6;5316:2;5304:9;5295:7;5291:23;5287:32;5284:119;;;5322:79;;:::i;:::-;5284:119;5442:1;5467:64;5523:7;5514:6;5503:9;5499:22;5467:64;:::i;:::-;5457:74;;5413:128;5197:351;;;;:::o;5554:180::-;5602:77;5599:1;5592:88;5699:4;5696:1;5689:15;5723:4;5720:1;5713:15;5740:194;5780:4;5800:20;5818:1;5800:20;:::i;:::-;5795:25;;5834:20;5852:1;5834:20;:::i;:::-;5829:25;;5878:1;5875;5871:9;5863:17;;5902:1;5896:4;5893:11;5890:37;;;5907:18;;:::i;:::-;5890:37;5740:194;;;;:::o;5940:169::-;6024:11;6058:6;6053:3;6046:19;6098:4;6093:3;6089:14;6074:29;;5940:169;;;;:::o;6115:173::-;6255:25;6251:1;6243:6;6239:14;6232:49;6115:173;:::o;6294:366::-;6436:3;6457:67;6521:2;6516:3;6457:67;:::i;:::-;6450:74;;6533:93;6622:3;6533:93;:::i;:::-;6651:2;6646:3;6642:12;6635:19;;6294:366;;;:::o;6666:419::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6919:9;6913:4;6909:20;6905:1;6894:9;6890:17;6883:47;6947:131;7073:4;6947:131;:::i;:::-;6939:139;;6666:419;;;:::o;7091:191::-;7131:3;7150:20;7168:1;7150:20;:::i;:::-;7145:25;;7184:20;7202:1;7184:20;:::i;:::-;7179:25;;7227:1;7224;7220:9;7213:16;;7248:3;7245:1;7242:10;7239:36;;;7255:18;;:::i;:::-;7239:36;7091:191;;;;:::o"},"methodIdentifiers":{"proposals(uint256)":"013cf08b","targetBlockNumber()":"2a8cd29e","tokenContract()":"55a373d6","vote(uint256,uint256)":"b384abef","votePowerSpent(address)":"9e90d0d9","winnerName()":"e2ba53f0","winningProposal()":"609ff1bd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_proposalNames\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_targetBlockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IMyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votePowerSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenizedBallot.sol\":\"TokenizedBallot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TokenizedBallot.sol\":{\"keccak256\":\"0xec15550802b3a04ca457e2e69de4c944753334148026b247501fe0a212b84156\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ccf6039af8487e9c8539d9e7307850ecd434b1639e1923facb8884782b00c7\",\"dweb:/ipfs/QmXuyU1Ere8wg3kmHY5xvKn69QbQMZJPqFGggVb24Cf4VE\"]}},\"version\":1}"}}}}}